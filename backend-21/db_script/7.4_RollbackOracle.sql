 --Rollback Query For Remarks Column in Voms Batches
 ALTER TABLE voms_batches
 DROP (
  first_approver_remarks,
  second_approver_remarks,       
  third_approver_remarks,
  first_approved_by,
  second_approved_by,
  third_approved_by,
  first_approved_on,
  second_approved_on,
  third_approved_on              
  );
  commit;
  
  CREATE OR REPLACE PROCEDURE RP2PDWHTEMPPRC
(
           P_DATE                 IN DATE,
           P_MASTERCNT            OUT NUMBER,
           P_CHTRANSCNT           OUT    NUMBER,
           P_C2STRANSCNT          OUT    NUMBER,
           P_MESSAGE              OUT VARCHAR2
)
IS

SQLEXCEPTION EXCEPTION;
EXITEXCEPTION EXCEPTION;

BEGIN
        DBMS_OUTPUT.PUT_LINE('START RP2P DWH PROC');

        EXECUTE IMMEDIATE 'TRUNCATE TABLE TEMP_RP2P_DWH_MASTER';
        EXECUTE IMMEDIATE 'TRUNCATE TABLE TEMP_RP2P_DWH_CHTRANS';
        EXECUTE IMMEDIATE 'TRUNCATE TABLE TEMP_RP2P_DWH_C2STRANS';


    INSERT INTO TEMP_RP2P_DWH_MASTER ( SRNO, DATA )
    SELECT ROWNUM,(U.USER_ID||','||PARENT_ID||','||OWNER_ID||','||USER_TYPE||','||EXTERNAL_CODE||','||MSISDN
    ||','||REPLACE(L.LOOKUP_NAME,',',' ')||','||REPLACE(LOGIN_ID,',',' ')||','||U.CATEGORY_CODE||','||CAT.CATEGORY_NAME||','||
    UG.GRPH_DOMAIN_CODE||','||REPLACE(GD.GRPH_DOMAIN_NAME,',',' ')||','||
    REPLACE(USER_NAME,',',' ')||','||REPLACE(CITY,',',' ')||','||REPLACE(STATE,',',' ')||','||REPLACE(COUNTRY,',',' ')||',' ||',' ) DATA FROM USERS U, 

CATEGORIES CAT,USER_GEOGRAPHIES UG,GEOGRAPHICAL_DOMAINS GD,LOOKUPS L, LOOKUP_TYPES LT
    WHERE U.USER_ID=UG.USER_ID AND U.CATEGORY_CODE=CAT.CATEGORY_CODE AND U.STATUS<>'C'
    AND UG.GRPH_DOMAIN_CODE=GD.GRPH_DOMAIN_CODE AND L.LOOKUP_CODE=U.STATUS
    AND LT.LOOKUP_TYPE='URTYP' AND LT.LOOKUP_TYPE=L.LOOKUP_TYPE AND TRUNC(U.CREATED_ON)<=P_DATE
    AND USER_TYPE='CHANNEL';
    COMMIT;
    SELECT MAX(SRNO) INTO P_MASTERCNT FROM TEMP_RP2P_DWH_MASTER;



    INSERT INTO TEMP_RP2P_DWH_CHTRANS ( SRNO, DATA )
    SELECT ROWNUM,DATA FROM (SELECT (CT.TRANSFER_ID||','||REQUEST_GATEWAY_TYPE||','||TO_CHAR

(CT.TRANSFER_DATE,'DD/MM/YYYY')
    ||','||TO_CHAR(CT.CREATED_ON,'DD/MM/YYYY HH12:MI:SS PM')||','||CT.NETWORK_CODE
    ||','||CT.TRANSFER_TYPE||','||CT.TRANSFER_SUB_TYPE||','||CT.TRANSFER_CATEGORY
    ||','||CT.TYPE||','||CT.FROM_USER_ID||','||CT.TO_USER_ID||','||CT.MSISDN||','||CT.TO_MSISDN
    ||','||CT.SENDER_CATEGORY_CODE||','||CT.RECEIVER_CATEGORY_CODE||','||
    CTI.SENDER_DEBIT_QUANTITY||','||CTI.RECEIVER_CREDIT_QUANTITY||','||CT.TRANSFER_MRP
    ||','||CTI.MRP||','||CTI.PAYABLE_AMOUNT||','||CTI.NET_PAYABLE_AMOUNT||','||0
    ||','||CTI.TAX1_VALUE||','||CTI.TAX2_VALUE||','||CTI.TAX3_VALUE||','||CTI.COMMISSION_VALUE
    ||','||','||','||CT.EXT_TXN_NO||','||TO_CHAR(CT.EXT_TXN_DATE,'DD/MM/YYYY')||','||','||CTI.PRODUCT_CODE||','||','
    || DECODE(CT.STATUS ,'CLOSE','200','240') ||','||','||','||','||','||','||','||','||','||','||CT.CELL_ID||','
||CTI.SENDER_POST_STOCK||','||CTI.SENDER_PREVIOUS_STOCK||','||CTI.RECEIVER_POST_STOCK||','||CTI.RECEIVER_PREVIOUS_STOCK||','||','||','||CT.SOS_STATUS||','||CT.SOS_SETTLEMENT_DATE||',') DATA     

            FROM CHANNEL_TRANSFERS CT,CHANNEL_TRANSFERS_ITEMS CTI
    WHERE CT.TRANSFER_ID=CTI.TRANSFER_ID(+)
    AND CT.STATUS IN('CLOSE','CNCL') AND TRUNC(CT.CLOSE_DATE)=P_DATE
    ORDER BY CT.MODIFIED_ON,CT.TYPE);
    COMMIT;
    SELECT MAX(SRNO) INTO P_CHTRANSCNT FROM TEMP_RP2P_DWH_CHTRANS;



    INSERT INTO TEMP_RP2P_DWH_C2STRANS ( SRNO, DATA,TRANSFER_STATUS)
    SELECT ROWNUM,DATA,TRANSFER_STATUS FROM (SELECT (CT.TRANSFER_ID||','||REQUEST_GATEWAY_TYPE||','||TO_CHAR

(CT.TRANSFER_DATE,'DD/MM/YYYY')
    ||','||TO_CHAR(CT.TRANSFER_DATE_TIME,'DD/MM/YYYY HH12:MI:SS PM')||','||CT.NETWORK_CODE||','||CT.SERVICE_TYPE||','||','||   'SALE'||','||'C2S'||','||

CT.SENDER_ID||','||','||CT.SENDER_MSISDN||','||CT.RECEIVER_MSISDN||','||
    CT.SENDER_CATEGORY||','||','||CT.SENDER_TRANSFER_VALUE||','||CT.RECEIVER_TRANSFER_VALUE||','||
    CT.TRANSFER_VALUE||','||CT.QUANTITY||','||','||','|| CT.RECEIVER_ACCESS_FEE||','||
    CT.RECEIVER_TAX1_VALUE||','||CT.RECEIVER_TAX2_VALUE||','||0||','||','||CT.DIFFERENTIAL_APPLICABLE||','||
    CT.DIFFERENTIAL_GIVEN||','||','||','||','||CT.PRODUCT_CODE||','||CT.CREDIT_BACK_STATUS||','||CT.TRANSFER_STATUS
    ||','||CT.RECEIVER_BONUS_VALUE||','||CT.RECEIVER_VALIDITY||','||CT.RECEIVER_BONUS_VALIDITY||','
    ||CT.SERVICE_CLASS_CODE||','||CT.INTERFACE_ID||','||CT.CARD_GROUP_CODE
    ||','||REPLACE(KV.VALUE,',',' ')||','||CT.SERIAL_NUMBER||','||CT.INTERFACE_REFERENCE_ID||','||CT.CELL_ID||','||CT.SENDER_POST_BALANCE||','||CT.SENDER_PREVIOUS_BALANCE||','||CT.RECEIVER_POST_BALANCE||','||CT.RECEIVER_PREVIOUS_BALANCE||','||CT.REVERSAL_ID||','||CT.SUB_SERVICE ||',') DATA,CT.TRANSFER_STATUS TRANSFER_STATUS
    FROM C2S_TRANSFERS CT, KEY_VALUES KV ,Service_Type_Selector_Mapping STSM WHERE CT.TRANSFER_DATE=P_DATE  AND stsm.SELECTOR_CODE=CT.SUB_SERVICE AND stsm.SERVICE_TYPE=CT.SERVICE_TYPE 
    AND KV.KEY(+)=CT.ERROR_CODE AND KV.TYPE(+)='C2S_ERR_CD' ORDER BY CT.TRANSFER_DATE_TIME);
    COMMIT;

    SELECT MAX(SRNO) INTO P_C2STRANSCNT FROM TEMP_RP2P_DWH_C2STRANS;


    DBMS_OUTPUT.PUT_LINE('RP2P DWH PROC COMPLETED');
    P_MESSAGE:='SUCCESS';

    EXCEPTION
                 WHEN SQLEXCEPTION THEN
            P_MESSAGE:='NOT ABLE TO MIGRATE DATA, SQL EXCEPTION OCCOURED';
            RAISE EXITEXCEPTION;
                 WHEN OTHERS THEN
                        P_MESSAGE:='NOT ABLE TO MIGRATE DATA, EXCEPTION OCCOURED';
                        RAISE  EXITEXCEPTION;

END; 

/* On demand voucher - Test type - Tejeshvi*/
DROP TABLE CHANNEL_VOUCHER_ITEMS;

DELETE FROM VOMS_TYPES WHERE VOUCHER_TYPE IN ('test_phy','test_elect');

DELETE FROM LOOKUPS WHERE VOUCHER_TYPE IN ('ET','PT');

DELETE FROM VOMS_VTYPE_SERVICE_MAPPING WHERE VOUCHER_TYPE IN ('test_elect','test_elect');

ALTER TABLE VOMS_TYPES MODIFY "TYPE" VARCHAR2(1) DEFAULT 'E';
/* On demand voucher - Test type - Tejeshvi*/

/* Payment Gateway*/  

DROP TABLE CHANNEL_TRANSFER_PAYMENTS;

ALTER TABLE CHANNEL_TRANSFERS DROP COLUMN RECONCILIATION_BY;
ALTER TABLE CHANNEL_TRANSFERS DROP COLUMN RECONCILIATION_DATE;
ALTER TABLE CHANNEL_TRANSFERS DROP COLUMN RECONCILIATION_FLAG;
ALTER TABLE CHANNEL_TRANSFERS DROP COLUMN RECONCILIATION_REMARK;

COMMIT;