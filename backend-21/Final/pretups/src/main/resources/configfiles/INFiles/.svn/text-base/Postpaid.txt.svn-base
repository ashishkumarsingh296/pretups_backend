###############################################################################################################
##    Entries for the queuetable (POSTPIAD_CUST_PAY_MASTER ) & Intergration tool
## 
## 
###############################################################################################################

## Multiplication factor is used to convert amount from PreTUPS system amount to the interface amount to be
## stored in the queuetable
MULTIPLICATION_FACTOR=1
 
## SIZE_CHECK_REQUIRED represents that the size check on records of POSTPIAD_CUST_PAY_MASTER on the diffrent services.
## The services on which this check is applicable will be defined in the PreTUPS System. 
## The name of service which is mentioned here only on those services this check will be applicable. 
## To represent more than one service value will be seperated by comma. for e.g. BILLPMT,PRE-POST.
SIZE_CHECK_REQUIRED=BILLPMT,PRE-POST

## <SERVICE_TYPE>_SERVICE_TYPE. It represents the service types allowed for the defined service type. 
## if there is more than one allowed service types, then allowed service types will be defined as comma seperated, 
## for e.g. BILLPMT,PRE-POST.
## The syntax of entry will be as mentione below
## <SERVICE_TYPE>_SERVICE_TYPE. <SERVICE_TYPE> it will be replaced by service type name. 
##  service type name will be Service types defined in the system.
## if it requires to define more service types for which different services are allowed, then there will be more entry of such type. 
## for e.g. 
## 1.) BILLPMT_SERVICE_TYPE=BILLPMT ----- for Bill payment service
## 2.) PRE-POST_SERVICE_TYPE=BILLPMT,PRE-POST ----- for Prepaid to Postpaid service
## apart from above mentioned value the value of service type can be blank or ALL.
BILLPMT_SERVICE_TYPE=BILLPMT

## <SERVICE_TYPE>_ALLOWED_QUEUE_SIZE. It represents the queue size for defined service type.
## if more than one service type is defined as comma separated then it will be applicale for the both service type 
## The syntax of entry will be as mentione below
## <SERVICE_TYPE>_ALLOWED_QUEUE_SIZE. <SERVICE_TYPE> it will be replaced by service type name. 
##  service type name will be Service types defined in the system.
## if it require to define queue size for more service type, then there will be more entry of such type. 
## for e.g. 
## 1.) BILLPMT_ALLOWED_QUEUE_SIZE=6 ----- for Bill payment service
## 2.) PRE-POST_ALLOWED_QUEUE_SIZE=6 ----- for Prepaid to Postpaid service
BILLPMT_ALLOWED_QUEUE_SIZE=6

## Default queue size, if no size is defined for any service.
ALLOWED_QUEUE_SIZE=7

#Whether Post Balance needs to be given in response or not (Y/N)
POST_BALANCE_ENQ_SUCCESS=N

####################################################################################################################
#	
#
#	wHITE LIST ENTRIES
#	These Entries are added in  POST PAID interface	to support the 
#	White list management.
#
####################################################################################################################

## Parser class is defined to parse the white list data,This parser class may be different for the different type of ## whitelist files, class name is defined with fully qualified path.
PARSER_CLASS_PATH_NAME=com.btsl.pretups.whitelist.businesslogic.DefaultParser

## Movement code is associate with each record in white list, we define MCODE_INSERT for CR
MCODE_INSERT=CR

## Movement code is associate with each record in white list, we define MCODE_DLETE for SUP
MCODE_DELETE=SUP

## Movement code is associate with each record in white list, we define MCODE_UPDATE for UP
MCODE_UPDATE=UP

## Required length of IMSI for validation, provided by the operator. imsi of each record is validated against this length. 
IMSI_LENGTH=10

## Records in the file will be separated by this delimiter, provided by the operator
DELIMITER=,

## Amount of each record is multiplied by this multiplication factor, provided by the operator
MUL_FACTOR=10

## The number of column will be present in the white list file, provided by the operator
COLUMN_NUMBERS=7

## Format of each record of white list file. Sequence of columns in white list file will be same as defined by this format.
FORMAT=MSISDN,ACCOUNT_STATUS,CREDIT_LIMIT,IMSI,ACCOUNT_ID,SERVICE_CLASS,MOVEMENT_CODE


###########################################################################################################################
##				Entries for CDR generation Process			 
##											 
###########################################################################################################################

## INTERFACE_CLASS represent Fully qualified name of CDR Record generation class. This Class will 
# be different for the different postapaid interfaces.
INTERFACE_CLASS=com.btsl.pretups.inter.post.cdr.MobinilCDRGeneration

## RECORD_SIZE represent the size of single record in the CDR file. it is in bytes i.e. number of characters in a record. 
RECORD_SIZE=256

## SERVICE_TYPE represent, that this Process is applicable for which services. Services are defined in PreTUPS system. 
## if there is more than one srvice then value will be comma seperated. for e.g. 
## if there are two service like BILLPMT and PRE_POST, then expected value will be BILLPMT,PRE_POST.
SERVICE_TYPE=BILLPMT

## TIME_CONSTRAINT fields represent, that whether the time slot of process can be initialize to 00:00 hrs or not.
## The expected value for this is 'Y' or 'N'. If it is N then the process will not initialize at 00:00 hrs. 
## If it is Y then the process will be initialize at 00:00 hrs. deafult value of this will be Y
## for e.g. The file interval is 4 hrs. While CDR file processing, the time slot generated are,   
## 1.) 17/05/06 7:00 P.M to 17/05/06 11:00 P.M
## 2.) 17/05/06 11:01 P.M to 18/05/06 00:00 A.M --------- initialized at 00:00 hrs
## 3.) 18/05/06 00:01 A.M to 18/05/06 04:00 A.M
## as above mentioned time slot, the time slot is initialized at 00:00 hrs. only if TIME_CONSTRTAINT is Y. 
## other wise the slot will be like as mentoined below
## 1.) 17/05/06 7:00 P.M to 17/05/06 11:00 P.M
## 2.) 17/05/06 11:01 P.M to 18/05/06 03:00 A.M --------- not initialized at 00:00 hrs
## 3.) 18/05/06 03:01 A.M to 18/05/06 04:00 A.M
TIME_CONSTRAINT=Y

## FILE_INTERVAL represent the duration of file generation while processing CDR Records.
## possible value of FILE_INTERVAL will be only one among 1,2,3,4,6,8,12,24 and so on..(value in hours)
FILE_INTERVAL=3

## FILE_SIZE_RECORD represent that whether the file size will depend upon no of records in the file or size of file in bytes 
## possible value can be are 'Y' and 'N'.
## If value is Y: the size of file will depend upon number of records. 
## If it is N then size will depend upon size of file like MB.
FILE_SIZE_RECORD=Y

## FILE_SIZE represent the isze of file. if FILE_SIZE_RECORD is Y then it is number of record. 
## If FILE_SIZE_RECORD is N the it is number of bytes in file. the size is in MB.
FILE_SIZE=100

## Initial name of file which will be generated by process.
INITIAL_FILE_NAME=Rated_02_

## Extension of generated file.
FILE_EXTENTION=DAT

## Path where file will be generated
FILE_PATH=/home/pretups_test/tomcat5/CDRFILE/

## All below mentioned field and value will be used in CDR file and these mentioned value cannot be changed as 
## these values are specified by operator.

## The name of the CDR file according to subscriber type. NM means Normal subscriber
SUBSCRIBER_RECORD_TYPE=NM

## A sequence number generated by the CDR translator. it is intial valu
SEQUENCE_NUMBER=1

## The version of the Generic Call Record specification. 
## This will be used to ensure later versions of software can discriminate between different record formats
VERSION=1.0

## The type of switch that the call records originate from.
SWITCH_TYPE=T

## Specifies the type of call record.1 means Mobile Originated Call. 
CALL_RECORD_TYPE=1

## Specifies whether the MS is an ordinary or hot billing subscriber
SUBSCRIPTION_TYPE=1

## Specifies whether the call was successfully terminated or not. 1 means Successfully termination
CALL_TERMINATION_TYPE=1

## Specifies how the call was terminated in case of an abnormal termination of the call. 1 means No code provided
CALL_TERMINATION_ERR_CODE=1

## Specifies whether the following 'Caller MSISDN' is a national or an international number. 
## International numbers will be preceded with their international dialling code. 1 means national
CALLER_MSISDN_TYPE=1

## Specifies whether the following 'Call Partner Identity' is a national or an international number. 
## International numbers will be preceded with their international dialling codes. means national.
CALL_PARTNER_ID_TYPE=1

## The MSISDN of either the caller or the called subscriber depending on the Call Type
CALL_PARTNERID=

## The international standard code for the basic service
BASIC_SERVICE=11

## The international standard code for the bearer service
BEARER_CAPABILITY=00

## The duration of the call in seconds.
CALL_DURATION=000001

## Specifies whether the following 'MSC  Identity' is a national or an international number. 
## International numbers will be preceded with their international dialling codes. 1 means national
MSC_ID_TYPE=1

## The MSC at which the call was recorded.
MSC_ID=

## Specifies whether the following 'MS Location' is a national or an international number. 
## International numbers will be preceded with their international dialling codes.
MS_LOCATION_TYPE=

## Depending on the call type this field will hold a Cell Id, the MSRN, Mobile Subscriber Roaming Number or a forwarded to number.
MS_LOCATION=

## Specifies whether the following 'MS Location Extension' is a national or an international number. 
## International numbers will be preceded with their international dialling codes.
MS_LOCATION_EXTN_TYPE=

## Specifies the MSRN  of the forwarded-to MS.
MS_LOCATION_EXTN=

## The IMEI of either the calling or called MS depending on the call type. 
## Not used for non-MOC and MTC call types.
EQUIPMENT_ID=

## Status of equipment. This item of information is received from the EIR database.
EQUIPMENT_STATUS=

## Specifies the origin of the call.
CALL_ORIGIN=

## Specifies the type of channel used during the call.
CHANNEL_TYPE=

## Identity of the outgoing trunk group reported by the SSP (Service Switching Point)
LINK_ID=

## The GSM Supplementary Service Codes for any service that were used during the period of the call
SUPPL_SERVICES=USSD0001

## The name of the outgoing truck group
OUTGNG_TRUNK_GRP=

## The name of the incoming trunk group
INCMG_TRUNK_GRP=

## Padding to make the generic call record upto 256 bytes.
FILLER=

## the filler for start of trailer record
FILLER_TRAILER_START=

## A character that denotes the record is a trailer record. Set to 'T'
RECORD_TYPE=T

## the filler for end of trailer record
FILLER_TRAILER_END=

## Msisdn prefix
MSISDN_PREFIX_CDR=0

#For Mobinil
CDR_FIELD_SEPARATOR=,
CDRFILE_PRC=12
CDRFILE_PCR=11
CDRFILE_PPB=PPB
CDRFILE_COUNTRY_CODE=20
CDRFILE_MULTIPLICATION_FACTOR=1
CDRFILE_END_OF_LINE=0x3A

######Entries use in all IN files

#Indicates whether Cancel request supported by IN or not.(Possible values are Y/N)
CANCEL_TXN_ALLOWED=N

##If any ambiguous response is received from IN, then retry/cancel command is sent to IN. Then response of retry/cancel is matched in the IN file and mapped error code (250/206/200) is picked and sent to Controller.
##SYSTEM_STATUS_MAPPING=INErrCode1,INErrCode2,INErrCode3,INErrCode4:system_err_code1|INErrCode5,INErrCode6:system_err_code2
##system_err_code1 and system_err_code2 will be sent to system and written in recon log file.
#SYSTEM_STATUS_MAPPING=250:250
##If receiver credit is AMBIGUOS, then in SYSTEM_PREFERENCE, CREDIT_BACK_ALLOWED should be N.

#If an ambiguous case occurs while credit, mapped error code can be set to one of the codes(SUCCESS, FAIL and AMBIGUOUS)
SYSTEM_STATUS_MAPPING_CREDIT=250:250

#If an ambiguous case occurs while credit, mapped error code can be set to one of the codes(SUCCESS, FAIL and AMBIGUOUS)
SYSTEM_STATUS_MAPPING_CREDIT_ADJ=250:250

#If an ambiguous case occurs while debitAdjust, mapped error code cannot be SUCCESS. It can only be FAIL or AMBIGUOUS
SYSTEM_STATUS_MAPPING_DEBIT_ADJ=250:250

#If an ambiguous case occurs while credit Back, mapped error code can not be fail, it can only be SUCCESS or AMBIGOUOS
SYSTEM_STATUS_MAPPING_CREDIT_BCK=250:200

##If any ambiguous response is received from IN, check if cancel txn allowed or not in the system. if not, pick mapped error code against NA otherwise pick mapped error code (206/250) against received response code of Cancellation from IN. 
##CANCEL_COMMAND_STATUS_MAPPING=INErrCode1,INErrCode2,INErrCode3,INErrCode4:cancel_err_code1|INErrCode5,INErrCode6:cancel_err_code2
##cancel_err_code1, cancel_err_code2 will be written in recon log file.
CANCEL_COMMAND_STATUS_MAPPING=NA:450

#Defines the cancel command status when cancel not supported by IN. 
CANCEL_NA=NA

##This flag should be Y if interface closure feature is to be provided to client
INTFCE_CLSR_SUPPORT=N

#maximum number of ambiguous transactions allowed till threshold time.
NO_ALLWD_AMB_TXN=1

##time duration in which maximum number of ambiguous transactions is defined
THRESHOLD_TIME=240000

##Time duration after which interface suspension expires.
EXPIRY_TIME=60000

##Auto Resumption supported by IN or not.
AUTO_RESUME_SUPPORT=N

##Number of retry attempts while validation 
VAL_RETRY_CNT=0

##Number of retry attempts while recharge request 
CREDIT_RETRY_CNT=0

##Number of retry attempts while sending Adjustment request 
ADJ_RETRY_CNT=0
(Currently Cancel Request is not supported by Alcatel10)
CNCL_RETRY_CNT=0

##Sleep time between two retries
RETRY_SLEEP_TIME=0

##Error Codes when retry has to be made  
RETRY_CASES=

##Remark1 in Reconcialiationlog
REMARK1=

##Remark2 in Reconcialiationlog
REMARK2=