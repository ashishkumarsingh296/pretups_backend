#C2C transfer
PC2CTRF1:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Transfer from {0} to {1} is successful.
SC2CTRF1:PRETUPS-443,PRETUPS-399|C2C Transfer|To verify that valid message appears on C2C Transfer from {0} to {1}.
SC2CTRF2:PRETUPS-443,PRETUPS-399|C2C Transfer|To validate Network Stocks on successful Channel to Channel Transfer.
SC2CTRF3:PRETUPS-443,PRETUPS-399|C2C Transfer|To validate Receiver User Balance on successful Channel to Channel Transfer.
UC2CTRF1:PRETUPS-399|C2C Transfer|To verify that an enquiry is available in C2C Transfers Enquiry on Successful C2C Transfer.
UC2CTRF2:PRETUPS-399|C2C Transfer|To verify that C2C Transfer is not successful if Receiver channel user is suspended.
SITC2CTRF1:PRETUPS-944|C2C Transfer|To verify that C2C Transfer is not successful if Sender channel user is suspended.
SITC2CTRF2:PRETUPS-947|C2C Transfer|To verify that channel transfer is not initiated if  Sender is OUT suspended.
SITC2CTRF3:PRETUPS-949|C2C Transfer|To verify that C2C transfer is not successful if Transfer Control Profile associated with sender is not active in the system.
SITC2CTRF4:PRETUPS-951|C2C Transfer|To verify that C2C transfer is not successful if Transfer Control Profile associated with receiver is not active in the system.
SITC2CTRF5:PRETUPS-955|C2C Transfer|To verify that if sender user perform c2c transaction of more than allowed maximum percentage via {0} then transaction get failed.
SITC2CTRF6:PRETUPS-955|C2C Transfer|To verify that if sender user perform c2c transaction of more than allowed maximum percentage from all the available products  then transaction get failed.
SITC2CTRF7:PRETUPS-956|C2C Transfer|To verify that if sender user perform c2c transaction of more than maximum balance of product {0}  then transaction get failed.
SITC2CTRF8:PRETUPS-960|C2C Transfer|To verify that C2C transfer is not successful if the quantity to be transferred for {0} is not a multiple of value defined in the receiver's Commission profile
SITC2CTRF9:PRETUPS-960|C2C Transfer|To verify that C2C transfer is not successful if the quantity to be transferred for all products is not a multiple of value defined in the receiver's Commission profile
SITC2CTRF10:PRETUPS-962|C2C Transfer|To verify that C2C transfer will not be successful if requested amount is not in between minimum and maximum quantity allowed for product {0} in the receiver's commission profile.
SITC2CTRF11:PRETUPS-962|C2C Transfer|To verify that C2C transfer will not be successful if receiver Commission profile slab for {0} is not defined for the requested quantity.
SITC2CTRF12:PRETUPS-962|C2C Transfer|To verify that C2C transfer will not be successful if requested amount is not in between minimum and maximum quantity allowed for all products in the receiver's commission profile.
SITC2CTRF13:PRETUPS-962|C2C Transfer|To verify that C2C transfer will not be successful if receiver's Commission profile slab for all products is not defined for the requested quantity.
SITC2CTRF14:PRETUPS-973|C2C Transfer|To verify that for C2C, if sender balance for product {0} crosses the minimum allowed balance (from transfer control profile) then transaction will be failed.
SITC2CTRF15:PRETUPS-981|C2C Transfer|To validate commission while performing c2c transaction via {0}.
SITC2CTRF16:PRETUPS-986|C2C Transfer|To verify that PIN of sender get blocked from WEB interface when invalid PIN is entered and also PIN block error message appear on WEB.
SITC2CTRF17:PRETUPS-989|C2C Transfer|To verify that C2C transfer is not successful if commission profile - {0} for receiver {1} is suspended.
SITC2CTRF18:PRETUPS-990|C2C Transfer|To verify that C2C transfer is not successful if commission profile - {0} for sender {1} is suspended.

#C2S Recharge
PC2STRF1:PRETUPS-317,PRETUPS-503,PRETUPS-402|C2S Recharge|To verify that {0} category user is able to perform C2S Recharge.
SITC2STRF1:PRETUPS-000|C2S Recharge|To verify that channel user is not able to perform Customer Recharge through WEB if subscriber MSISDN is not correct.
SITC2STRF2:PRETUPS-000|C2S Recharge|To verify that channel user is not able to perform C2S Customer Recharge recharge if channel user is OUT suspended
SITC2STRF3:PRETUPS-000|C2S Recharge|To verify that Channel user should not be able to perform C2S recharge if associated TCP is suspended in the system.
SITC2STRF4:PRETUPS-000|C2S Recharge|To verify that if sender user perform c2s transaction of more than allowed maximum percentage then transaction get failed.
SITC2STRF5:PRETUPS-000|C2S Recharge|To verify that channel user is not able to perform C2S recharge if Recharge amount is less than the Minimum amount defined in  'Per C2S transaction amount' in the associated TCP.
SITC2STRF6:PRETUPS-000|C2S Recharge|To verify that channel user is not able to perform C2S recharge if Recharge amount is greater than the maximum amount defined in  'Per C2S transaction amount' in the associated TCP.
SITC2STRF7:PRETUPS-000|C2S Recharge|To verify  that channel user is able to perform consecutive recharge of different amount to same subscriber if <br> 1 ) Successive MRP Block out time = True.<br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time =120(E.g time in seconds)' preference.
SITC2STRF8:PRETUPS-000|C2S Recharge|To verify  that channel user is not able to perform consecutive recharge of same amount to same subscriber if <br> 1 ) Successive MRP Block out time = True. <br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time =120(E.g time in seconds)' preference.
SITC2STRF9:PRETUPS-000|C2S Recharge|To verify  that channel user is not able to perform consecutive recharge of same amount to any subscriber if <br> 1 ) Successive MRP Block out time = False. <br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time =120(E.g time in seconds)' preference.
SITC2STRF10:PRETUPS-000|C2S Recharge|To verify  that channel user is able to perform consecutive recharge of same amount to any subscriber if <br> 1 ) Successive MRP Block out time = False. <br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time =0(E.g time in seconds)' preference.

#Update Cache
PUPDATECACHE:PRETUPS-863|Update Cache|To verify that Operator User is able to perform Update Cache.

#Operator user creation
POPTCREATION1:PRETUPS-413,PRETUPS-278,PRETUPS-381|Operator User Creation|To verify that {0} is able to create {1}.
POPTCREATION2:PRETUPS-413,PRETUPS-278|Operator User Creation|To verify that newly created {0} is prompted to change password after successful login for the first attempt and also able to change password.
POPTCREATION3:PRETUPS-413,PRETUPS-278|Operator User Creation|To verify that newly created {0} is able to change pin.
SOPTCREATION1:PRETUPS-278,PRETUPS-381|Operator User Creation|To verify that valid message is displayed after initiating {0}.
SOPTCREATION2:PRETUPS-278,PRETUPS-381|Operator User Creation|To verify that {0} is able to approve {1}.
SOPTCREATION3:PRETUPS-278,PRETUPS-381|Operator User Creation|To verify that valid message is displayed after approval of {0}.
UOPTCREATION1:PRETUPS-381|Operator User Creation|To verify that {0} is able to modify details of {1}.
UOPTCREATION2:PRETUPS-381|Operator User Creation|To verify that {0} is able to view details of {1}.
SITOPTCREATION1:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} when First Name is blank.
SITOPTCREATION2:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Subscriber Code is left Blank.
SITOPTCREATION3:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Division is left Blank.
SITOPTCREATION4:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if LoginID is left Blank.
SITOPTCREATION5:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Password is left Blank.
SITOPTCREATION6:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Confirm Password is left Blank.
SITOPTCREATION7:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Confirm Password is different from Password entered.
SITOPTCREATION8:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Password contains sequential characters.
SITOPTCREATION9:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Password length is less than {2}.
SITOPTCREATION10:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Confirm Password length is less than {2}.
SITOPTCREATION11:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Network is not assigned.
SITOPTCREATION12:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Geography is not assigned.
SITOPTCREATION13:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Phone Number is not assigned.
SITOPTCREATION14:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Product is not assigned.
SITOPTCREATION15:PRETUPS-922|Operator User Creation|To verify that {0} is unable to initiate {1} if Domain is not assigned.
SITOPTCREATION16:PRETUPS-922|Operator User Creation|To verify that {0} is unable to modify {1} if UserName is blank.
SITOPTCREATION17:PRETUPS-922|Operator User Creation|To verify that {0} is unable to modify if category is not selected.
SITOPTCREATION18:PRETUPS-922|Operator User Creation|To verify that {0} is unable to approve if LoginID is not selected.
SITOPTCREATION19:PRETUPS-922|Operator User Creation|To verify that valid message is displayed after non approval of {0} .
SITOPTCREATION20:PRETUPS-922|Operator User Creation|To verify that valid message is displayed after rejection of {0} .
SITOPTCREATION21:PRETUPS-922|Operator User Creation|To verify that valid message is displayed after Deletion of {0} .
SITOPTCREATION22:PRETUPS-922|Operator User Creation|To verify that {0} is unable to view if category is not selected.
SITOPTCREATION23:PRETUPS-922|Operator User Creation|To verify that {0} is unable to view {1} if UserName is blank.
SITOPTCREATION24:PRETUPS-922|Operator User Creation|To verify that {0} is unable to add {1} if loginID is duplicate.
SITOPTCREATION25:PRETUPS-922|Operator User Creation|To verify that Deleted Operator login id can be re-assigned to any other user.

#Channel user creation
PCHNLCREATION1:PRETUPS-444,PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that Operator user is able to initiate {0} category Channel user with parent category {1}.
PCHNLCREATION2:PRETUPS-444,PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that Operator user is able to approve level 1 {0} category Channel user.
PCHNLCREATION3:PRETUPS-444,PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that Operator user is able to approve level 2 {0} category Channel user.
PCHNLCREATION4:PRETUPS-444,PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that Operator user is able to approve {0} category Channel user.
PCHNLCREATION5:PRETUPS-444,PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that {0} category Channel user is prompted for change password on first time login and successfully change the password.
PCHNLCREATION6:PRETUPS-444,PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that Operator user change the PIN of {0} category Channel user for processing further transaction.
SCHNLCREATION1:PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that valid message is displayed after initiating {0} category channel user.
SCHNLCREATION2:PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that valid message is displayed after approval level 1 of {0} category channel user.
SCHNLCREATION3:PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that valid message is displayed after approval level 2 of {0} category channel user.
SCHNLCREATION4:PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that valid message is displayed after approval of {0} category channel user.
SCHNLCREATION5:PRETUPS-411,PRETUPS-408|Channel User Creation|To verify that valid message is displayed after PIN is changed.
UCHNLCREATION1:PRETUPS-408|Channel User Creation|To validate View Channel User Enquiry.
UCHNLCREATION2:PRETUPS-408|Channel User Creation|To validate Self Details Enquiry through {0} category user.
UCHNLCREATION3:PRETUPS-408|Channel User Creation|To verify that operator user is able to modify details of {0} channel user.
UCHNLCREATION4:PRETUPS-1159|Channel User Creation|To verify that Operator user is able to initiate {0} category Channel user via parent Category {1}  and reject at approval level 1.
UCHNLCREATION5:PRETUPS-1159|Channel User Creation|To verify that Operator user is able to initiate {0} category Channel user via parent Category {1}  and reject at approval level 2.
UCHNLCREATION6:PRETUPS-409|Channel User Creation|To verify that channel user addition is not successful if entered LoginID already exists.
UCHNLCREATION7:PRETUPS-409|Channel User Creation|To verify that channel user addition is not successful if entered MSISDN already exists.
SITCHNLCREATION1:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if First Name is blank.
SITCHNLCREATION2:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if MSISDN is blank.
SITCHNLCREATION3:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if Password is blank.
SITCHNLCREATION4:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if geography is not assigned to user.
SITCHNLCREATION5:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful when phone number is not assigned to user.
SITCHNLCREATION6:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if password entered is **** .
SITCHNLCREATION7:PRETUPS-000|Channel User Creation|To validate sql injection for password, enter password as 'or 1=1'.
SITCHNLCREATION8:PRETUPS-1115|Channel User Creation|To verify that channel user addition is successful when phone number of deleted channel user is entered.
SITCHNLCREATION9:PRETUPS-1115|Channel User Creation|To verify that channel user addition is successful when LoginID assigned to deleted channel user prior to its deletion is entered.
SITCHNLCREATION10:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if LoginID entered characters are less than min login id length.
SITCHNLCREATION11:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if LoginID entered characters are greater than maximum login id length.
SITCHNLCREATION12:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if Password entered characters are less than minimum password length.
SITCHNLCREATION13:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if LoginID is blank.
SITCHNLCREATION14:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if MSISDN entered is less than minimum MSISDN length.
SITCHNLCREATION15:PRETUPS-1115|Channel User Creation|To verify that channel user addition screen is not visible if Category is not selected.
SITCHNLCREATION16:PRETUPS-1115|Channel User Creation|To verify that channel user addition is not successful if Password and Confirm Password are different.
SITCHNLCREATION17:PRETUPS-1115|Channel User Creation|To verify that channel user addition is successful if Payment mode is selected as cash.
SITCHNLCREATION18:PRETUPS-1115|Channel User Creation|To verify that channel user addition is successful if Payment mode is selected as cheque.
SITCHNLCREATION19:PRETUPS-1115|Channel User Creation|To verify that channel user addition is successful if Payment mode is selected as others.
SITCHNLCREATION20:PRETUPS-1115|Channel User Creation|To verify that channel user addition is successful if Payment mode is selected as demand draft.
SITCHNLCREATION21:PRETUPS-1115|Channel User Creation|To verify that channel user addition is successful if all Payment modes are selected.

#Channel User Modification
SITCHNLMODIFICATION1:PRETUPS-881|Channel User Modification|To verify that error message appear if invalid mobile number is entered in search criteria on Modify Channel user screen.
SITCHNLMODIFICATION2:PRETUPS-881|Channel User Modification|To verify that channel user modification is not successful if existing loginID is entered on channel user details page.
SITCHNLMODIFICATION3:PRETUPS-881|Channel User Modification|To verify that channel user modification is not successful if Mobile number entered as blank.
SITCHNLMODIFICATION4:PRETUPS-881|Channel User Modification|To verify that channel user modification is not successful if loginID is blank.
SITCHNLMODIFICATION5:PRETUPS-881|Channel User Modification|To verify that channel user modification is not successful if Mobile number entered is of existing channel user.
SITCHNLMODIFICATION6:PRETUPS-1852|Channel User Modification|To verify that Channel admin can modify channel user details
SITCHNLMODIFICATION7:PRETUPS-1853|Channel User Modification|To verify Channel admin can modify the roles of the channel users

#Delete Channel User
UCHNLUSRDELETE1:PRETUPS-387|Delete Channel User|To verify that Operator user is able to delete {0} category Channel user using MSISDN.
UCHNLUSRDELETE2:PRETUPS-387|Delete Channel User|To verify that Operator user is able to discard request for deletion of {0} category Channel user using MSISDN.
UCHNLUSRDELETE3:PRETUPS-387|Delete Channel User|To verify that Operator user is able to reject request for deletion of {0} category Channel user using MSISDN.
UCHNLUSRDELETE4:PRETUPS-387|Delete Channel User|To verify that Operator user is able to approve request for deletion of {0} category Channel user using MSISDN.
UCHNLUSRDELETE5:PRETUPS-387|Delete Channel User|To verify that proper message appears after user deletion.

#USER SERVICE BALANCE
C2SUSRBALSVC1:PRETUPS-0000|#User_Service_Balance|To check if USER SERVICE BALANCE  - API  is working successfully for ALL services assigned to user : {0}.
C2SUSRBALSVC2:PRETUPS-0000|#User_Service_Balance|To check if USER SERVICE BALANCE  - API  is working successfully for GRC  service assigned to user : {0}.
C2SUSRBALSVC3:PRETUPS-0000|#User_Service_Balance|To check if USER SERVICE BALANCE  - API  is validation for invaild  service passed for  : {0}.
C2SUSRBALSVC4:PRETUPS-0000|#User_Service_Balance|To check if USER SERVICE BALANCE  - API  is validation for blank  service passed for : {0}.


#Division Management
PDIVMGMT1:PRETUPS-263,PRETUPS-264|Division Management|To verify that superadmin is able to add division in the system.
PDIVMGMT2:PRETUPS-263|Division Management|To verify that superadmin is able to add department in the system.
SDIVMGMT1:PRETUPS-264|Division Management|To verify that valid message is displayed on creating division in the system.
SDIVMGMT2:PRETUPS-265|Division Management|To verify that superadmin is able to add multiple departments in the system
SDIVMGMT3:PRETUPS-265|Division Management|To verify that valid message is displayed on creating department in the system
SITDIVMGMT1:PRETUPS-923|Division Management|To verify that Super Admin is not able to add a division with blank division name.
SITDIVMGMT2:PRETUPS-924|Division Management|To verify that Super Admin is not able to add a division with blank division code.
SITDIVMGMT3:PRETUPS-925|Division Management|To verify that Super Admin is not able to add a division with blank Status.
SITDIVMGMT4:PRETUPS-926|Division Management|To verify that Super Admin is not able to add a Department with blank Name.
SITDIVMGMT5:PRETUPS-928|Division Management|To verify that Super Admin is not able to add a Department with blank Code.
SITDIVMGMT6:PRETUPS-929|Division Management|To verify that Super Admin can add multiple Divisions in the system.
SITDIVMGMT7:PRETUPS-930|Division Management|To verify that Super Admin can modify "Division(s)" existing in the system.
SITDIVMGMT8:PRETUPS-931|Division Management|To verify that superadmin can   delete Divisions if users and department are not associated with it.
SITDIVMGMT9:PRETUPS-932|Division Management|To verify that superadmin cannot delete division if any department is associated with it.
SITDIVMGMT10:PRETUPS-933|Division Management|To verify that division name is unique with in a division type
SITDIVMGMT11:PRETUPS-934|Division Management|To verify that division shortcode is unique with in a division type.
SITDIVMGMT12:PRETUPS-935|Division Management|To verify that SuperAdmin can modify the details of existing Department(s) in the system
SITDIVMGMT13:PRETUPS-936|Division Management|To verify that superadmin can delete department if no user is associated with it.
SITDIVMGMT14:PRETUPS-937|Division Management|To verify that superadmin can not delete department if user is associated with it.
SITDIVMGMT15:PRETUPS-939|Division Management|To verify that Department name is unique with in a division type.
SITDIVMGMT16:PRETUPS-940|Division Management|To verify that Department shortcode is unique with in a division type.

#Gift Recharge
SITGIFTRECHARGE1:PRETUPS-506|Gift Recharge|To verify that channel user is able to perform Gift Recharge through WEB.
SITGIFTRECHARGE2:PRETUPS-510|Gift Recharge|To verify that channel user is not able to perform Gift Recharge through WEB if subscriber MSISDN is not correct.
SITGIFTRECHARGE3:PRETUPS-513|Gift Recharge|To verify that channel user is not able to perform C2S Gift Recharge recharge if channel user is OUT suspended
SITGIFTRECHARGE4:PRETUPS-517|Gift Recharge|To verify that Channel user should not be able to perform Gift Recharge if associated TCP is suspended in the system.
SITGIFTRECHARGE5:PRETUPS-519|Gift Recharge|To verify that if sender user perform c2s transaction of more than allowed maximum percentage then transaction get failed.
SITGIFTRECHARGE6:PRETUPS-520|Gift Recharge|To verify that channel user is not able to perform Gift Recharge if Recharge amount is less than the Minimum amount defined in  'Per C2S transaction amount' in the associated TCP.
SITGIFTRECHARGE7:PRETUPS-522|Gift Recharge|To verify that channel user is not able to perform Gift Recharge if Recharge amount is greater than the maximum amount defined in  'Per C2S transaction amount' in the associated TCP.
SITGIFTRECHARGE8:PRETUPS-524|Gift Recharge|To verify  that channel user is able to perform consecutive Gift recharge of different amount to same subscriber if <br> 1 ) Successive MRP Block out time = True.<br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time-=120(E.g time in seconds)' preference.
SITGIFTRECHARGE9:PRETUPS-524|Gift Recharge|To verify  that channel user is not able to perform consecutive Gift recharge of same amount to same subscriber if <br> 1 ) Successive MRP Block out time = True.<br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time-=120(E.g time in seconds)' preference.
SITGIFTRECHARGE10:PRETUPS-525|Gift Recharge|To verify  that channel user is not able to perform consecutive Gift recharge of same amount to any subscriber if <br> 1 ) Successive MRP Block out time = False.<br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time-=120(E.g time in seconds)' preference.
SITGIFTRECHARGE11:PRETUPS-526|Gift Recharge|To verify  that channel user is able to perform consecutive Gift recharge of same amount to any subscriber if<br> 1 ) Successive MRP Block out time = False.<br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time-=0(E.g time in seconds)' preference.

#PostPaid BillPayment
SITPPB1:PRETUPS-395|Postpaid Bill Payment|To verify that channel user is able to perform Postpaid Bill Payment through WEB.
SITPPB2:PRETUPS-414|Postpaid Bill Payment|To verify that channel user is not able to perform Postpaid Bill Payment through WEB if subscriber MSISDN is not correct.
SITPPB3:PRETUPS-415|Postpaid Bill Payment|To verify that channel user is not able to perform C2S Postpaid Bill Payment recharge if channel user is OUT suspended
SITPPB4:PRETUPS-416|Postpaid Bill Payment|To verify that Channel user should not be able to perform Postpaid Bill Payment if associated TCP is suspended in the system.
SITPPB5:PRETUPS-419|Postpaid Bill Payment|To verify that if sender user perform c2s transaction of more than allowed maximum percentage then transaction get failed.
SITPPB6:PRETUPS-422|Postpaid Bill Payment|To verify that channel user is not able to perform Postpaid Bill Payment if Recharge amount is less than the Minimum amount defined in  'Per C2S transaction amount' in the associated TCP.
SITPPB7:PRETUPS-424|Postpaid Bill Payment|To verify that channel user is not able to perform Postpaid Bill Payment if Recharge amount is greater than the maximum amount defined in  'Per C2S transaction amount' in the associated TCP.
SITPPB8:PRETUPS-433|Postpaid Bill Payment|To verify  that channel user is able to perform consecutive Postpaid Bill Payment of different amount to same subscriber if <br> 1 ) Successive MRP Block out time = True.<br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time-=120(E.g time in seconds)' preference
SITPPB9:PRETUPS-433|Postpaid Bill Payment|To verify  that channel user is not able to perform consecutive Postpaid Bill Payment of same amount to same subscriber if <br> 1 ) Successive MRP Block out time = True.<br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time-=120(E.g time in seconds)' preference
SITPPB10:PRETUPS-453|Postpaid Bill Payment|To verify  that channel user is not able to perform consecutive Postpaid Bill Payment of same amount to any subscriber if <br> 1 ) Successive MRP Block out time = False.<br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time-=120(E.g time in seconds)' preference
SITPPB11:PRETUPS-501|Postpaid Bill Payment|To verify  that channel user is able to perform consecutive Postpaid Bill Payment of same amount to any subscriber if <br> 1 ) Successive MRP Block out time = False.<br> 2) And recharge is sent within the Configured time duration set in 'Successive Block Time-=0(E.g time in seconds)' preference
SITPPB12:PRETUPS-504|Postpaid Bill Payment|To verify that channel user is able to perform Postpaid Bill Payment through WEB using SID.


#C2C Transfer Rule Creation
PC2CTRFRULECREATE1:PRETUPS-425,PRETUPS-396,PRETUPS-287|C2C Transfer Rule Creation|To verify that Operator is able to create C2C Transfer Rule from {0} category to {1} category.

#O2C Transfer
PO2CTRF1:PRETUPS-306,PRETUPS-417,PRETUPS-311|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer initiation for category {0} with parent category {1}, product type {2}.
PO2CTRF2:PRETUPS-306,PRETUPS-417,PRETUPS-311|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2}.
PO2CTRF3:PRETUPS-306,PRETUPS-417,PRETUPS-311|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Approval 2 for category {0} with parent category {1}, product type {2}.
PO2CTRF4:PRETUPS-306,PRETUPS-417,PRETUPS-311|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Approval 3 for category {0} with parent category {1}, product type {2}.
PO2CTRF5:PRETUPS-306,PRETUPS-417,PRETUPS-311|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer initiation for bundles for category {0} with parent category {1}, product type {2}.
SO2CTRF1:PRETUPS-417|O2C Transfer|To verify that proper message appears on WEB after successful O2C transfer for product {0}.
SO2CTRF2:PRETUPS-417|O2C Transfer|To verify that proper message appears on WEB after successful O2C Approval level 1 for product {0}.
SO2CTRF3:PRETUPS-417|O2C Transfer|To verify that proper message appears on WEB after successful O2C Approval level 2 for product {0}.
SO2CTRF4:PRETUPS-417|O2C Transfer|To verify that proper message appears on WEB after successful O2C Approval level 3 for product {0}.
SO2CTRF5:PRETUPS-417,PRETUPS-311|O2C Transfer|To validate Network Stocks on successful Operator to Channel Transfer.
SO2CTRF6:PRETUPS-417,PRETUPS-311|O2C Transfer|To validate Receiver User Balance on successful Operator to Channel Transfer.
UO2CTRF1:PRETUPS-311|O2C Transfer|To verify that an O2C Transfers Enquiry is available on successful O2C Transfer for category {0} & product type {1} using Transaction Number.
UO2CTRF2:PRETUPS-314|O2C Transfer|To verify that User Balance Enquiry is available for category {0}.
UO2CTRF3:PRETUPS-314|O2C Transfer|To verify that {0} category Channel User is able to perform Operator to Channel Initiate for Product Type {1}.
UO2CTRF4:PRETUPS-314|O2C Transfer|To verify that Operator User is able to perform Transfer Approval 1 for category {0} against Initiate Transfer Request.
UO2CTRF5:PRETUPS-314|O2C Transfer|To verify that Operator User is able to perform Transfer Approval 2 for category {0} against Initiate Transfer Request.
UO2CTRF6:PRETUPS-314|O2C Transfer|To verify that Operator User is able to perform Transfer Approval 3 for category {0} against Initiate Transfer Request.
UO2CTRF7:PRETUPS-314|O2C Transfer|To verify that an O2C Transfers Enquiry is available on successful O2C Transfer Approval against Initiate Transfer Request for category {0}.
UO2CTRF8:PRETUPS-318|O2C Transfer|To verify that O2C Transfer is closed on Approval Level 1 if the Initiated Quantity is less than the First Approval Limit for category {0} with parent category {1}, product type {2}.
UO2CTRF9:PRETUPS-318|O2C Transfer|To verify that O2C Transfer is closed on Approval Level 2 if the Initiated Quantity is greater than First Approval Limit for category {0} with parent category {1}, product type {2}.
UO2CTRF10:PRETUPS-318|O2C Transfer|To verify that O2C Transfer reaches Level 3 if the Initiated Quantity is greater than Second Approval Limit for category {0} with parent category {1}, product type {2}.
SITO2CTRF1:PRETUPS-1144|O2C Transfer|To verify that {0} is not able to perform O2C Transfer for {1} if Channel User is suspended.
SITO2CTRF2:PRETUPS-1145|O2C Transfer|To verify that {0} is not able to perform O2C Transfer for {1} product if Channel User is IN Suspended.
SITO2CTRF3:PRETUPS-1146|O2C Transfer|To verify that {0} is not able to perform O2C Transfer for {1} product if Channel User's TCP is suspended.
SITO2CTRF4:PRETUPS-1147|O2C Transfer|To verify that {0} is not able to perform O2C Transfer for {1} product if Channel User's Maximum Residual Balance is reached.
SITO2CTRF5:PRETUPS-1148|O2C Transfer|To verify that proper error message is displayed if user does not select stock type while performing Operator to Channel Transfer.
SITO2CTRF6:PRETUPS-1149|O2C Transfer|To verify that proper error message is displayed if user does not enter Channel User MSISDN while performing Operator to Channel Transfer.
SITO2CTRF7:PRETUPS-1150|O2C Transfer|To verify that proper error message is displayed if user does not select Product Type while performing Operator to Channel Transfer.
SITO2CTRF8:PRETUPS-1151|O2C Transfer|To verify that proper error message is displayed if user does not enter Initiation Amount while performing Operator to Channel Transfer.
SITO2CTRF9:PRETUPS-1152|O2C Transfer|To verify that proper error message is displayed if user enters alphanumeric characters in Initiation Amount.
SITO2CTRF10:PRETUPS-1153|O2C Transfer|To verify that proper error message is displayed if user enters special characters in Initiation Amount.
SITO2CTRF11:PRETUPS-1154|O2C Transfer|To verify that proper O2C Transfer is not successful if Requested Quantity is not in multiple of defined value in Commission Profile.
SITO2CTRF12:PRETUPS-1155|O2C Transfer|To verify that External Transaction No. accepts Alphanumeric value in O2C 1st Level Approval.
SITO2CTRF13:PRETUPS-1155|O2C Transfer|To verify that External Transaction No. does not accept Alphanumeric value in O2C 1st Level Approval.
SITO2CTRF14:PRETUPS-1855|O2C Transfer|To verify that Channel Admin cannot initiate the O2C stock if amount entered in negative.

#Channel Domain Management
SCHNLDOMMGMT1:PRETUPS-521|Channel Domain Management|To verify that Super Admin is able to create Channel Domain in the system.
SCHNLDOMMGMT2:PRETUPS-523|Channel Domain Management|To verify that Super Admin is able to Modify Channel Domain existing in the system.
SCHNLDOMMGMT3:PRETUPS-1845|Channel Domain Management|To verify that domain status can be modified at the time of domain modification.

#C2C Withdraw
SC2CWITHDRAW1:PRETUPS-445,PRETUPS-400|C2C Withdraw|To verify C2C Withdraw from {0} to {1}.
SC2CWITHDRAW2:PRETUPS-445,PRETUPS-400|C2C Withdraw|To verify that valid message appears on C2C Withdraw from {0} to {1}.
SC2CWITHDRAW3:PRETUPS-445,PRETUPS-400|C2C Withdraw|To validate Network Stocks on successful Channel to Channel Withdraw.
SC2CWITHDRAW4:PRETUPS-445,PRETUPS-400|C2C Withdraw|To validate Receiver User Balance on successful Channel to Channel Withdraw.
UC2CWITHDRAW1:PRETUPS-400,PRETUPS-400|C2C Withdraw|To verify that C2C Withdraw is not successful if Sender channel user is suspended.
SITC2CWITHDRAW1:PRETUPS-868|C2C Withdraw|To verify that C2C Withdraw is not successful if Sender channel user is suspended.
SITC2CWITHDRAW2:PRETUPS-868,PRETUPS-872|C2C Withdraw|To verify that C2C Withdraw is not successful if Transfer Control Profile associated with sender is not active in the sytem.
SITC2CWITHDRAW3:PRETUPS-880|C2C Withdraw|To verify that C2C Withdraw is not successful if Transfer Control Profile associated with Reciever is not active in the sytem.
SITC2CWITHDRAW4:PRETUPS-1310|C2C Withdraw|To verify that Channel user is able to perform C2C Withdraw if Sender user is out suspended
SITC2CWITHDRAW5:PRETUPS-1311|C2C Withdraw|To verify that proper error message is displayed if the commission profile of sender is suspended.
SITC2CWITHDRAW6:PRETUPS-1312|C2C Withdraw|To verify that proper error message should be displayed if the requested quantity for product {0} is more than the users balance while c2c withdraw.
SITC2CWITHDRAW7:PRETUPS-1313|C2C Withdraw|To verify that user counter is successfully updated for the sender user.

#Channel User Pin Management
UCHNLPINMGMT1:PRETUPS-405|Channel User PIN Management|To verify that operator user is able to perform Send PIN.
UCHNLPINMGMT2:PRETUPS-405|Channel User PIN Management|To verify that valid message appears once send PIN is performed.
UCHNLPINMGMT3:PRETUPS-405|Channel User PIN Management|To verify that operator user is able to perform Reset PIN.
UCHNLPINMGMT4:PRETUPS-405|Channel User PIN Management|To verify that valid message appears once reset PIN is performed.
UCHNLPINMGMT5:PRETUPS-405|Channel User PIN Management|To verify that after Reset pin, operator is able to change PIN for the channel user whose PIN is reset.
UCHNLPINMGMT6:PRETUPS-405|Channel User PIN Management|To verify that valid message appears once Change PIN is performed.

#User Password Management
UUSRPSWDMGMT1:PRETUPS-407|User Password Management|To verify that operator user is able to perform Send Password using {0}.
UUSRPSWDMGMT2:PRETUPS-407|User Password Management|To verify that valid message appears once Send Password is performed using {0}.
UUSRPSWDMGMT3:PRETUPS-407|User Password Management|To verify that operator user is able to perform Unblock Password using {0}.
UUSRPSWDMGMT4:PRETUPS-407|User Password Management|To verify that valid message appears once Unblock Password is performed using {0}.
UUSRPSWDMGMT5:PRETUPS-407|User Password Management|To verify that operator user is able to perform 'Unblock and Send Password' using {0}.
UUSRPSWDMGMT6:PRETUPS-407|User Password Management|To verify that valid message appears once 'Unblock and Send Password' is performed using {0}.
UUSRPSWDMGMT7:PRETUPS-407|User Password Management|To verify that operator user is able to perform 'Reset Password' using {0}.
UUSRPSWDMGMT8:PRETUPS-407|User Password Management|To verify that valid message appears once 'Reset Password' is performed using {0}.
UUSRPSWDMGMT9:PRETUPS-407|User Password Management|To verify that user is prompted to change password once reset password is performed using {0}.
UUSRPSWDMGMT10:PRETUPS-407|User Password Management|To verify that operator user is able to perform 'Cancel' operation using {0}.
UUSRPSWDMGMT11:PRETUPS-407|User Password Management|To verify that operator user is able to perform 'Back' operation using {0}.

#Suspend Resume Channel User
USUSRESCHNLUSR1:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to perform Suspend Channel User using LoginID of channel user.
USUSRESCHNLUSR2:PRETUPS-403|Suspend/Resume Channel User|To verify that proper message appear on Web after performing Suspend Channel User using LoginID of channel user.
USUSRESCHNLUSR3:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to approve suspend channel user request using LoginID.
USUSRESCHNLUSR4:PRETUPS-403|Suspend/Resume Channel User|To verify that proper message appear on Web after approving suspend channel user request.
USUSRESCHNLUSR5:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to perform resume channel user using loginID.
USUSRESCHNLUSR6:PRETUPS-403|Suspend/Resume Channel User|To verify that proper message appear on performing resume channel user.
USUSRESCHNLUSR7:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to perform Suspend Channel User using MSISDN of channel user.
USUSRESCHNLUSR8:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to approve suspend channel user request using MSISDN.
USUSRESCHNLUSR9:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to perform resume channel user using MSISDN.
USUSRESCHNLUSR10:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to perform Suspend Channel User using geographical details of channel user.
USUSRESCHNLUSR11:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to approve suspend channel user request using loginID once user is suspended using geography details.
USUSRESCHNLUSR12:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to perform resume channel user using geography details.
USUSRESCHNLUSR13:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to discard suspend channel user request.
USUSRESCHNLUSR14:PRETUPS-403|Suspend/Resume Channel User|To verify that proper message appears on Web after discarding suspend channel user request.
USUSRESCHNLUSR15:PRETUPS-403|Suspend/Resume Channel User|To verify that operator user is able to reject suspend channel user request.
USUSRESCHNLUSR16:PRETUPS-404|Suspend/Resume Channel User|To verify that proper error message is displayed if remarks are not entered while suspending user via Operator user.
USUSRESCHNLUSR17:PRETUPS-405|Suspend/Resume Channel User|To verify that Channel user is able to suspend the user.
USUSRESCHNLUSR18:PRETUPS-406|Suspend/Resume Channel User|To verify that proper error message is displayed if remarks are not entered while suspending via Channel user.
USUSRESCHNLUSR19:PRETUPS-407|Suspend/Resume Channel User|To verify that proper error message is displayed if remarks are not entered while resuming Channel user.
USUSRESCHNLUSR20:PRETUPS-408|Suspend/Resume Channel User|To verify that it is optional to enter the remarks when UserEventRemarks parameter is set as false in System Preferences while suspending user via Operator user.
USUSRESCHNLUSR21:PRETUPS-409|Suspend/Resume Channel User|To verify that it is optional to enter the remarks when UserEventRemarks parameter is set as false in System Preferences while suspending user via Channel user.
USUSRESCHNLUSR22:PRETUPS-409|Suspend/Resume Channel User|To verify that it is optional to enter the remarks when UserEventRemarks parameter is set as false in System Preferences while resuming user.
USUSRESCHNLUSR23:PRETUPS-410|Suspend/Resume Channel User|To verify that proper error message is displayed if remarks are not entered while approving suspend request of user.

#Channel to Channel Return
UCHNL2CHNLRETURN1:PRETUPS-401|C2C Return|To verify C2C Return from {0} to {1}.
UCHNL2CHNLRETURN2:PRETUPS-401|C2C Return|To verify that valid message appears on C2C Return from {0} to {1} .
UCHNL2CHNLRETURN3:PRETUPS-401|C2C Return|To validate Network Stocks on successful Channel to Channel Return
UCHNL2CHNLRETURN4:PRETUPS-401|C2C Return|To validate Receiver User Balance on successful Channel to Channel Return.
UCHNL2CHNLRETURN5:PRETUPS-401|C2C Return|To verify that C2C Return is not successful if Receiver channel user is suspended.
SITCHNL2CHNLRETURN1:PRETUPS-890|C2C Return|To verify that C2C Return is not successful if Receiver channel user is suspended.
SITCHNL2CHNLRETURN2:PRETUPS-890,PRETUPS-891|C2C Return|To verify that C2C Return is not successful if Transfer Control Profile associated with sender is not active in the sytem.
SITCHNL2CHNLRETURN3:PRETUPS-892|C2C Return|To verify that C2C Return is not successful if Transfer Control Profile associated with Reciever is not active in the sytem.
SITCHNL2CHNLRETURN4:PRETUPS-000|C2C Return|To verify that if sender user perform c2c Return transaction of more than allowed maximum percentage via {0} then transaction get failed.
SITCHNL2CHNLRETURN5:PRETUPS-000|C2C Return|To verify that if sender user perform c2c Return transaction of more than allowed maximum percentage from all the available products  then transaction get failed.
SITCHNL2CHNLRETURN6:PRETUPS-000|C2C Return|To verify that if sender user perform c2c transaction of more than maximum balance of product {0}  then transaction get failed.
SITCHNL2CHNLRETURN7:PRETUPS-1300|C2C Return|To verify that proper error message is displayed if the pin entered is incorrect while performing C2C Return from {0} to {1}.
SITCHNL2CHNLRETURN8:PRETUPS-1301|C2C Return|To verify that proper error message is displayed if the user is  out suspended.
SITCHNL2CHNLRETURN9:PRETUPS-1302|C2C Return|To verify that proper error message is displayed if the commission profile {0} of sender category {1} is suspended.
SITCHNL2CHNLRETURN10:PRETUPS-1303|C2C Return|To verify that proper error message should be displayed of the requested quantity is more than the users balance.
SITCHNL2CHNLRETURN11:PRETUPS-1304|C2C Return|To verify that user counter is successfully updated after C2C Return from {0} to {1}.

#Change Self PIN
UCHNGSELFPIN1:PRETUPS-406|Change Self PIN|To verify that operator user is able to perform 'Change self PIN'.
UCHNGSELFPIN2:PRETUPS-406|Change Self PIN|To verify that valid message appears once change self PIN is performed.

#View Self details Operator
UVIEWSELFDETAILS1:PRETUPS-382|View Self Details|To verify that {0} with parent user {1} is able to view self details.

#Private Recharge
SITPRVTRECHARGE1:PRETUPS-815|Private Recharge|To verify that Private recharge registration for subscriber is successful with generation type as MANUAL.
SITPRVTRECHARGE2:PRETUPS-815|Private Recharge|To verify that Private recharge registration for subscriber is successful with generation type as AUTO.
SITPRVTRECHARGE3:PRETUPS-815|Private Recharge|To Verify Private Code registration fails through web if  Subscriber MSISDN is already registered.
SITPRVTRECHARGE4:PRETUPS-815|Private Recharge|To Verify Private Recharge Registration fails through web if  Subscriber MSISDN is invalid.
SITPRVTRECHARGE5:PRETUPS-854|Private Recharge|To verify that Private recharge modification for subscriber is successful using generation type as MANUAL.
SITPRVTRECHARGE6:PRETUPS-854|Private Recharge|To verify that Private recharge modification for subscriber is successful using generation type as AUTO.
SITPRVTRECHARGE7:PRETUPS-854|Private Recharge|To verify that Private recharge modification for subscriber is not successful if MSISDN is invalid.
SITPRVTRECHARGE8:PRETUPS-860|Private Recharge|To verify that Private recharge enquiry for subscriber is successful.
SITPRVTRECHARGE9:PRETUPS-860|Private Recharge|To verify private recharge enquiry fails through web if Subscriber MSISDN doesnot exist.
SITPRVTRECHARGE10:PRETUPS-862|Private Recharge|To verify that Private recharge deactivation is successful.
SITPRVTRECHARGE11:PRETUPS-862|Private Recharge|To verify private Code deactivation fails through web if Subscriber MSISDN does not exist.
SITPRVTRECHARGE12:PRETUPS-864|Private Recharge|To verify that {0} category user is able to perform C2S(Private) Recharge using SID of subscriber.

#C2S Roam Recharge
SITROAMRECHARGE1:PRETUPS-528|C2S Roam Recharge|To verify that channel user is able to perform Roam Recharge through WEB.

#Staff User
SITSTAFFCREATION1:PRETUPS-000|Staff User Creation|To verify that Operator user is able to initiate {0} category Staff user with parent category {1}.
SITSTAFFCREATION2:PRETUPS-000|Staff User Creation|To verify that Operator user is able to approve level 1 {0} category Staff user.
SITSTAFFCREATION3:PRETUPS-000|Staff User Creation|To verify that Operator user is able to approve level 2 {0} category Staff user.
SITSTAFFCREATION4:PRETUPS-000|Staff User Creation|To verify that Operator user is able to approve {0} category Channel user.
SITSTAFFCREATION5:PRETUPS-000|Staff User Creation|To verify that {0} category Staff user is prompted for change password on first time login and successfuly change the password.
SITSTAFFCREATION6:PRETUPS-000|Staff User Creation|To verify that Operator user change the PIN of {0} category Staff user for processing further transaction.

#User Transfer Count Validation C2C
SITC2CTRFCOUNTVALD1:PRETUPS-897|User Transfer Count C2C|To verify that daily transfer out count for sender increases after successful C2C Transfer.
SITC2CTRFCOUNTVALD2:PRETUPS-897|User Transfer Count C2C|To verify that daily transfer in count for receiver increases after successful C2C Transfer.
SITC2CTRFCOUNTVALD3:PRETUPS-898|User Transfer Count C2C|To verify that weekly transfer out count for sender increases after successful C2C Transfer.
SITC2CTRFCOUNTVALD4:PRETUPS-898|User Transfer Count C2C|To verify that weekly transfer in count for receiver increases after successful C2C Transfer.
SITC2CTRFCOUNTVALD5:PRETUPS-899|User Transfer Count C2C|To verify that monthly transfer out count for sender increases after successful C2C Transfer.
SITC2CTRFCOUNTVALD6:PRETUPS-899|User Transfer Count C2C|To verify that monthly transfer in count for receiver increases after successful C2C Transfer.
SITC2CTRFCOUNTVALD7:PRETUPS-900|User Transfer Count C2C|To verify that if daily transfer out count for sender is reached then C2C transaction is not processed successfuly.
SITC2CTRFCOUNTVALD8:PRETUPS-900|User Transfer Count C2C|To verify that if C2C transaction is not processed then daily out count for sender remain same.
SITC2CTRFCOUNTVALD9:PRETUPS-900|User Transfer Count C2C|To verify that if C2C transaction is not processed then daily in count for receiver remain same.
SITC2CTRFCOUNTVALD10:PRETUPS-901|User Transfer Count C2C|To verify that if daily transfer in count for receiver is reached then C2C transaction is not processed successfuly.
SITC2CTRFCOUNTVALD11:PRETUPS-901|User Transfer Count C2C|To verify that if receiver daily transfer in count reached then after performing C2C transaction, daily in count for receiver remain same.


#Auto C2C transfer IDEA
SITAUTOC2CTRFIDEA1:PRETUPS-000|AutoC2CTransfer|To verify that 'Auto transfer Credit limit' as a separate control preference is incorporated in the Transfer Control Profile to control the number of Auto C2C transfer.
SITAUTOC2CTRFIDEA2:PRETUPS-000|AutoC2CTransfer|To verify that operator user is able to define Auto C2C credit limit in single for defined channel user successfully.
SITAUTOC2CTRFIDEA3:PRETUPS-000|AutoC2CTransfer|To verify that operator user is able to define Minimum Txn amount for Auto C2C credit limit.
SITAUTOC2CTRFIDEA4:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define alphanumeric Minimum Txn amount for Auto C2C credit limit.
SITAUTOC2CTRFIDEA5:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Auto C2C credit limit leaving Minimum Txn amount as blank.
SITAUTOC2CTRFIDEA6:PRETUPS-000|AutoC2CTransfer|To verify that operator user is able to define with 15 digits value in Minimum Txn amount for Auto C2C credit limit.
SITAUTOC2CTRFIDEA7:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define with negative value in Minimum Txn amount  for Auto C2C credit limit.
SITAUTOC2CTRFIDEA8:PRETUPS-000|AutoC2CTransfer|To verify that operator user is able to define Daily Txn count for Auto C2C credit limit.
SITAUTOC2CTRFIDEA9:PRETUPS-000|AutoC2CTransfer|To verify that operator user is able to define Weekly Txn count for Auto C2C credit limit.
SITAUTOC2CTRFIDEA10:PRETUPS-000|AutoC2CTransfer|To verify that operator user is able to define Monthly Txn count for Auto C2C credit limit.
SITAUTOC2CTRFIDEA11:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Daily Txn count with alphanumeric value for Auto C2C credit limit.
SITAUTOC2CTRFIDEA12:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define weekly Txn count with alphanumeric value for Auto C2C credit limit.
SITAUTOC2CTRFIDEA13:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define monthly Txn count with alphanumeric value for Auto C2C credit limit.
SITAUTOC2CTRFIDEA14:PRETUPS-000|AutoC2CTransfer|To verify that operator user is able to define Daily, Weekly, Monthly Txn count with 15 digits value for Auto C2C credit limit.
SITAUTOC2CTRFIDEA15:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Daily Txn count with negative value for Auto C2C credit limit.
SITAUTOC2CTRFIDEA16:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Weekly Txn count with negative value for Auto C2C credit limit.
SITAUTOC2CTRFIDEA17:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Monthly Txn count with negative value for Auto C2C credit limit.
SITAUTOC2CTRFIDEA18:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Auto C2C credit limit leaving Daily Txn count and weekly txn count as blank .
SITAUTOC2CTRFIDEA19:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Auto C2C credit limit leaving Daily Txn count and monthly txn count as blank .
SITAUTOC2CTRFIDEA20:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Auto C2C credit limit leaving weekly Txn count and monthly txn count as blank .
SITAUTOC2CTRFIDEA21:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Auto C2C credit limit leaving Daily Txn count blank .
SITAUTOC2CTRFIDEA22:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Auto C2C credit limit leaving weekly Txn count blank .
SITAUTOC2CTRFIDEA23:PRETUPS-000|AutoC2CTransfer|To verify that operator user is not able to define Auto C2C credit limit leaving monthly Txn count blank .

#C2S Card Group Creation
PC2SCARDGROUP1:PRETUPS-418,PRETUPS-391,PRETUPS-366|C2S Card Group Creation|To verify that Network Admin is able to create C2S Card Group for {0} service & {1} sub-service.
SC2SCARDGROUP1:PRETUPS-392,PRETUPS-371|C2S Card Group Creation|To verify that Network Admin is able to perform C2S card group modification for service {0} and sub-service {1}.
UC2SCARDGROUP1:PRETUPS-366|C2S Card Group Creation|To verify that proper message is displayed C2S card group Creation for service {0} and sub-service {1}.
UC2SCARDGROUP2:PRETUPS-367|C2S Card Group Creation|To verify that Network Admin is able to view C2S card group for service {0} and sub-service {1}.
UC2SCARDGROUP3:PRETUPS-367|C2S Card Group Creation|To verify that proper message is displayed for view C2S card group for service {0} and sub-service {1}.
UC2SCARDGROUP4:PRETUPS-368|C2S Card Group Creation|To verify that Network Admin is able to check the status of C2S card group for service {0} and sub-service {1}.
UC2SCARDGROUP5:PRETUPS-368|C2S Card Group Creation|To verify that proper message is displayed C2S card group Status for service {0} and sub-service {1}.
UC2SCARDGROUP6:PRETUPS-369|C2S Card Group Creation|To verify that Network Admin is able to suspend C2S card group for service {0} and sub-service {1}.
UC2SCARDGROUP7:PRETUPS-369|C2S Card Group Creation|To verify that proper message is displayed C2S card group Suspend for service {0} and sub-service {1}.
UC2SCARDGROUP8:PRETUPS-370|C2S Card Group Creation|To verify that Network Admin is able to activate the suspended C2S card group for service {0} and sub-service {1}.
UC2SCARDGROUP9:PRETUPS-370|C2S Card Group Creation|To verify that proper message is displayed on activating the suspended C2S card group for service {0} and sub-service {1}.
UC2SCARDGROUP10:PRETUPS-371|C2S Card Group Creation|To verify that proper message is displayed C2S card group Modification for service {0} and sub-service {1}.
UC2SCARDGROUP11:PRETUPS-372|C2S Card Group Creation|To verify that Network Admin is able to perform C2S card group Modification for adding new slab for service {0} and sub-service {1}.
UC2SCARDGROUP12:PRETUPS-372|C2S Card Group Creation|To verify that proper message is displayed C2S card group Modification (AddNewSlab) for service {0} and sub-service {1}.
UC2SCARDGROUP13:PRETUPS-373|C2S Card Group Creation|To verify that Network Admin is able to suspend C2S card group slab for service {0} and sub-service {1}.
UC2SCARDGROUP14:PRETUPS-373|C2S Card Group Creation|To verify that proper message is displayed for successful suspend C2S card group slab Modification for service {0} and sub-service {1}.
UC2SCARDGROUP15:PRETUPS-374|C2S Card Group Creation|To verify that Network Admin is able to resume C2S card group slab for service {0} and sub-service {1}.
UC2SCARDGROUP16:PRETUPS-374|C2S Card Group Creation|To verify that proper message is displayed C2S card group slab resume for service {0} and sub-service {1}.
UC2SCARDGROUP17:PRETUPS-375|C2S Card Group Creation|To verify that Network Admin is able to perform C2S card group deletion for service {0} and sub-service {1}.
UC2SCARDGROUP18:PRETUPS-375|C2S Card Group Creation|To verify that Proper Message is displayed on successful card group deletion for service {0} and sub-service {1}.
UC2SCARDGROUP19:PRETUPS-376|C2S Card Group Creation|To verify that Network Admin is able to perform C2S card group creation for Future Date for service {0} and sub-service {1}.
UC2SCARDGROUP20:PRETUPS-376|C2S Card Group Creation|To verify that proper message is displayed C2S card group Creation for Future date for service {0} and sub-service {1}.
UC2SCARDGROUP21:PRETUPS-377|C2S Card Group Creation|To verify that Network Admin is able to perform C2S card group Modification(to future date) for service {0} and sub-service {1}.
UC2SCARDGROUP22:PRETUPS-377|C2S Card Group Creation|To verify that proper message is displayed C2S card group Modification(to future date) for service {0} and sub-service {1}.
UC2SCARDGROUP23:PRETUPS-378|C2S Card Group Creation|To verify that Network Admin is able to Set  C2S card group to Default  for service {0} and sub-service {1}.
UC2SCARDGROUP24:PRETUPS-379|C2S Card Group Creation|To verify that Network Admin is not able to perform C2S card group deletion for Default Card Group for service {0} and sub-service {1}.
UC2SCARDGROUP25:PRETUPS-379|C2S Card Group Creation|To verify that Proper Message is displayed on unsuccessful card group deletion for Default Card Group for service {0} and sub-service {1}.
UC2SCARDGROUP26:PRETUPS-380|C2S Card Group Creation|To verify that new version of Card Group is getting created on C2S card group Modification for service {0} and sub-service {1}.
SITC2SCARDGROUP1:PRETUPS-622|C2S Card Group Creation|To verify that Applicable time is required for creating a C2S card group.
SITC2SCARDGROUP2:PRETUPS-623|C2S Card Group Creation|To verify that Applicable date is required for creating a C2S card group.
SITC2SCARDGROUP3:PRETUPS-624|C2S Card Group Creation|To verify that C2S CardGroupSetName is required for creating a C2S card group.
SITC2SCARDGROUP4:PRETUPS-625|C2S Card Group Creation|To verify that C2S CardGroupCode is required for creating a C2S card group.
SITC2SCARDGROUP5:PRETUPS-626|C2S Card Group Creation|To verify that correct Error message is displayed when ValidityDays is entered as Blank for creating a C2S card group.
SITC2SCARDGROUP6:PRETUPS-627|C2S Card Group Creation|To verify that correct Error message is displayed when GracePeriod is entered as Blank for creating a C2S card group.
SITC2SCARDGROUP7:PRETUPS-628|C2S Card Group Creation|To verify that correct Error message is displayed when MultipleOf is entered as Blank for creating a C2S card group.
SITC2SCARDGROUP8:PRETUPS-629|C2S Card Group Creation|To verify that correct Error message is displayed when Tax1Rate is entered as Blank for creating a C2S card group.
SITC2SCARDGROUP9:PRETUPS-630|C2S Card Group Creation|To verify that correct Error message is displayed when Tax2Rate is entered as Blank for creating a C2S card group.
SITC2SCARDGROUP10:PRETUPS-631|C2S Card Group Creation|To verify that correct Error message is displayed when ProcessingFeeRate is entered as Blank for creating a C2S card group.
SITC2SCARDGROUP11:PRETUPS-632|C2S Card Group Creation|To verify that correct Error message is displayed when ProcessingFeeMinAmount is entered as Blank for creating a C2S card group.
SITC2SCARDGROUP12:PRETUPS-633|C2S Card Group Creation|To verify that correct Error message is displayed when ProcessingFeeMaxAmount is entered as Blank for creating a C2S card group.
SITC2SCARDGROUP13:PRETUPS-634|C2S Card Group Creation|To verify that correct Error message is displayed when ReceiverConversionFactor is entered as Blank for creating a C2S card group.
SITC2SCARDGROUP14:PRETUPS-1160|C2S Card Group Creation|Network admin can deactivate Card group through C2S card group Status interface.
SITC2SCARDGROUP15:PRETUPS-1161|C2S Card Group Creation|To verfiy that card group set name is unique in the system.
SITC2SCARDGROUP16:PRETUPS-1162|C2S Card Group Creation|To verfiy that newly created card group has version 1 in the system.
SITC2SCARDGROUP17:PRETUPS-000|C2S Card Group Creation|Network Admin cannot  delete C2S card group details if it is associated with transfer rule
SITC2SCARDGROUP18:PRETUPS-000|C2S Card Group Creation|To verify that card group can be set only for future date and time.
SITC2SCARDGROUP19:PRETUPS-000|C2S Card Group Creation|To verify that Max Processing fee for the receiver should be within the start range and end range
SITC2SCARDGROUP20:PRETUPS-000|C2S Card Group Creation|To verify that to define a fix value card group the start and end range should be same
SITC2SCARDGROUP21:PRETUPS-000|C2S Card Group Creation|To verify that ranges defined in the card group should not overlap with other ranges defined in the same card group set.
SITC2SCARDGROUP22:PRETUPS-000|C2S Card Group Creation|To verify that the Tax 1 Rate should be within 0 to 100 (if in percent)
SITC2SCARDGROUP23:PRETUPS-000|C2S Card Group Creation|To verify that the Tax 2 Rate and Tax2 Rate should be within 0 to 100 (if in percent)
SITC2SCARDGROUP24:PRETUPS-000|C2S Card Group Creation|To verify that the Tax 1 Rate should be within 0 to Start Range (if in amount)
SITC2SCARDGROUP25:PRETUPS-000|C2S Card Group Creation|To verify that the Tax 2 Rate should be within 0 to Start Range (if in amount)
SITC2SCARDGROUP26:PRETUPS-000|C2S Card Group Creation|To verify that C2S card group set will have only one version applicable even if it has multiple versions

#P2P Card Group Creation
PP2PCARDGRP1:PRETUPS-326,PRETUPS-563,PRETUPS-323|P2P Card Group|To verify that Network Admin is able to create P2P Card Group for {0} service & {1} sub-service.
SP2PCARDGRP1:PRETUPS-568,PRETUPS-328,PRETUPS-563|P2P Card Group|To verify that Network Admin is able to perform P2P card group creation for service {0} and sub-service {1}.
SP2PCARDGRP2:PRETUPS-580|P2P Card Group|To verify that Network Admin is able to perform P2P card group deletion for service {0} and sub-service {1}.
SP2PCARDGRP3:PRETUPS-580|P2P Card Group|To verify that Proper Message is displayed on successful card group deletion for service {0} and sub-service {1}.
UP2PCARDGRP1:PRETUPS-323,PRETUPS-324|P2P Card Group|To verify that Network Admin is able to view P2P card group for service {0} and sub-service {1}.
UP2PCARDGRP2:PRETUPS-327|P2P Card Group|To verify that Network Admin is able to check the status of P2P card group for service {0} and sub-service {1}.
UP2PCARDGRP3:PRETUPS-329|P2P Card Group|To verify that Network Admin is able to perform P2P card group Modification for adding new slab for service {0} and sub-service {1}.
UP2PCARDGRP4:PRETUPS-330|P2P Card Group|To verify that Network Admin is able to suspend P2P card group slab for service {0} and sub-service {1}.
UP2PCARDGRP5:PRETUPS-331|P2P Card Group|To verify that Network Admin is able to resume P2P card group slab for service {0} and sub-service {1}.
UP2PCARDGRP6:PRETUPS-333|P2P Card Group|To verify that Network Admin is able to perform P2P card group deletion for service {0} and sub-service {1}.
UP2PCARDGRP7:PRETUPS-333|P2P Card Group|To verify that Proper Message is displayed on successful card group deletion for service {0} and sub-service {1}.
UP2PCARDGRP8:PRETUPS-335|P2P Card Group|To verify that Network Admin is able to perform P2P card group creation for Future Date for service {0} and sub-service {1}.
UP2PCARDGRP9:PRETUPS-336|P2P Card Group|To verify that Network Admin is able to Set P2P card group to Default  for service {0} and sub-service {1}.
SITP2PCARDGROUP1:PRETUPS-000|P2P Card Group|To verify that Network Admin can not define P2P card group details if Card Group set name is not entered.
SITP2PCARDGROUP2:PRETUPS-000|P2P Card Group|To verify that Network Admin can not define P2P card group details if mandatory details are not entered ( Sub-service).
SITP2PCARDGROUP3:PRETUPS-000|P2P Card Group|Network admin can deactivate Card group through P2P card group Status interface.
SITP2PCARDGROUP4:PRETUPS-000|P2P Card Group|To verfiy that card group set name is unique in the system.
SITP2PCARDGROUP5:PRETUPS-000|P2P Card Group|To verfiy that newly created card group has version 1 in the system.
SITP2PCARDGROUP6:PRETUPS-000|P2P Card Group|Network Admin cannot  delete P2P card group details if it is associated with transfer rule
SITP2PCARDGROUP7:PRETUPS-000|P2P Card Group|To verify that card group can be set only for future date and time.
SITP2PCARDGROUP8:PRETUPS-000|P2P Card Group|To verify that Max Processing fee for the receiver should be within the start range and end range
SITP2PCARDGROUP9:PRETUPS-000|P2P Card Group|To verify that to define a fix value card group the start and end range should be same.
SITP2PCARDGROUP10:PRETUPS-000|P2P Card Group|To verify that ranges defined in the card group should not overlap with other ranges defined in the same card group set.
SITP2PCARDGROUP11:PRETUPS-000|P2P Card Group|To verify that the Tax 1 Rate should be within 0 to 100 (if in percent)
SITP2PCARDGROUP12:PRETUPS-000|P2P Card Group|To verify that the Tax 2 Rate  should be within 0 to 100 (if in percent)
SITP2PCARDGROUP13:PRETUPS-000|P2P Card Group|To verify that the Tax 1 Rate  should be within 0 to Start Range (if in amount)
SITP2PCARDGROUP14:PRETUPS-000|P2P Card Group|To verify that the Tax 2 Rate should be within 0 to Start Range (if in amount)
SITP2PCARDGROUP15:PRETUPS-000|P2P Card Group|To verify that P2P card group set will have only one version applicable even if it has multiple versions



#Voucher Card Group Creation
VCNPCARDGRP1:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to create Voucher Card Group for {0} service & {1} sub-service.
SVCNCARDGRP1:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to perform Voucher card group Modification for service {0} and sub-service {1}.
SVCNCARDGRP2:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to perform Voucher card group deletion for service {0} and sub-service {1}.
SVCNCARDGRP3:PRETUPS-000|Voucher Card Group|To verify that Proper Message is displayed on successful card group deletion for service {0} and sub-service {1}.
UVCNCARDGRP1:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to view Voucher card group for service {0} and sub-service {1}.
UVCNCARDGRP2:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to check the status of Voucher card group for service {0} and sub-service {1}.
UVCNCARDGRP3:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to perform Voucher card group Modification for adding new slab for service {0} and sub-service {1}.
UVCNCARDGRP4:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to suspend Voucher card group slab for service {0} and sub-service {1}.
UVCNCARDGRP5:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to resume Voucher card group slab for service {0} and sub-service {1}.
UVCNCARDGRP6:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to perform Voucher card group deletion for service {0} and sub-service {1}.
UVCNCARDGRP7:PRETUPS-000|Voucher Card Group|To verify that Proper Message is displayed on successful card group deletion for service {0} and sub-service {1}.
UVCNCARDGRP8:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to perform Voucher card group creation for Future Date for service {0} and sub-service {1}.
UVCNCARDGRP9:PRETUPS-000|Voucher Card Group|To verify that Network Admin is able to Set Voucher card group to Default  for service {0} and sub-service {1}.
SITVCNCARDGROUP1:PRETUPS-000|Voucher Card Group|To verify that Network Admin can not define Voucher card group details if Card Group set name is not entered.
SITVCNCARDGROUP2:PRETUPS-000|Voucher Card Group|To verify that Network Admin can not define Voucher card group details if mandatory details are not entered ( Sub-service).
SITVCNCARDGROUP3:PRETUPS-000|Voucher Card Group|Network admin can deactivate Card group through Voucher card group Status interface.
SITVCNCARDGROUP4:PRETUPS-000|Voucher Card Group|To verfiy that card group set name is unique in the system.
SITVCNCARDGROUP5:PRETUPS-000|Voucher Card Group|To verfiy that newly created card group has version 1 in the system.
SITVCNCARDGROUP6:PRETUPS-000|Voucher Card Group|Network Admin cannot  delete Voucher card group details if it is associated with transfer rule
SITVCNCARDGROUP7:PRETUPS-000|Voucher Card Group|To verify that card group can be set only for future date and time.
SITVCNCARDGROUP8:PRETUPS-000|Voucher Card Group|To verify that Max Processing fee for the receiver should be within the start range and end range
SITVCNCARDGROUP9:PRETUPS-000|Voucher Card Group|To verify that to define a fix value card group the start and end range should be same.
SITVCNCARDGROUP10:PRETUPS-000|Voucher Card Group|To verify that ranges defined in the card group should not overlap with other ranges defined in the same card group set.
SITVCNCARDGROUP11:PRETUPS-000|Voucher Card Group|To verify that the Tax 1 Rate should be within 0 to 100 (if in percent)
SITVCNCARDGROUP12:PRETUPS-000|Voucher Card Group|To verify that the Tax 2 Rate  should be within 0 to 100 (if in percent)
SITVCNCARDGROUP13:PRETUPS-000|Voucher Card Group|To verify that the Tax 1 Rate  should be within 0 to Start Range (if in amount)
SITVCNCARDGROUP14:PRETUPS-000|Voucher Card Group|To verify that the Tax 2 Rate should be within 0 to Start Range (if in amount)
SITVCNCARDGROUP15:PRETUPS-000|Voucher Card Group|To verify that Voucher card group set will have only one version applicable even if it has multiple versions
SITVCNCARDGROUP16:PRETUPS-000|Calculate Voucher Card Group|To verify that Voucher CardGroup can not be calculated when no transfer rule defined for service {0} and sub-service {1}.
SITVCNCARDGROUP17:PRETUPS-000|Calculate Voucher Card Group|To verify the Voucher CardGroup Calculation for service {0} and sub-service {1}.
SITVCNCARDGROUP18:PRETUPS-000|Calculate Voucher Card Group|To verify that Voucher CardGroup can not be calculated when no CardGroup is defined for  {0} and sub-service {1}.
SITVCNCARDGROUP19:PRETUPS-000|Calculate Voucher Card Group|To verify the Validation for Voucher Type for service {0} and sub-service {1}.
SITVCNCARDGROUP20:PRETUPS-000|Calculate Voucher Card Group|To verify the Validation for Voucher Segment for service {0} and sub-service {1}.
SITVCNCARDGROUP21:PRETUPS-000|Calculate Voucher Card Group|To verify the Validation for Voucher Denomination for service {0} and sub-service {1}.
SITVCNCARDGROUP22:PRETUPS-000|Calculate Voucher Card Group|To verify the Validation for Sub Service for service {0} and sub-service {1}.
SITVCNCARDGROUP23:PRETUPS-000|Calculate Voucher Card Group|To verify the Validation for Gateway Type for service {0} and sub-service {1}.
SITVCNCARDGROUP24:PRETUPS-000|Calculate Voucher Card Group|To verify the Validation for ReceiverType Type for service {0} and sub-service {1}.

#Sub LookUp
SITSUBLOOKUP1:PRETUPS-997|Sub LookUp| To verify that Super Admin is able to perform sub look up addition.
SITSUBLOOKUP2:PRETUPS-998|Sub LookUp| To verify that Super Admin is able to perform sub look up modification.
SITSUBLOOKUP3:PRETUPS-999|Sub LookUp| To verify that Super Admin is able to perform sub look up deletion.

#Group Role Management
PGRPROLE1:PRETUPS-000|Group Role Management|To verify that Super Admin is able to perform Group Role Creation for Operator User :PRETUPS-000|{0} category.
PGRPROLE2:PRETUPS-505|Group Role Management|To verify that Super Admin is able to perform Group Role Creation for {0} category.
SITGRPROLE1:PRETUPS-1000| Group Role Management|To verify that Super Admin is able to perform Group Role Creation for {0} Category under {1} domain.
SITGRPROLE2:PRETUPS-1001| Group Role Management|To verify that Super Admin is able to perform Group Role modification for {0} Category under {1} domain.
SITGRPROLE3:PRETUPS-1002| Group Role Management|To verify that Super Admin is able to perform Group Role deletion for {0} Category under {1} domain.
SITGRPROLE4:PRETUPS-1003| Group Role Management|To verify that Super Admin is able to perform Group Role Creation with specific Roles for {0} Category under {1} domain.
SITGRPROLE5:PRETUPS-1003| Group Role Management|To verify that Channel User homepage will display the roles included in the associated Group Role {0} only.
SITGRPROLE6:PRETUPS-1003| Group Role Management|To verify that Channel Admin is able to dis-associate the Group role {0} with User.
SITGRPROLE7:PRETUPS-1003| Group Role Management|To Verify that Superadmin can delete the Group role {0} created with few selected roles.
SITGRPROLE8:PRETUPS-1004| Group Role Management|To verify that a suspended Group Role is not available for association while creating channel User for {0} Category under {1} domain.

#C2S Transfer Rule
PC2STRFRULE1:PRETUPS-428|C2S Transfer Rule|To verify that Network Admin is able to create C2S Transfer Rules for {0} category.
SC2STRFRULE1:PRETUPS-397,PRETUPS-296|C2S Transfer Rule|To verify that Operator is able to create C2S Transfer Rules for Category.
SC2STRFRULE2:PRETUPS-296|C2S Transfer Rule|To verify that proper Message is displayed on successful C2S Transfer rule creation.
SITC2STRFRULE1:PRETUPS-882|C2S Transfer Rule|To verify that Network Admin is Unable to create C2S Transfer Rule when Domain is not selected.
SITC2STRFRULE2:PRETUPS-883|C2S Transfer Rule|To verify that Network Admin is Unable to create C2S Transfer Rule when Nothing is selected.
SITC2STRFRULE3:PRETUPS-884|C2S Transfer Rule|To verify that Network Admin is Unable to create C2S Transfer Rule when Category is not selected.
SITC2STRFRULE4:PRETUPS-885|C2S Transfer Rule|To verify that Network Admin is Unable to create C2S Transfer Rule when Grade is not selected.
SITC2STRFRULE5:PRETUPS-886|C2S Transfer Rule|To verify that Network Admin is Unable to create C2S Transfer Rule when Receiver Type is not selected.
SITC2STRFRULE6:PRETUPS-887|C2S Transfer Rule|To verify that Network Admin is Unable to create C2S Transfer Rule when Service Type is not selected.

#Commission Profile
PCOMMPROFILE1:PRETUPS-277,PRETUPS-345|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} category.
PCOMMPROFILE0:PRETUPS-000|Commission Profile|To verify that Operator User is able to create Other Commission Profile for {0} category.
SCOMMPROFILE0:PRETUPS-000|Commission Profile|To verify that Operator User is able to create Other Commission Profile for {0} category.
PCOMMPROFILE2:PRETUPS-000|Commission Profile|To verify that Operator User is able to modify Other Commission Profile for {0} category.
PCOMMPROFILE3:PRETUPS-000|Commission Profile|To verify that Operator User is able to view Other Commission Profile for {0} category.
SCOMMPROFILE1:PRETUPS-334,PRETUPS-345|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} domain and {1} category.
SCOMMPROFILE2:PRETUPS-334,PRETUPS-345|Commission Profile|To verify that the proper Message is displayed on successful Commission Profile Creation.
SCOMMPROFILE3:PRETUPS-337,PRETUPS-347|Commission Profile|To verify that Operator User is able to modify Commission Profile.
SCOMMPROFILE4:PRETUPS-337,PRETUPS-347|Commission Profile|To verify that the proper Message is displayed on successful Commission Profile Modification.
SCOMMPROFILE5:PRETUPS-342,PRETUPS-349|Commission Profile|To verify that Operator User is able to modify Additional Commission Profile.
SCOMMPROFILE6:PRETUPS-342,PRETUPS-349|Commission Profile|To verify that the proper Message is displayed on successful Additional Commission Profile Modification.
SCOMMPROFILE7:PRETUPS-344,PRETUPS-353|Commission Profile|To verify that Operator User is able to delete Commission Profile {0}.
SCOMMPROFILE8:PRETUPS-344,PRETUPS-353|Commission Profile|To verify that the proper Message is displayed on successful Commission Profile Deletion.
SCOMMPROFILE9:PRETUPS-352,PRETUPS-351|Commission Profile|To verify that Operator User is able to delete Additional Commission Slabs {0}.
SCOMMPROFILE10:PRETUPS-352,PRETUPS-351|Commission Profile|To verify that the proper Message is displayed on successful Additional Commission Profile Creation.
UCOMMPROFILE0:PRETUPS-277|Commission Profile|To verify that Operator User is able to create Other Commission Profile for {0} category.
UCOMMPROFILE1:PRETUPS-346|Commission Profile|To verify that Operator User is able to view Commission Profile for domain {0} and category Name {1}.
UCOMMPROFILE2:PRETUPS-348|Commission Profile|To verify that Operator User is able to do successful Commission Profile Modification for future date.
UCOMMPROFILE3:PRETUPS-348|Commission Profile|To verify that the proper Message is displayed on successful Commission Profile Modification for future date.
UCOMMPROFILE4:PRETUPS-350|Commission Profile|To verify that Operator User is able to suspend Additional Commission Slabs {0}.
UCOMMPROFILE5:PRETUPS-350|Commission Profile|To verify that the proper Message is displayed on successful suspension of Additional Commission Profile .
UCOMMPROFILE6:PRETUPS-354|Commission Profile|To verify that Operator User is not able to create Commission Profile for {0} domain and {1} category with an existing Profile Name.
UCOMMPROFILE7:PRETUPS-354|Commission Profile|To verify that the proper Error Message is displayed on Commission Profile Creation with an existing Profile Name.
UCOMMPROFILE8:PRETUPS-355|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} domain and {1} category with specific Geography.
UCOMMPROFILE9:PRETUPS-355|Commission Profile|To verify that the proper Message is displayed on successful Commission Profile Creation for specific Geography.
UCOMMPROFILE10:PRETUPS-356|Commission Profile|To verify that Operator User is able to delete Commission Profile associated with User.
UCOMMPROFILE11:PRETUPS-356|Commission Profile|To verify that the proper Error Message is displayed when User tries to delete Commission Profile associated with User.
UCOMMPROFILE12:PRETUPS-000|Commission Profile|To Verify that Operator User is not able to create profile with a blank Mandatory field.
UCOMMPROFILE13:PRETUPS-000|Commission Profile|Verify that the proper Error message is displayed when user tries to add a Commission Profile with a blank Mandatory field.
UCOMMPROFILE14:PRETUPS-000|Commission Profile|Verify that Operator User is able to change status of a Commission Profile
UCOMMPROFILE15:PRETUPS-000|Commission Profile|Verify that proper error message is getting displayed on updating Commission Profile Status
SITCOMMPROFILE1:PRETUPS-963|Commission Profile|To verify that C2S Transaction will be successful even if  suspended Additional Commission Slabs but no additional commission will be provided.
SITCOMMPROFILE2:PRETUPS-963|Commission Profile|To verify that channel user will receive additional commission while performing C2S if the additional commisssion in the commission profile associated with him is resumed.
SITCOMMPROFILE3:PRETUPS-964|Commission Profile|Verify that User is able to capture SlabCount of Commission and Additional Commission Profile Slab.
SITCOMMPROFILE4:PRETUPS-966|Commission Profile|Verify that blank Slab Enteries will not give any error as far as One slab has genuine values, Commission Profile Creation will be successful.
SITCOMMPROFILE5:PRETUPS-968|Commission Profile|To verify that the User is able to add an Additional Commission Profile with Specific Gateway .
SITCOMMPROFILE6:PRETUPS-969|Commission Profile|To verify that the User is not able to add an Additional Commission Profile without selecting Access Bearer .
SITCOMMPROFILE7:PRETUPS-971|Commission Profile|To verify that the User is able to add an Additional Commission Profile with Specific Service .
SITCOMMPROFILE8:PRETUPS-972|Commission Profile|To verify that the User is able to add an Additional Commission Profile for particular Service and Particular Gateway .
SITCOMMPROFILE9:PRETUPS-974|Commission Profile|To verify that the User is not able to add an Additional Commission Profile if special characters are entered in Time Slab .
SITCOMMPROFILE10:PRETUPS-975|Commission Profile|Verify that Commission Profile Slab enteries should not cross the maximum amount limit.
SITCOMMPROFILE11:PRETUPS-976|Commission Profile|Verify that Commission Profile Slab enteries should be greater than 0.
SITCOMMPROFILE12:PRETUPS-977|Commission Profile|Verify if To Range of any slab is left blank, Commission Profile Creation will not be successful and will display proper error Message.
SITCOMMPROFILE13:PRETUPS-978|Commission Profile|Verify that Commission Profile Slab enteries should be different from one another.
SITCOMMPROFILE14:PRETUPS-979|Commission Profile|Verify that Tax1 should be less than the From Range of Commission Profile Slab .
SITCOMMPROFILE15:PRETUPS-980|Commission Profile|To verify that C2S Transaction will not be successful if C2S Amount will be less than the From Range of Additional Commission Slab.
SITCOMMPROFILE16:PRETUPS-982|Commission Profile|To verify that Tax1 amount should be less than the From Range of Additional Commission Slab.
SITCOMMPROFILE17:PRETUPS-983|Commission Profile|To verify the impact of tax on C2S after modification of Additional Commission Slab.
SITCOMMPROFILE18:PRETUPS-984|Commission Profile|To verify the impact of time slab on C2S after modification of Additional Commission Slab.
SITCOMMPROFILE19:PRETUPS-985|Commission Profile|To verify the CAC Time slab should be in sync with the Additional Comm Slab.
SITCOMMPROFILE20:PRETUPS-987|Commission Profile|To verify the CAC Time slab should be in proper format for the Additional Comm Slab.
SITCOMMPROFILE21:PRETUPS-988|Commission Profile|To verify that System will throw Error if No Commission Profile is selected for modification.
SITCOMMPROFILE22:PRETUPS-991|Commission Profile|To verify that no additional Commission will be given if the recharge amount is less than the Min Transfer Range.
SITCOMMPROFILE23:PRETUPS-992|Commission Profile|To verify that no additional commission will be given if the recharge amount is not in the Slab Range of Additional Commission Slab.
SITCOMMPROFILE24:PRETUPS-000|Commission Profile|To verify the CBC Validations on successful O2C Transaction
SITCOMMPROFILE27:PRETUPS-1844|Commission Profile|To verify that channel admin is able to associate the commission profile with channel user
SITCOMMPROFILE28:PRETUPS-000|Commission Profile|To verify that other commission profile type and value is required.
SITCOMMPROFILE29:PRETUPS-000|Commission Profile|To verify that other commission profile transfer checkbox is selected.
SITCOMMPROFILE30:PRETUPS-000|Commission Profile|To verify that other commission profile range is greater than previous slab.


#Transfer Control Profile(TCP)
PTRFCNTRLPRF1:PRETUPS-272,PRETUPS-307,PRETUPS-259|Transfer Control Profile|To verify that Super Admin is able to create Category Level TCP for {0} category.
PTRFCNTRLPRF2:PRETUPS-272,PRETUPS-307,PRETUPS-259|Transfer Control Profile|To verify that Network Admin is able to create Channel Level TCP for {0} category.
UTRFCNTRLPRF1:PRETUPS-359,PRETUPS-360|Transfer Control Profile|To verify that Network Admin  is able to suspend the created TCP for {0} category.
UTRFCNTRLPRF2:PRETUPS-361|Transfer Control Profile|To verify that Network Admin  is able to activate the suspended TCP for {0} category.
UTRFCNTRLPRF3:PRETUPS-362|Transfer Control Profile|To verify that Network Admin  is able to modify TCP for {0} category.
UTRFCNTRLPRF4:PRETUPS-363|Transfer Control Profile|To verify that Network Admin  is able to delete TCP of {0} category to Default Profile.
UTRFCNTRLPRF5:PRETUPS-363|Transfer Control Profile|To verify that Proper Message is displayed on successful TCP deletion for service {0} category.
UTRFCNTRLPRF6:PRETUPS-364|Transfer Control Profile|To verify that Network Admin is able to create Default Channel Level TCP for {0} category.
UTRFCNTRLPRF7:PRETUPS-364|Transfer Control Profile|To verify that Network Admin  is able to modify TCP for {0} category to Default Profile.
UTRFCNTRLPRF8:PRETUPS-365|Transfer Control Profile|To verify that Network Admin  is not able to delete Default TCP for {0} category to Default Profile.

SITTRFCNTRLPRF1:PRETUPS-1010|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank Minimum Residual Balance.
SITTRFCNTRLPRF2:PRETUPS-1158|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank Maximum Residual Balance.
SITTRFCNTRLPRF3:PRETUPS-1014|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank Per C2S transaction Minimum Amount.
SITTRFCNTRLPRF4:PRETUPS-1015|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank Per C2S transaction Maximum Amount.
SITTRFCNTRLPRF5:PRETUPS-1016|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank Alerting Balance.
SITTRFCNTRLPRF6:PRETUPS-1017|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank Allowed Max Percentage.
SITTRFCNTRLPRF7:PRETUPS-1018|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailyInCount.
SITTRFCNTRLPRF8:PRETUPS-1019|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailyInAlertingCount.
SITTRFCNTRLPRF9:PRETUPS-1020|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailyInTransferValue.
SITTRFCNTRLPRF10:PRETUPS-1021|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailyInAlertingValue.
SITTRFCNTRLPRF11:PRETUPS-1022|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailyOutCount.
SITTRFCNTRLPRF12:PRETUPS-1023|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailyOutAlertingCount.
SITTRFCNTRLPRF13:PRETUPS-1024|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailyOutTransferValue.
SITTRFCNTRLPRF14:PRETUPS-1025|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailyOutAlertingValue.
SITTRFCNTRLPRF15:PRETUPS-1026|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailySubscriberInCount.
SITTRFCNTRLPRF16:PRETUPS-1027|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailySubscriberInAlertingCount.
SITTRFCNTRLPRF17:PRETUPS-1028|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailySubscriberTransferInValue.
SITTRFCNTRLPRF18:PRETUPS-1029|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailySubscriberTransferInAlertingValue.
SITTRFCNTRLPRF19:PRETUPS-1030|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailySubscriberOutCount.
SITTRFCNTRLPRF20:PRETUPS-1031|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailySubscriberTransferOutAlertingCount.
SITTRFCNTRLPRF21:PRETUPS-1032|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailySubscriberTransferOutValue.
SITTRFCNTRLPRF22:PRETUPS-1033|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank DailySubscriberTransferOutAlertingValue.
SITTRFCNTRLPRF23:PRETUPS-1034|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklyInCount.
SITTRFCNTRLPRF24:PRETUPS-1035|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklyInAlertingCount.
SITTRFCNTRLPRF25:PRETUPS-1037|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklyInTransferValue.
SITTRFCNTRLPRF26:PRETUPS-1038|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklyInAlertingValue.
SITTRFCNTRLPRF27:PRETUPS-1040|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklyOutCount.
SITTRFCNTRLPRF28:PRETUPS-1041|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklyOutAlertingCount.
SITTRFCNTRLPRF29:PRETUPS-1043|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklyOutTransferValue.
SITTRFCNTRLPRF30:PRETUPS-1044|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklyOutAlertingValue.
SITTRFCNTRLPRF31:PRETUPS-1045|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklySubscriberInCount.
SITTRFCNTRLPRF32:PRETUPS-1047|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklySubscriberInAlertingCount.
SITTRFCNTRLPRF33:PRETUPS-1048|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklySubscriberTransferInValue.
SITTRFCNTRLPRF34:PRETUPS-1050|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklySubscriberTransferInAlertingValue.
SITTRFCNTRLPRF35:PRETUPS-1052|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklySubscriberOutCount.
SITTRFCNTRLPRF36:PRETUPS-1057|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklySubscriberTransferOutAlertingCount.
SITTRFCNTRLPRF37:PRETUPS-1058|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklySubscriberTransferOutValue.
SITTRFCNTRLPRF38:PRETUPS-1059|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank WeeklySubscriberTransferOutAlertingValue.
SITTRFCNTRLPRF39:PRETUPS-1060|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlyInCount.
SITTRFCNTRLPRF40:PRETUPS-1062|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlyInAlertingCount.
SITTRFCNTRLPRF41:PRETUPS-1063|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlyInTransferValue.
SITTRFCNTRLPRF42:PRETUPS-1064|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlyInAlertingValue.
SITTRFCNTRLPRF43:PRETUPS-1065|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlyOutCount.
SITTRFCNTRLPRF44:PRETUPS-1066|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlyOutAlertingCount.
SITTRFCNTRLPRF45:PRETUPS-1068|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlyOutTransferValue.
SITTRFCNTRLPRF46:PRETUPS-1070|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlyOutAlertingValue.
SITTRFCNTRLPRF47:PRETUPS-1072|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlySubscriberInCount.
SITTRFCNTRLPRF48:PRETUPS-1074|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlySubscriberInAlertingCount.
SITTRFCNTRLPRF49:PRETUPS-1075|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlySubscriberTransferInValue.
SITTRFCNTRLPRF50:PRETUPS-1077|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlySubscriberTransferInAlertingValue.
SITTRFCNTRLPRF51:PRETUPS-1036|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlySubscriberOutCount.
SITTRFCNTRLPRF52:PRETUPS-1039|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlySubscriberTransferOutAlertingCount.
SITTRFCNTRLPRF53:PRETUPS-1042|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlySubscriberTransferOutValue.
SITTRFCNTRLPRF54:PRETUPS-1046|Transfer Control Profile|To verify that proper Error message is getting displayed on entering blank MonthlySubscriberTransferOutAlertingValue.
SITTRFCNTRLPRF55:PRETUPS-1049|Transfer Control Profile|To verify that proper Error message is getting displayed on entering Daily TransferInCount greater than Weekly Transfer In Count.
SITTRFCNTRLPRF56:PRETUPS-1051|Transfer Control Profile|To verify that proper Error message is getting displayed on entering Daily TransferInAlertingCount greater than Weekly Transfer Alerting In Count.
SITTRFCNTRLPRF57:PRETUPS-1053|Transfer Control Profile|To verify that proper Error message is getting displayed on entering Daily InTransferValue greater than WeeklyInTransferValue.
SITTRFCNTRLPRF58:PRETUPS-1054|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyInAlertingValue greater than WeeklyInAlertingValue.
SITTRFCNTRLPRF59:PRETUPS-1055|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyOutCount greater than WeeklyOutCount.
SITTRFCNTRLPRF60:PRETUPS-1056|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyOutAlertingCount greater than WeeklyOutAlertingCount.
SITTRFCNTRLPRF61:PRETUPS-1061|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyOutTransferValue greater than WeeklyOutTransferValue.
SITTRFCNTRLPRF62:PRETUPS-1067|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyOutAlertingValue greater than WeeklyOutAlertingValue.
SITTRFCNTRLPRF63:PRETUPS-1069|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberInCount greater than WeeklySubscriberInCount.
SITTRFCNTRLPRF64:PRETUPS-1071|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberInAlertingCount greater than WeeklySubscriberInAlertingCount.
SITTRFCNTRLPRF65:PRETUPS-1073|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferInValue greater than WeeklySubscriberTransferInValue.
SITTRFCNTRLPRF66:PRETUPS-1076|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyWSubscriberTransferInAlertingValue greater than WeeklySubscriberTransferInAlertingValue.
SITTRFCNTRLPRF67:PRETUPS-1078|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferOutCount greater than WeeklySubscriberTransferOutCount.
SITTRFCNTRLPRF68:PRETUPS-1079|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferOutAlertingCount greater than WeeklySubscriberTransferOutAlertingCount.
SITTRFCNTRLPRF69:PRETUPS-1081|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferOutValue greater than WeeklySubscriberTransferOutValue.
SITTRFCNTRLPRF70:PRETUPS-1082|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferOutAlertingValue greater than WeeklySubscriberTransferOutAlertingValue.
SITTRFCNTRLPRF71:PRETUPS-1086|Transfer Control Profile|To verify that proper Error message is getting displayed on entering Daily TransferInCount greater than Monthly Transfer In Count.
SITTRFCNTRLPRF72:PRETUPS-1088|Transfer Control Profile|To verify that proper Error message is getting displayed on entering Daily TransferInAlertingCount greater than Monthly Transfer Alerting In Count.
SITTRFCNTRLPRF73:PRETUPS-1089|Transfer Control Profile|To verify that proper Error message is getting displayed on entering Daily InTransferValue greater than MonthlyInTransferValue.
SITTRFCNTRLPRF74:PRETUPS-1090|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyInAlertingValue greater than MonthlyInAlertingValue.
SITTRFCNTRLPRF75:PRETUPS-1092|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyOutCount greater than MonthlyOutCount.
SITTRFCNTRLPRF76:PRETUPS-1094|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyOutAlertingCount greater than MonthlyOutAlertingCount.
SITTRFCNTRLPRF77:PRETUPS-1097|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyOutTransferValue greater than MonthlyOutTransferValue.
SITTRFCNTRLPRF78:PRETUPS-1099|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyOutAlertingValue greater than MonthlyOutAlertingValue.
SITTRFCNTRLPRF79:PRETUPS-1100|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberInCount greater than MonthlySubscriberInCount.
SITTRFCNTRLPRF80:PRETUPS-1103|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberInAlertingCount greater than MonthlySubscriberInAlertingCount.
SITTRFCNTRLPRF81:PRETUPS-1104|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferInValue greater than MonthlySubscriberTransferInValue.
SITTRFCNTRLPRF82:PRETUPS-1106|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailyWSubscriberTransferInAlertingValue greater than MonthlySubscriberTransferInAlertingValue.
SITTRFCNTRLPRF83:PRETUPS-1107|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferOutCount greater than MonthlySubscriberTransferOutCount.
SITTRFCNTRLPRF84:PRETUPS-1109|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferOutAlertingCount greater than MonthlySubscriberTransferOutAlertingCount.
SITTRFCNTRLPRF85:PRETUPS-1112|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferOutValue greater than MonthlySubscriberTransferOutValue.
SITTRFCNTRLPRF86:PRETUPS-1080|Transfer Control Profile|To verify that proper Error message is getting displayed on entering DailySubscriberTransferOutAlertingValue greater than MonthlySubscriberTransferOutAlertingValue.
SITTRFCNTRLPRF87:PRETUPS-1083|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weekly TransferInCount greater than Monthly Transfer In Count.
SITTRFCNTRLPRF88:PRETUPS-1084|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weekly TransferInAlertingCount greater than Monthly Transfer Alerting In Count.
SITTRFCNTRLPRF89:PRETUPS-1085|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weekly InTransferValue greater than MonthlyInTransferValue.
SITTRFCNTRLPRF90:PRETUPS-1087|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklyInAlertingValue greater than MonthlyInAlertingValue.
SITTRFCNTRLPRF91:PRETUPS-1091|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklyOutCount greater than MonthlyOutCount.
SITTRFCNTRLPRF92:PRETUPS-1093|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklyOutAlertingCount greater than MonthlyOutAlertingCount.
SITTRFCNTRLPRF93:PRETUPS-1095|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklyOutTransferValue greater than MonthlyOutTransferValue.
SITTRFCNTRLPRF94:PRETUPS-1096|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklyOutAlertingValue greater than MonthlyOutAlertingValue.
SITTRFCNTRLPRF95:PRETUPS-1098|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklySubscriberInCount greater than MonthlySubscriberInCount.
SITTRFCNTRLPRF96:PRETUPS-1101|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklySubscriberInAlertingCount greater than MonthlySubscriberInAlertingCount.
SITTRFCNTRLPRF97:PRETUPS-1102|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklySubscriberTransferInValue greater than MonthlySubscriberTransferInValue.
SITTRFCNTRLPRF98:PRETUPS-1105|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklyWSubscriberTransferInAlertingValue greater than MonthlySubscriberTransferInAlertingValue.
SITTRFCNTRLPRF99:PRETUPS-1108|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklySubscriberTransferOutCount greater than MonthlySubscriberTransferOutCount.
SITTRFCNTRLPRF100:PRETUPS-1110|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklySubscriberTransferOutAlertingCount greater than MonthlySubscriberTransferOutAlertingCount.
SITTRFCNTRLPRF101:PRETUPS-1111|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklySubscriberTransferOutValue greater than MonthlySubscriberTransferOutValue.
SITTRFCNTRLPRF102:PRETUPS-1113|Transfer Control Profile|To verify that proper Error message is getting displayed on entering weeklySubscriberTransferOutAlertingValue greater than MonthlySubscriberTransferOutAlertingValue.
SITTRFCNTRLPRF103:PRETUPS-1114|Transfer Control Profile|To verify that the profile name and short name is unique in the system.






#Geographical Domain Management
PGEODOMAINMGMT1:PRETUPS-410,PRETUPS-283|Geographical Domain Management|To verify that Operator User is able to create {0}.
PGEODOMAINMGMT2:PRETUPS-410|Geographical Domain Management|To verify that Default Grade is available in system for {1}.
SGEODOMAINMGMT1:PRETUPS-283|Geographical Domain Management|To verify that proper message is displayed on successful {0} creation.
UGEODOMAINMGMT1:PRETUPS-000|Geographical Domain Management|To verify that Operator is able to create Geographical Domains.
SITGEODOMAINMGMT1:PRETUPS-879|Geographical Domain Management|To verify that operator is unable to add Geographical Domain if Type is not selected.
SITGEODOMAINMGMT2:PRETUPS-879|Geographical Domain Management|To verify that operator is unable to add Geographical Domain if domainCode is null.
SITGEODOMAINMGMT3:PRETUPS-879|Geographical Domain Management|To verify that operator is unable to add Geographical Domain if domainName is null.
SITGEODOMAINMGMT4:PRETUPS-879|Geographical Domain Management|To verify that operator is unable to add Geographical Domain if domainShortName is null.
SITGEODOMAINMGMT5:PRETUPS-879|Geographical Domain Management|To verify that operator is able to add default Geographical Domain.
SITGEODOMAINMGMT6:PRETUPS-879|Geographical Domain Management|To verify that operator is unable to modify Geographical Domain when status is not Selected.
SITGEODOMAINMGMT7:PRETUPS-879|Geographical Domain Management|To verify that operator is able to modify status for Geographical Domain.
SITGEODOMAINMGMT8:PRETUPS-879|Geographical Domain Management|To verify that operator is unable to delete Default Geographical Domain.
SITGEODOMAINMGMT9:PRETUPS-879|Geographical Domain Management|To verify that operator is able to modify Geographical Domain.
SITGEODOMAINMGMT10:PRETUPS-879|Geographical Domain Management|To verify that operator is able to delete Geographical Domain.

#Grade Creation
PGRADECREATION1:PRETUPS-267,PRETUPS-285,PRETUPS-290|Grade Creation|To verify that Super Admin is able to perform Grade Creation for {0} category.
SGRADECREATION1:PRETUPS-285,PRETUPS-290|Grade Creation|To verify that the proper Message is displayed on successful Grade Creation.
UGRADECREATION1:PRETUPS-290,PRETUPS-291|Grade Creation|To verify that Super Admin is able to modify Grade for {0} category.
UGRADECREATION2:PRETUPS-291|Grade Creation|To verify that the proper Message is displayed on successful Grade Modification.
UGRADECREATION3:PRETUPS-294|Grade Creation|To verify that Super Admin is able to delete Grade for {0} category.
UGRADECREATION4:PRETUPS-294|Grade Creation|To verify that the proper Message is displayed on successful Grade Deletion.
SITGRADECREATION1:PRETUPS-912|Grade Creation|To verify that Super Admin is able to perform Default Grade Creation for {0} category.
SITGRADECREATION2:PRETUPS-913|Grade Creation|To verify that Super Admin is not able to delete a default grade.
SITGRADECREATION3:PRETUPS-914|Grade Creation|To verify that Super Admin is not able to create a grade with Duplicate Grade Code.
SITGRADECREATION4:PRETUPS-915|Grade Creation|To verify that Super Admin is not able to create a grade with Duplicate Grade Name.
SITGRADECREATION5:PRETUPS-916|Grade Creation|To verify that Super Admin is not able to create a grade without Grade Code.
SITGRADECREATION6:PRETUPS-917|Grade Creation|To verify that Super Admin is not able to create a grade without Grade Name.

#O2C TransferRule Creation
PO2CTRFRULE1:PRETUPS-420,PRETUPS-393,PRETUPS-279|O2C Transfer Rule|To verify that Network Admin is able to create O2C Transfer Rule for {0} category.
PO2CTRFRULE2:PRETUPS-420,PRETUPS-279|O2C Transfer Rule|To verify that Network Admin is able to approve O2C Transfer Rule for {0} category.
SO2CTRFRULE1:PRETUPS-393,PRETUPS-279|O2C Transfer Rule|To verify that proper message is displayed on successful O2C Transfer Rule Initiate.
SO2CTRFRULE2:PRETUPS-393,PRETUPS-279|O2C Transfer Rule|To verify that proper message is displayed on successful O2C Transfer Rule approval.
SO2CTRFRULE3:PRETUPS-394,PRETUPS-280|O2C Transfer Rule|To verify that Network Admin is able to modify O2C Transfer Rule for {0} category.
SO2CTRFRULE4:PRETUPS-394,PRETUPS-280|O2C Transfer Rule|To verify that Network Admin is able to approve O2C Transfer Rule after modification for {0} category.
SITO2CTRFRULE1:PRETUPS-370|O2C Transfer Rule|To verify that operator is unable to add O2C Transfer Rule if Domain is not selected.
SITO2CTRFRULE2:PRETUPS-370|O2C Transfer Rule|To verify that operator is unable to add O2C Transfer Rule if Category is null.
SITO2CTRFRULE3:PRETUPS-370|O2C Transfer Rule|To verify that operator is unable to add O2C Transfer Rule if firstApprovalLimit is null.
SITO2CTRFRULE4:PRETUPS-370|O2C Transfer Rule|To verify that operator is unable to add O2C Transfer Rule if SecondApprovalLimit is null.
SITO2CTRFRULE5:PRETUPS-370|O2C Transfer Rule|To verify that operator is unable to add O2C Transfer Rule if no product is selected.
SITO2CTRFRULE6:PRETUPS-370|O2C Transfer Rule|To verify that operator is unable to add O2C Transfer Rule if firstApprovalLimit is not numeric.
SITO2CTRFRULE7:PRETUPS-370|O2C Transfer Rule|To verify that operator is unable to add O2C Transfer Rule if SecondApprovalLimit is not numeric.
SITO2CTRFRULE8:PRETUPS-370|O2C Transfer Rule|To verify that operator is unable to add O2C Transfer Rule if SecondApprovalLimit is less than FirstApprovalLimit.
SITO2CTRFRULE9:PRETUPS-370|O2C Transfer Rule|To verify that operator is able to view successfully added O2C Transfer Rule.

#Network Stock Creation
PNETWORKSTOCK1:PRETUPS-292|Network Stock|To verify that Network Admin is able to initiate Network Stock successfully.
PNETWORKSTOCK2:PRETUPS-292,PRETUPS-412,PRETUPS-268|Network Stock|To verify that Network Admin is able to Approve Network Stock at Level 1 Approval.
PNETWORKSTOCK3:PRETUPS-292,PRETUPS-412,PRETUPS-268|Network Stock|To verify that Network Admin is able to Approve Network Stock at Level 2 Approval.
SNETWORKSTOCK1:PRETUPS-412,PRETUPS-268|Network Stock|To verify that Network Admin is able to initiate Network Stock for {0} wallet successfully.
SNETWORKSTOCK2:PRETUPS-412,PRETUPS-268|Network Stock|To verify that proper Network Stock Initiation Message is displayed.
SNETWORKSTOCK3:PRETUPS-412,PRETUPS-268|Network Stock|To verify that proper message is displayed on Successful Network Stock Approval.
UNETWORKSTOCK1:PRETUPS-000,PRETUPS-268|Network Stock|To verify that Network Stock is updated on View Current Stock link on successful Network Stock Initiation for {0} wallet.
UNETWORKSTOCK2:PRETUPS-000,PRETUPS-268|Network Stock|To verify that On Successful Network Stock Initiation an entry is made in Network Stock Transactions Table.
UNETWORKSTOCK3:PRETUPS-000,PRETUPS-270|Network Stock|To verify that Operator User is not able to Initiate Network Stock more than the specified MRP amount for {0} wallet Type.
UNETWORKSTOCK4:PRETUPS-000,PRETUPS-270|Network Stock|To verify that Proper Error Message is displayed on performing Network Stock Initation for more than the specificed MRP amount.
UNETWORKSTOCK5:PRETUPS-000,PRETUPS-271|Network Stock|To verify that Operator User is able to Reject Network Stock Transaction at Level 1 Approval for {0} wallet Type.
UNETWORKSTOCK6:PRETUPS-000,PRETUPS-271|Network Stock|To verify that Proper Rejection message is displayed on successful Network Stock Reject.
UNETWORKSTOCK7:PRETUPS-000,PRETUPS-273|Network Stock|To verify that Operator User is able to Reject Network Stock Transaction at Level 2 Approval for {0} wallet Type.
UNETWORKSTOCK8:PRETUPS-000,PRETUPS-273|Network Stock|To verify that Proper Rejection message is displayed on successful Network Stock Reject.
UNETWORKSTOCK9:PRETUPS-000,PRETUPS-274|Network Stock|To verify that Network Admin is able to reduce Network Stock for {0} wallet successfully during Approval Level 1.
UNETWORKSTOCK10:PRETUPS-275|Network Stock|To verify that Network Stock is automatically initiated if the stock decreases below the defined amount.
SITNETWORKSTOCK1:PRETUPS-266|Network Stock|To verify that proper error message is displayed if user does not select Wallet Type while Performing Network Stock Initiate.
SITNETWORKSTOCK2:PRETUPS-269|Network Stock|To verify that proper error message is displayed if user does not enter Network Stock Initiation Amount.
SITNETWORKSTOCK3:PRETUPS-276|Network Stock|To verify that user is able to click Back Button.
SITNETWORKSTOCK4:PRETUPS-281|Network Stock|To verify that proper error message is displayed if user enters 0 as approval Quantity.
SITNETWORKSTOCK5:PRETUPS-282|Network Stock|To verify that proper error message is displayed if user enteres Approval Quantity more than the Initiated quantity.
SITNETWORKSTOCK6:PRETUPS-284|Network Stock|To verify that operator user is able to Cancel Network Stock Transaction at Approval Level 1.
SITNETWORKSTOCK7:PRETUPS-286|Network Stock|To verify that user is able to click Back Button on Network Stock Approval Level 1.
SITNETWORKSTOCK8:PRETUPS-288|Network Stock|To verify that user is able to click Reset Button on Network Stock Approval Level 1.
SITNETWORKSTOCK9:PRETUPS-289|Network Stock|To verify that operator user is able to Cancel Network Stock Transaction at Approval Level 2.
SITNETWORKSTOCK10:PRETUPS-293|Network Stock|To verify that user is able to click Back Button on Network Stock Approval Level 2.
SITNETWORKSTOCK11:PRETUPS-299|Network Stock|To verify that user is view initiated Network Stock Transaction in Network Stock Transactions using TransactionID..
SITNETWORKSTOCK12:PRETUPS-300|Network Stock|To verify that user is view initiated Network Stock Transaction in Network Stock Transactions using FROM & TO Date criteria..
SITNETWORKSTOCK13:PRETUPS-325|Network Stock|To verify that proper error message is displayed if user does not select Wallet Type while Performing Network Stock Deduction.
SITNETWORKSTOCK14:PRETUPS-332|Network Stock|To verify that proper error message is displayed if user does not enter Network Stock Deduction Amount.
SITNETWORKSTOCK15:PRETUPS-339|Network Stock|To verify that user is able to click Back Button while performing Network Stock Deduction.
SITNETWORKSTOCK16:PRETUPS-1842|Network Stock|To verify that Network admin is able to initiate stock reversal .
SITNETWORKSTOCK17:PRETUPS-1843|Network Stock|To verify that Network admin is able to approve the network stock deduction

#Network Admin Creation
PNETWORKADMINCREATION1:PRETUPS-000|Network Admin Creation|To verify {0} is able to initiate {1}
PNETWORKADMINCREATION2:PRETUPS-000|Network Admin Creation|To verify Super Admin is able to approve Network Admin
PNETWORKADMINCREATION3:PRETUPS-000|Network Admin Creation|To verify that Network Admin is prompted for password change on first login.

#O2CTransfer IDEA
PO2CTRFIDEA1:PRETUPS-000|FOC Transfer - EXTGW|To verify that Operator user is able to perform FOC Transfer for {0} OriginID User through EXTGW.


#SIT Transaction Reversal O2C
SITO2CTXNREV1:PRETUPS-893| Transaction Reversal O2C | To verify that Channel Admin is able to perform Transaction Reverse O2C from category {0} with parent category {1} using TXN ID for {2} .
SITO2CTXNREV2:PRETUPS-894| Transaction Reversal O2C | To verify that Channel Admin is able to perform Transaction Reverse O2C from category {0} with parent category {1} using MSISDN for {2} .
SITO2CTXNREV3:PRETUPS-895| Transaction Reversal O2C | To verify that Channel Admin is able to perform Transaction Reverse O2C from category {0} with parent category {1} using Geographical Domain for {2} .
SITO2CTXNREV4:PRETUPS-896| Transaction Reversal O2C |To verify that proper validation message is displayed if user's balance is less than initiated reversal amount


#SIT Transaction Reversal C2C
SITC2CTXNREV1:PRETUPS-1167| Transaction Reversal C2C | To verify that Channel Admin is able to perform Transaction Reverse C2C from category {0} with parent category {1} .
SITC2CTXNREV2:PRETUPS-1168| Transaction Reversal C2C | To verify that C2C Transaction Reverse is successful with Sender MSISDN of {0}
SITC2CTXNREV3:PRETUPS-1169| Transaction Reversal C2C | To verify that C2C Transaction Reverse is successful with Sender LoginID from  {0} to  {1} .
SITC2CTXNREV4:PRETUPS-1170| Transaction Reversal C2C | To verify that C2C Transaction Reverse is successful with Domain Code {0}
SITC2CTXNREV5:PRETUPS-1171| Transaction Reversal C2C | To verify that C2C Transaction Reverse is successful with Balance Calculation for Domain {0}
SITC2CTXNREV6:PRETUPS-1171| Transaction Reversal C2C | To verify that C2C Transaction Reverse is successful with Domain Code with CRDR Validation: {0}
SITC2CTXNREV7:PRETUPS-1172| Transaction Reversal C2C | To verify that the Operator User is not able to do the reversal of the valid transaction ID twice.

#Message Gateway
SITMSGGTW1:PRETUPS-000| Message Gateway | To verify that Super Admin is able to add Message Gateway for {0}.
SITMSGGTW2:PRETUPS-000| Message Gateway | To verify that Super Admin is able to modify Message Gateway.
SITMSGGTW3:PRETUPS-000| Message Gateway | To verify that Super Admin is able to associate message gateway Mapping.
SITMSGGTW4:PRETUPS-000| Message Gateway | To verify that Super Admin is able to suspend a message Gateway.
SITMSGGTW5:PRETUPS-000| Message Gateway | To verify that Super Admin is able to delete message Gateway Mapping.
SITMSGGTW6:PRETUPS-000| Message Gateway | To verify that Super Admin is able to delete message Gateway.

#Service Class Management
SITSRVCLASS1:PRETUPS-993| Service Class Management | To verify that Super Admin is able to add Service Class for specific Interface.
SITSRVCLASS2:PRETUPS-993| Service Class Management | To verify that Super Admin is able to modify Service Class for specific Interface.
SITSRVCLASS3:PRETUPS-993| Service Class Management | To verify that Super Admin is able to delete Service Class for specific Interface.

#Modify C2S Transfer Rule
SMODIFYC2STRFRULE1:PRETUPS-398,PRETUPS-301|C2S Transfer Rule Modification|To verify that Operator is able to modify C2S Transfer Rule for Category {0}.
SMODIFYC2STRFRULE2:PRETUPS-398,PRETUPS-301|C2S Transfer Rule Modification|To verify that proper Message is displayed on Successful Transfer Rule Modification.
SITMODIFYC2STRFRULE1:PRETUPS-904|C2S Transfer Rule Modification|To verify that proper Message is displayed on Successful Transfer Rule Modification
SITMODIFYC2STRFRULE2:PRETUPS-906|C2S Transfer Rule Modification|To verify that Operator is not able to modify C2S Transfer Rule for Category without selecting any Transfer Rule.
SITMODIFYC2STRFRULE3:PRETUPS-907|C2S Transfer Rule Modification|To verify that Operator is not able to modify C2S Transfer Rule for Category without selecting status.
SITMODIFYC2STRFRULE4:PRETUPS-908|C2S Transfer Rule Modification|To verify that Operator is able to modify C2S Transfer Rule for Category after verifying its status only.
SITMODIFYC2STRFRULE5:PRETUPS-909|C2S Transfer Rule Modification|To verify that Operator is able to reset  while modifying C2S Transfer Rule.
SITMODIFYC2STRFRULE6:PRETUPS-910|C2S Transfer Rule Modification|To verify that Operator is able to click back for visiting previous page while modifying C2S Transfer Rule.
SITMODIFYC2STRFRULE7:PRETUPS-911|C2S Transfer Rule Modification|To verify that Operator is able to delete C2S Transfer Rule.

#Network Status
SNETWORKSTATUS1:PRETUPS-539|Network Activate / Deactivate|To verify that Operator user is able to Deactivate Network.
SNETWORKSTATUS2:PRETUPS-539|Network Activate / Deactivate|To verify that proper Message is displayed on successful Network Deactivation.
SNETWORKSTATUS3:PRETUPS-539|Network Activate / Deactivate|To verify that Operator user is not able to login to application on Successful Network Deactivation.
SNETWORKSTATUS4:PRETUPS-548|Network Activate / Deactivate|To verify that Operator user is able to Activate Network.
SNETWORKSTATUS5:PRETUPS-548|Network Activate / Deactivate|To verify that Proper Message is displayed on Successful Network Activation.
SNETWORKSTATUS6:PRETUPS-548|Network Activate / Deactivate|To verify that Operator User is able to login to application successfully after Successful Network Activation.

#O2C Withdrawal
SO2CWITHDRAWAL1:PRETUPS-430|O2C Withdrawal|To verify that Operator user is able to perform Operator to channel withdrawal for category {0}, product Type {1}.
SO2CWITHDRAWAL2:PRETUPS-430|O2C Withdrawal|To validate Network Stocks on successful Operator to Channel Withdraw.
SO2CWITHDRAWAL3:PRETUPS-430|O2C Withdrawal|To validate Receiver User Balance on successful Operator to Channel Withdraw.
SITO2CWITHDRAWAL1:PRETUPS-000|O2C Withdrawal|To verify that Operator user can not withdraw amount from category {0} channel user with MSISDN {1} and product {2} when quantity is more than current balance of channel user.

#Add P2P transfer rule negative
PRETUPS-165:PRETUPS-165|Add P2P Transfer Rule| To verify proper Validations are thrown when all are left blank
PRETUPS-166:PRETUPS-166|Add P2P Transfer Rule| To verify proper Validations are thrown when Receiver,service type, sub service, card group left blank.
PRETUPS-167:PRETUPS-167|Add P2P Transfer Rule| To verify proper Validations are thrown when service type, sub service, card group left blank.
PRETUPS-168:PRETUPS-168|Add P2P Transfer Rule| To verify proper Validations are thrown when Sender,Receiver,service type, sub service, card group left blank.

#Modify P2P transfer rule negative
PRETUPS-169:PRETUPS-169|Modify P2P Transfer Rule | To verify Validation when nothing is selected
PRETUPS-170:PRETUPS-170|Modify P2P Transfer Rule | To verify validation when status is not selected on next page for Service ({0}), Sub-Service ({1}), Card-Group ({2}), Request Bearer ({3}).

#P2P Transfer Rule
PRETUPS-162:PRETUPS-338|P2P Transfer Rule|To verify that Operator is able to create P2P Transfer Rules for Service ({0}), Sub-Service ({1}), Card-Group ({2}), Request Bearer ({3}).
PRETUPS-164:PRETUPS-343|P2P Transfer Rule|To verify that Operator is able to View P2P Transfer Rules for Service ({0}), Sub-Service ({1}), Card-Group ({2}), Request Bearer ({3}).
UP2PTRFRULE2:PRETUPS-338|P2P Transfer Rule|To Verify that proper message is displayed on successful transfer rule creation.
#FOC Transfer
UFOCTRANSFER1:PRETUPS-305|FOC Transfer|To verify that Channel Admin is able to initiate FOC Transfer for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER2:PRETUPS-305|FOC Transfer|To verify that Proper Message is displayed on successful FOC Transfer Initiate for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER3:PRETUPS-305|FOC Transfer|To verify that Channel Admin is able to perform FOC Transfer Approval 1 for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER4:PRETUPS-305|FOC Transfer|To verify that Channel Admin is able to perform FOC Transfer Approval 2 for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER5:PRETUPS-305|FOC Transfer|To verify that Channel Admin is able to perform FOC Transfer Approval 3 for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER6:PRETUPS-305|FOC Transfer|To verify that Proper Message is displayed on successful FOC Transfer for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER7:PRETUPS-305|FOC Transfer|To validate Network Stocks on successful Operator to Channel Transfer.
UFOCTRANSFER8:PRETUPS-305|FOC Transfer|To validate Receiver User Balance on successful Operator to Channel Transfer.
UFOCTRANSFER9:PRETUPS-309|FOC Transfer|To verify that Channel Admin is able to Reject FOC Transfer Request at Level 1 Approval for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER10:PRETUPS-309|FOC Transfer|To verify that Proper Message is displayed on Successful FOC Transfer Rejection at Approval Level 1 for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER11:PRETUPS-309|FOC Transfer|To verify that Channel Admin is able to Reject FOC Transfer Request at Level 2 Approval for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER12:PRETUPS-309|FOC Transfer|To verify that Proper Message is displayed on Successful FOC Transfer Rejection at Approval Level 2 for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER13:PRETUPS-309|FOC Transfer|To verify that Channel Admin is able to Reject FOC Transfer Request at Level 3 Approval for category {0} with parent category {1}, product type {2}.
UFOCTRANSFER14:PRETUPS-309|FOC Transfer|To verify that Proper Message is displayed on Successful FOC Transfer Rejection at Approval Level 3 for category {0} with parent category {1}, product type {2}.
SITFOCTRANSFER01:PRETUPS-000|FOC Transfer|To verify that FOC Transfer is not successful for {0} category user when associated TCP is not active in the system.
SITFOCTRANSFER02:PRETUPS-000|FOC Transfer|To verify that FOC Transfer is not successful for {0} category user if entered quantity is Alphanumeric.
SITFOCTRANSFER03:PRETUPS-000|FOC Transfer|To verify that FOC Transfer is not successful for {0} category user if entered quantity contains Special Characters.
SITFOCTRANSFER04:PRETUPS-000|FOC Transfer|To verify that FOC Transfer is not successful for {0} category user if the user is suspended.

#Modify P2P Transfer Rule
PRETUPS-163:PRETUPS-340|P2P Transfer Rule|To verify that Operator is able to Modify(Suspend) P2P Transfer Rules for Service ({0}), Sub-Service ({1}), Card-Group ({2}), Request Bearer ({3}).
UMODIFYP2PTRFRULE2:PRETUPS-340|P2P Transfer Rule Modification|To verify that proper message is displayed on successful Transfer Rule Modification(Status).
UMODIFYP2PTRFRULE3:PRETUPS-341|P2P Transfer Rule Modification|To verify that Operator is able to Modify(Resume) P2P Transfer Rules for Service ({0}), Sub-Service ({1}), Card-Group ({2}), Request Bearer ({3}).
UMODIFYP2PTRFRULE4:PRETUPS-341|P2P Transfer Rule Modification|To verify that proper message is displayed on successful Transfer Rule Modification(Card Group).

#View C2S Transfer Rule
UVIEWC2STRFRULE1:PRETUPS-903,PRETUPS-303|View C2S Transfer Rule|To verify that Operator is able to view C2S Transfer Rules for {0} Service, {1} Domain, {2} Category.
UVIEWC2STRFRULE2:PRETUPS-903,PRETUPS-303|View C2S Transfer Rule|To verify that created C2S transfer rule is displayed.

#View P2P Transfer Rule
UVIEWP2PTRFRULE1:PRETUPS-000|View P2P Transfer Rule|To verify that Operator is able to view P2P Transfer Rules for {0} Service, {1} Domain, {2} Category.
UVIEWP2PTRFRULE2:PRETUPS-000|View P2P Transfer Rule|To verify that created P2P transfer rule is displayed.

#Network Interface
UNETINTERFACE1:PRETUPS-000|Network Interfaces|To verify that Network Interface is added successfully
UNETINTERFACE2:PRETUPS-000|Network Interfaces|To verify that proper message is displayed on successfully adding a network interface
UNETINTERFACE3:PRETUPS-000|Network Interfaces|To verify that Network Interface is modified successfully
UNETINTERFACE4:PRETUPS-000|Network Interfaces|To verify that proper message is displayed on successful modification of a network interface
UNETINTERFACE5:PRETUPS-000|Network Interfaces|To verify that Network Interface is deleted successfully
UNETINTERFACE6:PRETUPS-000|Network Interfaces|To verify that proper message is displayed on successful deletion of a network interface

#Network Services
UNETSERVICES1:PRETUPS-388|Network Services|To verify that error message is displayed if Language 1 field is blank.
UNETSERVICES2:PRETUPS-388|Network Services|To verify that proper message is displayed on keeping the language 1 description field empty.
UNETSERVICES3:PRETUPS-389|Network Services|To verify that error message is displayed if Language 2 field is blank.
UNETSERVICES4:PRETUPS-389|Network Services|To verify that proper message is displayed on keeping the language 2 description field empty.
UNETSERVICES5:PRETUPS-390|Network Services|To verify that service status is modified successfully.
UNETSERVICES6:PRETUPS-390|Network Services|To verify that proper message is displayed on successful service status modification.
SITNETSERVICES1:PRETUPS-1131|Network Services|To verify that error message is displayed if Language 1 field is blank.
SITNETSERVICES2:PRETUPS-1131|Network Services|To verify that proper message is displayed on keeping the language 1 description field empty.
SITNETSERVICES3:PRETUPS-1133|Network Services|To verify that error message is displayed if Language 2 field is blank.
SITNETSERVICES4:PRETUPS-1133|Network Services|To verify that proper message is displayed on keeping the language 2 description field empty.
SITNETSERVICES5:PRETUPS-1137|Network Services|To verify that service status is modified[SUSPEND] successfully.
SITNETSERVICES6:PRETUPS-1137|Network Services|To verify that proper message is displayed on successful service status modification.
SITNETSERVICES7:PRETUPS-1139|Network Services|To verify that service status is modified[ACTIVE] successfully.
SITNETSERVICES8:PRETUPS-1139|Network Services|To verify that proper message is displayed on successful service status modification.
SITNETSERVICES9:PRETUPS-1143|Network Services|To verify that error message is displayed if module is not selected.
SITNETSERVICES10:PRETUPS-1143|Network Services|To verify that proper message is displayed on unsuccessful service status modification.

#O2C Return
UO2CRETURN1:PRETUPS-320|Operator to Channel Return|To verify that {0} category user is able to perform O2C Return.
UO2CRETURN2:PRETUPS-320|Operator to Channel Return|To validate Network Stocks on successful Operator to Channel Return.
UO2CRETURN3:PRETUPS-320|Operator to Channel Return|To validate Receiver User Balance on successful Operator to Channel Return.
UO2CRETURN4:PRETUPS-1854|Operator to Channel Return|To verify that proper error message is displayed if the pin entered is incorrect.

#Update Cache
UUPDATECACHE1:PRETUPS-321|Update Cache|To verify that Operator is able to perform Update Cache successfully.

#AUTO O2C Transfer
SITAUTOO2C1:PRETUPS-938|AUTO O2C Transfer|To verify that proper error message is displayed if Geographical Domain is not Selected.
SITAUTOO2C2:PRETUPS-941|AUTO O2C Transfer|To verify that proper error message is displayed if  Domain is not Selected.
SITAUTOO2C3:PRETUPS-000|AUTO O2C Transfer|To verify that proper error message is displayed if  Category is not Selected.
SITAUTOO2C4:PRETUPS-942|AUTO O2C Transfer|To verify that proper error message is displayed if  Channel User for particular Geographical Domain is not Present.
SITAUTOO2C5:PRETUPS-943|AUTO O2C Transfer|To verify that proper message is displayed when Auto O2C is initiated Successfully .
SITAUTOO2C6:PRETUPS-945|AUTO O2C Transfer|To verify that proper error is displayed when Auto O2C is initiated for a particular User is already Initiated .
SITAUTOO2C7:PRETUPS-000|AUTO O2C Transfer|To verify that proper message is displayed when Auto O2C is rejected Successfully .
SITAUTOO2C8:PRETUPS-946|AUTO O2C Transfer|To verify that proper message is displayed when Auto O2C is approved Successfully at level 1.
SITAUTOO2C9:PRETUPS-948|AUTO O2C Transfer|To verify that proper message is displayed when Auto O2C is approved Successfully at level 2.
SITAUTOO2C10:PRETUPS-950|AUTO O2C Transfer|To verify that proper message is displayed when Auto O2C is approved Successfully at level 3.
SITAUTOO2C11:PRETUPS-952|AUTO O2C Transfer|To validate balance displayed after Auto O2C is executed successfully through backend Script.
SITAUTOO2C12:PRETUPS-954|AUTO O2C Transfer|To validate in case of threshold less than balance of user, Balance will not get increase after executing Auto O2C.
SITAUTOO2C13:PRETUPS-957|AUTO O2C Transfer|To validate ThresholdStatus for Balance below Threshold.
SITAUTOO2C14:PRETUPS-958|AUTO O2C Transfer|To validate ThresholdStatus for Balance Above Threshold.
SITAUTOO2C15:PRETUPS-959|AUTO O2C Transfer|To validate ThresholdStatus for Balance Below Threshold after executing script.

#Interface Management
SITINTERFACEMGMT1:PRETUPS-1007|Interface Management|To verify that Super Admin is able to add an Interface
SITINTERFACEMGMT2:PRETUPS-1008|Interface Management|To verify that Super Admin is able to modify an Interface
SITINTERFACEMGMT3:PRETUPS-1009|Interface Management|To verify that Super Admin is able to delete an Interface

#Network Management
SITNETWORKMGMT1:PRETUPS-994|Network Management|To verify that Super Admin is able to add a Network.
SITNETWORKMGMT2:PRETUPS-995|Network Management|To verify that Super Admin is able to modify a Network.
SITNETWORKMGMT3:PRETUPS-996|Network Management|To verify that Network is getting deleted successfully.

#Network Prefix
PRETUPS-383:PRETUPS-383|Network Prefix|To verify that user is able to add a Prepaid prefix.
PRETUPS-384:PRETUPS-384|Network Prefix|To verify that user is able to add a Postpaid prefix.
PRETUPS-385:PRETUPS-385|Network Prefix|To verify that user is unable to add duplicate prefix
PRETUPS-386:PRETUPS-386|Network Prefix|To verify that proper message is displayed on adding Other prefix.

SITNETWORKPREFIX1:PRETUPS-865|Network Prefix|To verify that user is able to add a Prepaid prefix.
SITNETWORKPREFIX2:PRETUPS-865|Network Prefix|To verify that proper message is displayed on adding Prepaid prefix.
SITNETWORKPREFIX3:PRETUPS-865|Network Prefix|To verify that added Prepaid prefix appears in Prefix Service Mapping.
SITNETWORKPREFIX4:PRETUPS-866|Network Prefix|To verify that user is able to add a Postpaid prefix.
SITNETWORKPREFIX5:PRETUPS-866|Network Prefix|To verify that proper message is displayed on adding Postpaid prefix.
SITNETWORKPREFIX6:PRETUPS-866|Network Prefix|To verify that added Postpaid prefix appears in Prefix Service Mapping.
SITNETWORKPREFIX7:PRETUPS-867|Network Prefix|To verify that user is able to add a Other prefix.
SITNETWORKPREFIX8:PRETUPS-867|Network Prefix|To verify that proper message is displayed on adding Other prefix.
SITNETWORKPREFIX9:PRETUPS-869|Network Prefix|To verify that user is unable to add duplicate Prepaid prefix.
SITNETWORKPREFIX10:PRETUPS-869|Network Prefix|To verify that proper message is displayed on adding duplicate prefix.
SITNETWORKPREFIX11:PRETUPS-870|Network Prefix|To verify that user is unable to add duplicate postpaid prefix.
SITNETWORKPREFIX12:PRETUPS-870|Network Prefix|To verify that proper message is displayed on adding duplicate prefix.
SITNETWORKPREFIX13:PRETUPS-871|Network Prefix|To verify that user is unable to add duplicate Other prefix.
SITNETWORKPREFIX14:PRETUPS-871|Network Prefix|To verify that proper message is displayed on adding duplicate prefix.
SITNETWORKPREFIX15:PRETUPS-873|Network Prefix|To verify that user is unable to add postpaid prefix of greater than preference length.
SITNETWORKPREFIX16:PRETUPS-873|Network Prefix|To verify that proper message is displayed if prefix length is larger than preference value.
SITNETWORKPREFIX17:PRETUPS-874|Network Prefix|To verify that user is unable to add Prepaid prefix of greater than preference length.
SITNETWORKPREFIX18:PRETUPS-874|Network Prefix|To verify that proper message is displayed if prefix length is larger than preference value.
SITNETWORKPREFIX19:PRETUPS-875|Network Prefix|To verify that user is unable to add Other prefix of greater than preference length.
SITNETWORKPREFIX20:PRETUPS-875|Network Prefix|To verify that proper message is displayed if prefix length is larger than preference value.
SITNETWORKPREFIX21:PRETUPS-876|Network Prefix|To verify that user is unable to add blank Prepaid prefix.
SITNETWORKPREFIX22:PRETUPS-876|Network Prefix|To verify that proper message is displayed if Prepaid prefix is blank.
SITNETWORKPREFIX23:PRETUPS-877|Network Prefix|To verify that user is unable to add blank Postpaid prefix.
SITNETWORKPREFIX24:PRETUPS-877|Network Prefix|To verify that proper message is displayed if Postpaid prefix is blank.
SITNETWORKPREFIX25:PRETUPS-878|Network Prefix|To verify that user is unable to add blank Other prefix.
SITNETWORKPREFIX26:PRETUPS-878|Network Prefix|To verify that proper message is displayed if Other prefix is blank.

#P2P Reconciliation
SITP2PRECONILE1:PRETUPS-1127|P2PReconciliation|To verify that Network Admin is Unable to view P2P Reconciliation when From Date is not selected.
SITP2PRECONILE2:PRETUPS-1127|P2PReconciliation|To verify that the proper Message is displayed when From Date is not selected for P2P Reconciliation.
SITP2PRECONILE3:PRETUPS-1128|P2PReconciliation|To verify that Network Admin is Unable to view P2P Reconciliation when To Date is not selected.
SITP2PRECONILE4:PRETUPS-1128|P2PReconciliation|To verify that the proper Message is displayed when To Date is not selected for P2P Reconciliation.
SITP2PRECONILE5:PRETUPS-1129|P2PReconciliation|To verify that Network Admin is Unable to view P2P Reconciliation when serviceType is not selected.
SITP2PRECONILE6:PRETUPS-1129|P2PReconciliation|To verify that the proper Message is displayed when serviceName is not selected for P2P Reconciliation.
SITP2PRECONILE7:PRETUPS-1132|P2PReconciliation|To verify that Network Admin is Unable to view P2P Reconciliation when difference between from date and to date is more than 30 days.
SITP2PRECONILE8:PRETUPS-1132|P2PReconciliation|To verify that the proper Message is displayed when difference between from date and to date is more than 30 days for P2P Reconciliation.
SITP2PRECONILE9:PRETUPS-000|P2PReconciliation|To verify that Network Admin is Unable to view P2P Reconciliation when format for from date is invalid.
SITP2PRECONILE10:PRETUPS-000|P2PReconciliation|To verify that the proper Message is displayed when format for from date is invalid for P2P Reconciliation.
SITP2PRECONILE11:PRETUPS-000|P2PReconciliation|To verify that Network Admin is Unable to view P2P Reconciliation when format for to date is invalid.
SITP2PRECONILE12:PRETUPS-000|P2PReconciliation|To verify that the proper Message is displayed when format for to date is invalid for P2P Reconciliation.
SITP2PRECONILE13:PRETUPS-1134|P2PReconciliation|To verify that Network Admin is Unable to view P2P Reconciliation when From Date is greater than Current Date.
SITP2PRECONILE14:PRETUPS-1134|P2PReconciliation|To verify that the proper Message is displayed when  when From Date is greater than Current Date for P2P Reconciliation.
SITP2PRECONILE15:PRETUPS-1135|P2PReconciliation|To verify that Network Admin is Unable to view P2P Reconciliation when To Date is greater than Current Date.
SITP2PRECONILE16:PRETUPS-1135|P2PReconciliation|To verify that the proper Message is displayed when  when To Date is greater than Current Date for P2P Reconciliation.
SITP2PRECONILE17:PRETUPS-1136|P2PReconciliation|To verify that Network Admin is Unable to view P2P Reconciliation when To Date is less than From Date.
SITP2PRECONILE18:PRETUPS-1136|P2PReconciliation|To verify that the proper Message is displayed when To Date is less than From Date for P2P Reconciliation.
SITP2PRECONILE19:PRETUPS-1138|P2PReconciliation|To verify that Network Admin is able to view P2P Reconciliation with unAmbigious Transactions when all fields are selected.
SITP2PRECONILE20:PRETUPS-1138|P2PReconciliation|To verify that Network Admin is able to view P2P Reconciliation with unAmbigious Transactions when all fields are selected.
SITP2PRECONILE21:PRETUPS-1140|P2PReconciliation|To verify that Network Admin is able to view P2P Reconciliation with Ambigious Transactions when all fields are selected.
SITP2PRECONILE22:PRETUPS-1140|P2PReconciliation|To verify that Network Admin is able to view P2P Reconciliation with Ambigious Transactions when all fields are selected.
SITP2PRECONILE23:PRETUPS-1141|P2PReconciliation|To verify that Network Admin is able to change status of Ambigiuous Transaction by clicking on success button.
SITP2PRECONILE24:PRETUPS-1141|P2PReconciliation|To verify that Network Admin is able to change status of Ambigiuous Transaction by clicking on fail button.
SITP2PRECONILE25:PRETUPS-1142|P2PReconciliation|To verify that Network Admin is able to view P2P Reconciliation with Ambigious Transactions when all fields are selected.
SITP2PRECONILE26:PRETUPS-1142|P2PReconciliation|To verify that Network Admin is able to view P2P Reconciliation with Ambigious Transactions when all fields are selected.

#C2S Reconciliation
SITC2SRECONCILE1:PRETUPS-1116|C2SReconciliation|To verify that Network Admin is Unable to view C2S Reconciliation when From Date is not selected.
SITC2SRECONCILE2:PRETUPS-1116|C2SReconciliation|To verify that the proper Message is displayed when From Date is not selected for C2S Reconciliation
SITC2SRECONCILE3:PRETUPS-1117|C2SReconciliation|To verify that Network Admin is Unable to view C2S Reconciliation when To Date is not selected.
SITC2SRECONCILE4:PRETUPS-1117|C2SReconciliation|To verify that the proper Message is displayed when To Date is not selected for C2S Reconciliation
SITC2SRECONCILE5:PRETUPS-1118|C2SReconciliation|To verify that Network Admin is Unable to view C2S Reconciliation when serviceType is not selected.
SITC2SRECONCILE6:PRETUPS-1118|C2SReconciliation|To verify that the proper Message is displayed when serviceName is not selected for C2S Reconciliation
SITC2SRECONCILE7:PRETUPS-1119|C2SReconciliation|To verify that Network Admin is Unable to view C2S Reconciliation when difference between from date and to date is more than 30 days.
SITC2SRECONCILE8:PRETUPS-1119|C2SReconciliation|To verify that the proper Message is displayed when difference between from date and to date is more than 30 days for C2S Reconciliation
SITC2SRECONCILE9:PRETUPS-000|C2SReconciliation|To verify that Network Admin is Unable to view C2S Reconciliation when format for from date is invalid.
SITC2SRECONCILE10:PRETUPS-000|C2SReconciliation|To verify that the proper Message is displayed when format for from date is invalid for C2S Reconciliation
SITC2SRECONCILE11:PRETUPS-000|C2SReconciliation|To verify that Network Admin is Unable to view C2S Reconciliation when format for to date is invalid.
SITC2SRECONCILE12:PRETUPS-000|C2SReconciliation|To verify that the proper Message is displayed when format for to date is invalid for C2S Reconciliation
SITC2SRECONCILE13:PRETUPS-1120|C2SReconciliation|To verify that Network Admin is Unable to view C2S Reconciliation when From Date is greater than Current Date.
SITC2SRECONCILE14:PRETUPS-1120|C2SReconciliation|To verify that the proper Message is displayed when  when From Date is greater than Current Date for C2S Reconciliation
SITC2SRECONCILE15:PRETUPS-1121|C2SReconciliation|To verify that Network Admin is Unable to view C2S Reconciliation when To Date is greater than Current Date.
SITC2SRECONCILE16:PRETUPS-1121|C2SReconciliation|To verify that the proper Message is displayed when  when To Date is greater than Current Date for C2S Reconciliation
SITC2SRECONCILE17:PRETUPS-1122|C2SReconciliation|To verify that Network Admin is Unable to view C2S Reconciliation when To Date is less than From Date.
SITC2SRECONCILE18:PRETUPS-1122|C2SReconciliation|To verify that the proper Message is displayed when  when To Date is less than From Date for C2S Reconciliation
SITC2SRECONCILE19:PRETUPS-1123|C2SReconciliation|To verify that Network Admin is able to check Ambigious Transactions for C2S Reconciliation.
SITC2SRECONCILE20:PRETUPS-000|C2SReconciliation|To verify that Network Admin is able to view C2S Reconciliation with Ambigious Transactions when all fields are selected.
SITC2SRECONCILE21:PRETUPS-1124|C2SReconciliation|To verify that Network Admin is able to make Ambigious Transactions successful for  C2S Reconciliation.
SITC2SRECONCILE22:PRETUPS-1125|C2SReconciliation|To verify that Network Admin is able verify status change of Ambigious Transaction after making it success.
SITC2SRECONCILE23:PRETUPS-1125|C2SReconciliation|To verify that Network Admin is able to change status of Ambigiuous Transaction by clicking on success button.
SITC2SRECONCILE24:PRETUPS-1126|C2SReconciliation|To verify that Network Admin is able to fail Ambigious Transactions for  C2S Reconciliation.

#O2C Reconciliation
SITO2CRECONCILE1:PRETUPS-295|O2CReconciliation|To verify that Network Admin is able to make Ambigious Transactions successful for O2C Reconciliation.
SITO2CRECONCILE2:PRETUPS-297|O2CReconciliation|To verify that Network Admin is able to fail Ambigious Transactions for O2C Reconciliation.
SITO2CRECONCILE3:PRETUPS-298|O2CReconciliation|To verify that Network Admin is Unable to view O2C Reconciliation when From Date is null.
SITO2CRECONCILE4:PRETUPS-298|O2CReconciliation|To verify validation when from Date is null.
SITO2CRECONCILE5:PRETUPS-302|O2CReconciliation|To verify that Network Admin is Unable to view O2C Reconciliation when To Date is null.
SITO2CRECONCILE6:PRETUPS-302|O2CReconciliation|To verify validation when to Date is null.
SITO2CRECONCILE7:PRETUPS-304|O2CReconciliation|To verify that Network Admin is Unable to view O2C Reconciliation when difference between from date and to date is more than 30 days.
SITO2CRECONCILE8:PRETUPS-304|O2CReconciliation|To verify that the proper Message is displayed when difference between from date and to date is more than 30 days for O2C Reconciliation.
SITO2CRECONCILE9:PRETUPS-308|O2CReconciliation|To verify that Network Admin is Unable to view O2C Reconciliation when From Date is greater than Current Date for O2C Reconciliation.
SITO2CRECONCILE10:PRETUPS-308|O2CReconciliation|To verify that the proper Message is displayed when From Date is greater than Current Date for O2C Reconciliation.
SITO2CRECONCILE11:PRETUPS-310|O2CReconciliation|To verify that Network Admin is Unable to view O2C Reconciliation when To Date is greater than Current Date for O2C Reconciliation.
SITO2CRECONCILE12:PRETUPS-310|O2CReconciliation|To verify that the proper Message is displayed when To Date is greater than Current Date for O2C Reconciliation.
SITO2CRECONCILE13:PRETUPS-312|O2CReconciliation|To verify that Network Admin is Unable to view O2C Reconciliation when To Date is less than From Date for O2C Reconciliation.
SITO2CRECONCILE14:PRETUPS-312|O2CReconciliation|To verify that the proper Message is displayed when To Date is less than From Date for O2C Reconciliation.
SITO2CRECONCILE15:PRETUPS-000|O2CReconciliation|To verify that Network Admin is able to check Ambigious Transactions for O2C Reconciliation.
SITO2CRECONCILE16:PRETUPS-315|O2CReconciliation|To verify that Network Admin is able to view O2C Reconciliation with Ambigious Transactions when all fields are selected.
SITO2CRECONCILE17:PRETUPS-316|O2CReconciliation|To verify that Network Admin is able verify status change of Ambigious Transaction after making it success.
SITO2CRECONCILE18:PRETUPS-316|O2CReconciliation|To verify that Network Admin is able to change status of Ambigiuous Transaction by clicking on success button.
SITO2CRECONCILE19:PRETUPS-319|O2CReconciliation|To verify that Network Admin is able verify status change of Ambigious Transaction after making it fail.
SITO2CRECONCILE20:PRETUPS-319|O2CReconciliation|To verify that Network Admin is able to change status of Ambigiuous Transaction by clicking on fail button.
#Promotional Card Group
SITPROMOCARDGROUP1:PRETUPS-696|Promotional Card Group|To verify that Network admin can create a Promotional Card Group successfully.
SITPROMOCARDGROUP2:PRETUPS-000|Promotional Card Group|To verify that Network admin can create a Promotional Card Group for P2P successfully.
SITPROMOCARDGROUP3:PRETUPS-000|Promotional Card Group|To verify that Network admin can view a Promotional Card Group for C2S.
SITPROMOCARDGROUP4:PRETUPS-000|Promotional Card Group|To verify that Network admin can modify a Promotional Card Group for C2S.
SITPROMOCARDGROUP5:PRETUPS-000|Promotional Card Group|To verify that Network admin can modify a Promotional Card Group for P2P.
SITPROMOCARDGROUP6:PRETUPS-000|Promotional Card Group|To verify that Network admin can view a Promotional Card Group for P2P.

#Promotional Transfer Rule
SITPROMOTRFRULE1:PRETUPS-735|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when Promotional Level is not selected.
SITPROMOTRFRULE2:PRETUPS-738|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when Domain is not selected.
SITPROMOTRFRULE3:PRETUPS-741|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when Geographical Domain Type is not selected.
SITPROMOTRFRULE4:PRETUPS-744|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when Grade is not selected.
SITPROMOTRFRULE5:PRETUPS-747|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when User is not selected.
SITPROMOTRFRULE6:PRETUPS-751|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when Type under Receiver is not selected.
SITPROMOTRFRULE7:PRETUPS-754|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when serviceType is not selected.
SITPROMOTRFRULE8:PRETUPS-756|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when fromDate is not selected.
SITPROMOTRFRULE9:PRETUPS-758|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when fromTime is not selected.
SITPROMOTRFRULE10:PRETUPS-761|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when tillDate is not selected.
SITPROMOTRFRULE11:PRETUPS-764|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when tillTime is not selected.
SITPROMOTRFRULE12:PRETUPS-000|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when from date format is not valid.
SITPROMOTRFRULE13:PRETUPS-769|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when from time format is not valid.
SITPROMOTRFRULE14:PRETUPS-000|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when till date format is not valid.
SITPROMOTRFRULE15:PRETUPS-770|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when till time format is not valid.
SITPROMOTRFRULE16:PRETUPS-773|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when applicable from date and time is less than current Date and Time.
SITPROMOTRFRULE17:PRETUPS-774|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when applicable till date and time is less than current Date and Time.
SITPROMOTRFRULE18:PRETUPS-779|Promotional Transfer Rule|To verify that Network Admin is Able to create Promotional Transfer Rule when  valid data for all fields is given.
SITPROMOTRFRULE19:PRETUPS-000|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when multiple time slab is null
SITPROMOTRFRULE20:PRETUPS-000|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when all slabs are empty.
SITPROMOTRFRULE21:PRETUPS-000|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when start and end time is same.
SITPROMOTRFRULE22:PRETUPS-000|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when start and end time is same for two different rows.
SITPROMOTRFRULE23:PRETUPS-000|Promotional Transfer Rule|To verify that Network Admin is Unable to create Promotional Transfer Rule when Start Time is less than  End Time  for previous slab
SITPROMOTRFRULE24:PRETUPS-000|Promotional Transfer Rule|To verify that Network Admin is Able to create Promotional Transfer Rule when  valid data for all fields is given for time slab.
SITPROMOTRFRULE25:PRETUPS-000|Promotional Transfer Rule|To verify that Network Admin is Able to create Promotional Transfer Rule when  valid data for all fields is given for multiple time slab.
SITPROMOTRFRULE26:PRETUPS-783|Promotional Transfer Rule|To verify that Network Admin is Unable to view Promotional Transfer Rule when Promotional Level is not selected.
SITPROMOTRFRULE27:PRETUPS-785|Promotional Transfer Rule|To verify that Network Admin is Unable to view Promotional Transfer Rule when Domain is not selected.
SITPROMOTRFRULE28:PRETUPS-786|Promotional Transfer Rule|To verify that Network Admin is Unable to view Promotional Transfer Rule when Geographical Domain is not selected.
SITPROMOTRFRULE29:PRETUPS-787|Promotional Transfer Rule|To verify that Network Admin is Unable to view Promotional Transfer Rule when grade or user is not selected.
SITPROMOTRFRULE30:PRETUPS-788|Promotional Transfer Rule|To verify that Network Admin is able to view Promotional Transfer Rule when all fields are  selected.
SITPROMOTRFRULE31:PRETUPS-800|Promotional Transfer Rule|To verify that Network Admin is Unable to modify Promotional Transfer Rule when Promotional Level is not selected.
SITPROMOTRFRULE32:PRETUPS-802|Promotional Transfer Rule|To verify that Network Admin is Unable to modify Promotional Transfer Rule when Domain is not selected.
SITPROMOTRFRULE33:PRETUPS-804|Promotional Transfer Rule|To verify that Network Admin is Unable to modify Promotional Transfer Rule when Geographical Domain is not selected.
SITPROMOTRFRULE34:PRETUPS-806|Promotional Transfer Rule|To verify that Network Admin is Unable to modify Promotional Transfer Rule when grade or user is not selected.
SITPROMOTRFRULE35:PRETUPS-808|Promotional Transfer Rule|To verify that Network Admin is Unable to modify Promotional Transfer Rule when checkbox are not selected.
SITPROMOTRFRULE36:PRETUPS-810|Promotional Transfer Rule|To verify that Network Admin is able to modify Promotional Transfer Rule when all fields are selected.

#Promotional Transfer Rule
SITP2PPROMOTRFRULE1:PRETUPS-000|P2P Promotional Transfer Rule|To verify that  Promotional Transfer rule can be enabled via Preference at system level by superadmin
SITP2PPROMOTRFRULE2:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Promotional Rule applicable order can be set at system level by superadmin
SITP2PPROMOTRFRULE3:PRETUPS-000|P2P Promotional Transfer Rule|To verify that networkadmin can create promotional card group
SITP2PPROMOTRFRULE4:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can modify promotional transfer rule at subscriber level for date range
SITP2PPROMOTRFRULE5:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can view promotional transfer rule at subscriber level for date range
SITP2PPROMOTRFRULE6:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can delete promotional transfer rule at subscriber level for date range
SITP2PPROMOTRFRULE7:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can create promotional transfer rule at subscriber level for Single time range
SITP2PPROMOTRFRULE8:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin  can modify promotional transfer rule at subscriber level for time range (Single/Multiple)
SITP2PPROMOTRFRULE9:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin  can view promotional transfer rule at subscriber level for time range (Single/Multiple)
SITP2PPROMOTRFRULE10:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin  can delete promotional transfer rule at subscriber level for time range (Single/Multiple)
SITP2PPROMOTRFRULE11:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can create promotional transfer rule at subscriber level for multiple time range
SITP2PPROMOTRFRULE12:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can create promotional transfer rule at Cell Group level for date range
SITP2PPROMOTRFRULE13:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can modify promotional transfer rule at cell group level for date range
SITP2PPROMOTRFRULE14:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can view promotional transfer rule at cell Group level for date range
SITP2PPROMOTRFRULE15:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can delete promotional transfer rule at cell Group level for date range
SITP2PPROMOTRFRULE16:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can create promotional transfer rule at cell group level for single time range
SITP2PPROMOTRFRULE17:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin  can modify promotional transfer rule at cell group level for time range (Single/Multiple)
SITP2PPROMOTRFRULE18:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin  can view promotional transfer rule at cell group level for time range (Single/Multiple)
SITP2PPROMOTRFRULE19:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin  can delete promotional transfer rule at cell Group level for time range (Single/Multiple)
SITP2PPROMOTRFRULE20:PRETUPS-000|P2P Promotional Transfer Rule|To verify that Networkadmin can create promotional transfer rule at cell group level for multiple time range




#User Status Configuration
SITUSERSTATUSCONF1:PRETUPS-000|User Status Configuration|To verify that Super Admin is able to set User Status Configuration.
SITUSERSTATUSCONF2:PRETUPS-000|User Status Configuration|To verify that Super Admin is able to modify User Status Configuration.
SITUSERSTATUSCONF3:PRETUPS-000|User Status Configuration|To verify that Super Admin is able to view User Status Configuration.
SITUSERSTATUSCONF4:PRETUPS-000|User Status Configuration|To verify that Super Admin is able to deleteCategory created for User status Configuration.
SITUSERSTATUSCONF5:PRETUPS-000|User Status Configuration|To verify that Super Admin is able to delete Domain created for User status Configuration.

#User Transfer Count O2C
SITUSERTRFCOUNTO2C1:PRETUPS-902|User Transfer Count O2C|To verify that daily transfer in count for receiver increases after successful O2C Transfer
SITUSERTRFCOUNTO2C2:PRETUPS-905|User Transfer Count O2C|To verify that daily transfer in value for receiver increases after successful O2C Transfer.
SITUSERTRFCOUNTO2C3:PRETUPS-918|User Transfer Count O2C|To verify that weekly transfer in count for receiver increases after successful O2C Transfer.
SITUSERTRFCOUNTO2C4:PRETUPS-919|User Transfer Count O2C|To verify that weekly transfer in value for receiver increases after successful O2C Transfer.
SITUSERTRFCOUNTO2C5:PRETUPS-920|User Transfer Count O2C|To verify that monthly transfer in count for receiver increases after successful O2C Transfer.
SITUSERTRFCOUNTO2C6:PRETUPS-921|User Transfer Count O2C|To verify that monthly transfer in value for receiver increases after successful O2C Transfer.
SITUSERTRFCOUNTO2C7:PRETUPS-927|User Transfer Count O2C|To verify that if daily transfer in count for {0} is reached then O2C Transfer is not successful.
SITUSERTRFCOUNTO2C8:PRETUPS-927|User Transfer Count O2C|To verify that if O2C transaction is not processed then daily in count for receiver remain same.
SITUSERTRFCOUNTO2C9:PRETUPS-000|User Transfer Count O2C|To verify that if weekly transfer in count for {0} is reached then O2C Transfer is not successful.
SITUSERTRFCOUNTO2C10:PRETUPS-000|User Transfer Count O2C|To verify that if O2C transaction is not processed then weekly in count for receiver remain same.

#User Transfer Count O2C Return
SITUSERTRFCOUNTO2CRET1:PRETUPS-000|User Transfer Count O2C Return|To verify that daily transfer out count for receiver remains same after successful O2C Return.
SITUSERTRFCOUNTO2CRET2:PRETUPS-000|User Transfer Count O2C Return|To verify that weekly transfer out count for receiver remains same after successful O2C Return.
SITUSERTRFCOUNTO2CRET3:PRETUPS-000|User Transfer Count O2C Return|To verify that monthly transfer out count for receiver remains same after successful O2C Return.

#Physical Operator Users
SITVOMSOPTUSRCREATION1:PRETUPS-000|VOMS Operator User Creation|To verify that {0} is able to create {1} for hierarchy with voucher type {2}.
SITVOMSOPTUSRCREATION2:PRETUPS-000|VOMS Operator User Creation|To verify that newly created {0} for hierarchy with voucher type {1} is prompted to change password after successful login for the first attempt and also able to change password.
SITVOMSOPTUSRCREATION3:PRETUPS-000|VOMS Operator User Creation|To verify that newly created {0} for hierarchy with voucher type {1} is able to change pin.

#Auto O2C Transfer IDEA
SITAUTOO2CIDEA1:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if MSISDN is not entered.
SITAUTOO2CIDEA2:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if Quantity is not entered.
SITAUTOO2CIDEA3:PRETUPS-000|AUTO O2C Transfer IDEA|To verify preference for Auto O2C is true.
SITAUTOO2CIDEA4:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that Auto O2C is allowed when AUTO_O2C_TRANSFER_ALLOWED is true.
SITAUTOO2CIDEA5:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that Auto O2C is allowed when AUTO_O2C_TRANSFER_ALLOWED is true.
SITAUTOO2CIDEA6:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that Auto O2C is allowed when AUTO_O2C_TRANSFER_ALLOWED is true but selected auto o2c is false.
SITAUTOO2CIDEA7:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that Auto O2C is allowed when AUTO_O2C_TRANSFER_ALLOWED is true but selected auto o2c is false.
SITAUTOO2CIDEA8:PRETUPS-000|AUTO O2C Transfer IDEA|To change preference for Auto O2C to false.
SITAUTOO2CIDEA9:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that Auto O2C is allowed when AUTO_O2C_TRANSFER_ALLOWED is false but selected auto o2c is true.
SITAUTOO2CIDEA10:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that Auto O2C is allowed when AUTO_O2C_TRANSFER_ALLOWED is false but selected auto o2c is true.
SITAUTOO2CIDEA11:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that Auto O2C is allowed when AUTO_O2C_TRANSFER_ALLOWED is false and selected auto o2c is false.
SITAUTOO2CIDEA12:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that Auto O2C is allowed when AUTO_O2C_TRANSFER_ALLOWED is false and selected auto o2c is false.
SITAUTOO2CIDEA13:PRETUPS-000|AUTO O2C Transfer IDEA|To verify preference for Auto O2C is true.
SITAUTOO2CIDEA14:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if dailyCount is not entered.
SITAUTOO2CIDEA15:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if weekly count is not entered.
SITAUTOO2CIDEA16:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if monthly count is not entered.
SITAUTOO2CIDEA17:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if dailyCount is not numeric.
SITAUTOO2CIDEA18:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if weekly count is not numeric.
SITAUTOO2CIDEA19:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if monthly count is not numeric.
SITAUTOO2CIDEA20:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if dailyCount is not numeric.
SITAUTOO2CIDEA21:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if weekly count is not numeric.
SITAUTOO2CIDEA22:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that proper error message is displayed if monthly count is not numeric.
SITAUTOO2CIDEA23:PRETUPS-000|AUTO O2C Transfer IDEA|To verify that Auto O2C is not processed successfully even if the user's balance reaches below threshold amount if daily limit for Auto O2C is reached.

#VMS
SITVMS16:PRETUPS-446|VMS|To validate System preference VMS_AUTO_VOUCHER_CRTN_ALWD  should display on UI
SITVMS17:PRETUPS-447|VMS|To validate System preference VMS_AUTO_VOUCHER_CRTN_ALWD should be modified on UI.
SITVMS18:PRETUPS-448|VMS|To validate system preference VMS_AUTO_VOUCHER_CRTN_ALWD should be modified with true/false values.
SITVMS19:PRETUPS-449|VMS|To validate system preference VMS_AUTO_VOUCHER_CRTN_ALWD should not be modified with alpha numeric values.
SITVMS20:PRETUPS-450|VMS|To validate Auto-generate, Threshold and Quantity fields are absent in add and modify profile if system preference VMS_AUTO_VOUCHER_CRTN_ALWD is false
SITVMS21:PRETUPS-451|VMS|To Validate Auto-generate, Threshold and Quantity fields are present in Add profile link.
SITVMS22:PRETUPS-452|VMS|To Validate Auto-generate, Threshold and Quantity fields are present in Modify profile link.
SITVMS23:PRETUPS-454|VMS|To Validate length of Voucher Threshold field till 10 digits in add profile.
SITVMS24:PRETUPS-455|VMS|To Validate length of Voucher Quantity field till 10 digits in add profile.
SITVMS25:PRETUPS-456|VMS|To validate that special and alphanumeric characters are not allowed in threshold in Add Profile Details.
SITVMS26:PRETUPS-457|VMS|To validate that special and alphanumeric characters are not allowed in Quantity in Add Profile Details.
SITVMS27:PRETUPS-458|VMS|To validate that special and alphanumeric characters are not allowed in threshold in Modify Profile Details.
SITVMS28:PRETUPS-459|VMS|To validate that special and alphanumeric characters are not allowed in quantity in Modify Profile Details.
SITVMS29:PRETUPS-460|VMS|To validate that If the auto- generate button is a ‘Yes’, then the threshold field cannot be left blank.
SITVMS30:PRETUPS-461|VMS|To validate that If the auto- generate button is a ‘Yes’, then the quantity field cannot be left blank.
SITVMS31:PRETUPS-462|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if Denomination Name is blank
SITVMS32:PRETUPS-463|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if Short Name is blank
SITVMS33:PRETUPS-464|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if MRP is blank
SITVMS34:PRETUPS-465|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if payable amount is blank
SITVMS35:PRETUPS-466|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if Denomination Name is DUPLICATE
SITVMS36:PRETUPS-467|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if Short Name is DUPLICATE
SITVMS37:PRETUPS-468|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if MRP is DUPLICATE
SITVMS38:PRETUPS-469|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if MRP is alphabetic
SITVMS39:PRETUPS-470|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if MRP is negative
SITVMS40:PRETUPS-471|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if payable amount is alphanumeric
SITVMS41:PRETUPS-472|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if payable amount is negative
SITVMS42:PRETUPS-473|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if MRP is having space
SITVMS43:PRETUPS-474|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if Payable Amount is having space
SITVMS44:PRETUPS-475|VMS|To verify that Super Admin is able to create VOMS Denomination if Denomination Name is having special characters.
SITVMS45:PRETUPS-476|VMS|To verify that Super Admin is able to create VOMS Denomination if MRP is in decimal with more than 3 digits
SITVMS46:PRETUPS-477|VMS|To verify that Super Admin is able to create VOMS Denomination if MRP is in decimal with less than 3 digits
SITVMS47:PRETUPS-478|VMS|To verify that Super Admin is able to create VOMS Denomination if MRP is in NEGATIVE decimal
SITVMS48:PRETUPS-479|VMS|To verify that Super Admin is able to create VOMS Denomination if MRP is less than Payable Amount.
SITVMS49:PRETUPS-480|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if MRP is having Special Characters
SITVMS50:PRETUPS-481|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if MRP is having AlphaNumeric Characters
SITVMS51:PRETUPS-482|VMS|To verify that Super Admin is NOT able to create VOMS Denomination if MRP is Zero
SITVMS52:PRETUPS-483|VMS|To verify that Super Admin is able to create VOMS Denomination if Payable Amount is in decimal with more than 3 digits
SITVMS53:PRETUPS-484|VMS|To verify that Super Admin is able to create VOMS Denomination if Payable Amount is in decimal with less than 3 digits
SITVMS54:PRETUPS-485|VMS|To verify that Super Admin is not able to create VOMS Denomination if Payable Amount is having special characters
SITVMS55:PRETUPS-486|VMS|To verify that Super Admin is not able to create VOMS Denomination if Payable Amount is having alphanumeric values
SITVMS56:PRETUPS-487|VMS|To verify that Super Admin is not able to create Voucher Profile  if Profile Name is Blank
SITVMS57:PRETUPS-488|VMS|To verify that Super Admin is not able to create Voucher Profile  if Short Name is Blank
SITVMS58:PRETUPS-489|VMS|To verify that Super Admin is not able to create Voucher Profile  if Min Quantity is Blank
SITVMS59:PRETUPS-490|VMS|To verify that Super Admin is not able to create Voucher Profile  if Performance Indicator Quantity is Blank
SITVMS60:PRETUPS-491|VMS|To verify that Super Admin is not able to create Voucher Profile  if TalkTime is Blank
SITVMS61:PRETUPS-492|VMS|To verify that Super Admin is not able to create Voucher Profile  if Validity is Blank
SITVMS62:PRETUPS-493|VMS|To verify that Super Admin is not able to create Voucher Profile  if Expiry Period is Blank
SITVMS63:PRETUPS-494|VMS|To verify that Super Admin is not able to create Voucher Profile  if Min Quantity is Negative
SITVMS64:PRETUPS-495|VMS|To verify that Super Admin is not able to create Voucher Profile  if Performance Indicator Quantity is Negative
SITVMS65:PRETUPS-496|VMS|To verify that Super Admin is not able to create Voucher Profile  if TalkTime is Negative
SITVMS66:PRETUPS-497|VMS|To verify that Super Admin is not able to create Voucher Profile  if Validity is Negative
SITVMS67:PRETUPS-498|VMS|To verify that Super Admin is not able to create Voucher Profile  if Expiry Period is Negative
SITVMS68:PRETUPS-499|VMS|To verify that Super Admin is not able to create Voucher Profile  if Min Quantity is AlphaNumeric
SITVMS69:PRETUPS-500|VMS|To verify that Super Admin is not able to create Voucher Profile  if Performance Indicator Quantity is AlphaNumeric
SITVMS70:PRETUPS-507|VMS|To verify that Super Admin is not able to create Voucher Profile  if TalkTime is AlphaNumeric
SITVMS71:PRETUPS-508|VMS|To verify that Super Admin is not able to create Voucher Profile  if Validity is AlphaNumeric
SITVMS72:PRETUPS-509|VMS|To verify that Super Admin is not able to create Voucher Profile  if Expiry Period is AlphaNumeric
SITVMS73:PRETUPS-511|VMS|To verify that Super Admin is able to create Voucher Profile  if Profile Name is having Special Characters
SITVMS74:PRETUPS-512|VMS|To verify that Super Admin is able to create Voucher Profile  if Profile Name is having more characters than max Limit
SITVMS75:PRETUPS-514|VMS|To verify that Super Admin is not able to create Voucher Profile  if MRP is not selected
SITVMS76:PRETUPS-515|VMS|To verify that Super Admin is not able to create Voucher Profile  if Short Name is in all LowerCase
SITVMS77:PRETUPS-516|VMS|To verify that Super Admin is not able to create Voucher Profile  if Short Name is in all UpperCase
SITVMS78:PRETUPS-518|VMS|To verify that Super Admin is able to create Voucher Profile  if Short Name is in all number
SITVMS79:PRETUPS-527|VMS|To verify that Super Admin is not able to create Voucher Profile  if Short Name is in all alphanumeric(alphabets only in small)
SITVMS80:PRETUPS-529|VMS|To verify that Super Admin is not able to create Voucher Profile  if Short Name is in all alphanumeric(alphabets in caps) with a space and more word )
SITVMS81:PRETUPS-530|VMS|To verify that Super Admin is not able to create Voucher Profile  if Short Name is in all alphanumeric(alphabets in caps) with a space and more number )
SITVMS82:PRETUPS-531|VMS|To verify that Super Admin is not able to create Voucher Profile  if Short Name is in alphanumeric and special Characters
SITVMS83:PRETUPS-532|VMS|To verify that Super Admin is able to create Voucher Profile  if Min Quantity is Zero
SITVMS84:PRETUPS-533|VMS|To verify that Super Admin is not able to create Voucher Profile  if Min Quantity is More than Performance Indicator Quantity
SITVMS85:PRETUPS-534|VMS|To validate system preference VMS_AUTO_VOUCHER_CRTN_ALWD should be modified with true/false values.
SITVMS86:PRETUPS-535|VMS|To verify that Super Admin is not able to create Voucher Profile  if Min Quantity is having Special Characters
SITVMS87:PRETUPS-536|VMS|To verify that Super Admin is not able to create Voucher Profile  if Min Quantity is equal to Performance Indicator Quantity
SITVMS88:PRETUPS-537|VMS|To verify that Super Admin is not able to create Voucher Profile  if Min Quantity is in Decimal
SITVMS89:PRETUPS-538|VMS|To verify that Super Admin is not able to create Voucher Profile  if Performance Indicator Quantity is in Decimal
SITVMS90:PRETUPS-540|VMS|To verify that Super Admin is able to create Voucher Profile  if Performance Indicator Quantity is Zero
SITVMS91:PRETUPS-542|VMS|To verify that Super Admin is not able to create Voucher Profile  if Performance Indicator Quantity is less than Min Quantity
SITVMS92:PRETUPS-000|VMS|To verify that Super Admin is not able to create Voucher Profile  if Performance Indicator Quantity is AlphaNumeric
SITVMS93:PRETUPS-543|VMS|To verify that Super Admin is not able to create Voucher Profile  if Performance Indicator Quantity is having Special Characters
SITVMS94:PRETUPS-544|VMS|To verify that Super Admin is able to create Voucher Profile  if TalkTime is Zero
SITVMS95:PRETUPS-545|VMS|To verify that Super Admin is not able to create Voucher Profile  if TalkTime is Alphanumeric
SITVMS96:PRETUPS-546|VMS|To verify that Super Admin is not able to create Voucher Profile  if TalkTime is having Special Characters
SITVMS97:PRETUPS-547|VMS|To verify that Super Admin is not able to create Voucher Profile  if TalkTime is in Decimal
SITVMS98:PRETUPS-549|VMS|To verify that Super Admin is not able to create Voucher Profile  if Validity is in Decimal
SITVMS99:PRETUPS-550|VMS|To verify that Super Admin is not able to create Voucher Profile  if Validity is having special characters
SITVMS100:PRETUPS-551|VMS|To verify that Super Admin is not able to create Voucher Profile  if Validity is AlphaNumeric.
SITVMS101:PRETUPS-552|VMS|To verify that Super Admin is not able to create Voucher Profile  if Expiry Period is AlphaNumeric.
SITVMS102:PRETUPS-553|VMS|To verify that Super Admin is not able to create Voucher Profile  if Expiry Period is having Special Characters.
SITVMS103:PRETUPS-554|VMS|To verify that Super Admin is not able to create Voucher Profile  if Expiry Period is in Decimal.
SITVMS104:PRETUPS-555|VMS|To verify that Super Admin is not able to create Voucher Profile  if Expiry Period is equal to current date.
SITVMS105:PRETUPS-556|VMS|To verify that Super Admin is not able to create Voucher Profile  if Expiry Period is less than current date.
SITVMS106:PRETUPS-557|VMS|To verify that Super Admin is not able to add Active Voucher Profile  if Applicable From Date is null.
SITVMS107:PRETUPS-558|VMS|To verify that Super Admin is not able to add Active Voucher Profile  if Profile is not selected.
SITVMS108:PRETUPS-559|VMS|To verify that Super Admin is not able to add Active Voucher Profile  if applicable date is less than current Date.
SITVMS109:PRETUPS-560|VMS|To verify that Super Admin is not able to perform Voucher Order Initiate if Voucher Type is not selected.
SITVMS110:PRETUPS-561|VMS|To verify that Super Admin is not able to perform Voucher Order Initiate if Denomination and Quantity are not selected.
SITVMS111:PRETUPS-562|VMS|To verify that Super Admin is not able to perform Voucher Order Initiate if Denomination is not selected.
SITVMS112:PRETUPS-564|VMS|To verify that Super Admin is not able to perform Voucher Order Initiate if Quantity is not entered.
SITVMS113:PRETUPS-565|VMS|To verify that Super Admin is not able to perform Voucher Order Initiate if Quantity is not Zero.
SITVMS114:PRETUPS-566|VMS|To verify that Super Admin is not able to perform Voucher Order Approval1 if voucher Type and ProductID are not selected.
SITVMS115:PRETUPS-000|VMS|To verify that Super Admin is not able to perform Voucher Order Approval1 if voucher Type is not selected.
SITVMS116:PRETUPS-569|VMS|To verify that Super Admin is not able to perform Voucher Order Approval1 if Product is not selected.
SITVMS117:PRETUPS-570|VMS|To verify that Super Admin is not able to perform Voucher Order Approval1 if Quantity and Remarks are blank
SITVMS118:PRETUPS-571|VMS|To verify that Super Admin is not able to perform Voucher Order Approval1 if Quantity is not selected.
SITVMS119:PRETUPS-572|VMS|To verify that Super Admin is not able to perform Voucher Order Approval1 if Quantity is alphanumeric.
SITVMS120:PRETUPS-573|VMS|To verify that Super Admin is not able to perform Voucher Order Approval1 if Quantity is having Special Characters.
SITVMS121:PRETUPS-574|VMS|To verify that Super Admin is able to perform Voucher Order Approval1 if Remarks field is having Special Characters.
SITVMS122:PRETUPS-575|VMS|To verify that Super Admin is able to perform Voucher Order Approval1 if Remarks field is having AlphaNumeric Characters.
SITVMS123:PRETUPS-576|VMS|To verify that Super Admin is able to perform Voucher Order Approval1 if Remarks field is blank.
SITVMS124:PRETUPS-577|VMS|To verify that Super Admin is not able to perform Voucher Order Approval2 if voucher Type and ProductID are not selected.
SITVMS125:PRETUPS-578|VMS|To verify that Super Admin is not able to perform Voucher Order Approval2 if Product is not selected.
SITVMS126:PRETUPS-579|VMS|To verify that Super Admin is not able to perform Voucher Order Approval2 if Quantity and Remarks are blank
SITVMS127:PRETUPS-581|VMS|To verify that Super Admin is not able to perform Voucher Order Approval2 if Quantity is not selected.
SITVMS128:PRETUPS-582|VMS|To verify that Super Admin is not able to perform Voucher Order Approval2 if Quantity is alphanumeric.
SITVMS129:PRETUPS-583|VMS|To verify that Super Admin is not able to perform Voucher Order Approval2 if Quantity is having Special Characters.
SITVMS130:PRETUPS-584|VMS|To verify that Super Admin is able to perform Voucher Order Approval2 if Remarks field is having Special Characters.
SITVMS131:PRETUPS-585|VMS|To verify that Super Admin is able to perform Voucher Order Approval2 if Remarks field is having AlphaNumeric Characters.
SITVMS132:PRETUPS-586|VMS|To verify that Super Admin is able to perform Voucher Order Approval2 if Remarks field is blank.
SITVMS133:PRETUPS-587|VMS|To verify that Super Admin is not able to perform Voucher Order Approval3 if voucher Type and ProductID are not selected.
SITVMS134:PRETUPS-588|VMS|To verify that Super Admin is not able to perform Voucher Order Approval3 if Product is not selected.
SITVMS135:PRETUPS-589|VMS|To verify that Super Admin is not able to perform Voucher Order Approval3 if Quantity and Remarks are blank
SITVMS136:PRETUPS-590|VMS|To verify that Super Admin is not able to perform Voucher Order Approval3 if Quantity is not selected.
SITVMS137:PRETUPS-591|VMS|To verify that Super Admin is not able to perform Voucher Order Approval3 if Quantity is alphanumeric.
SITVMS138:PRETUPS-592|VMS|To verify that Super Admin is not able to perform Voucher Order Approval3 if Quantity is having Special Characters.
SITVMS139:PRETUPS-593|VMS|To verify that Super Admin is able to perform Voucher Order Approval3 if Remarks field is having Special Characters.
SITVMS140:PRETUPS-594|VMS|To verify that Super Admin is able to perform Voucher Order Approval3 if Remarks field is having AlphaNumeric Characters.
SITVMS141:PRETUPS-595|VMS|To verify that Super Admin is able to perform Voucher Order Approval3 if Remarks field is blank.
SITVMS142:PRETUPS-596|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Voucher Type is not selected.
SITVMS143:PRETUPS-597|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Denomination is not selected.
SITVMS144:PRETUPS-598|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Quantity is null.
SITVMS145:PRETUPS-599|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Quantity is Zero.
SITVMS146:PRETUPS-600|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Quantity is in Decimal with more than 3 decimal places.
SITVMS147:PRETUPS-1163|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Quantity is in Decimal with less than 3 decimal places.
SITVMS148:PRETUPS-601|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Quantity is Negative.
SITVMS149:PRETUPS-602|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Quantity is Negative Decimal.
SITVMS150:PRETUPS-603|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Quantity is AlphaNumeric.
SITVMS151:PRETUPS-604|VMS|To verify that Channel Admin is not able to perform Create Batch for Voucher Download if Quantity is having special characters.
SITVMS152:PRETUPS-605|VMS|To verify that Channel Admin is not able to perform Voucher Download if Voucher Type is not selected.
SITVMS153:PRETUPS-606|VMS|To verify that Channel Admin is not able to perform Voucher Download if From Date is null.
SITVMS154:PRETUPS-607|VMS|To verify that Channel Admin is not able to perform Voucher Download if To Date is null.
SITVMS155:PRETUPS-608|VMS|To verify that Channel Admin is not able to perform Voucher Download if From Date is greater than To date.
SITVMS156:PRETUPS-609|VMS|To verify that Channel Admin is not able to perform Voucher Download if To Date is greater than Current date.
SITVMS157:PRETUPS-610|VMS|To verify that Super Admin is not able to perform Change Other Status if Voucher Type is not selected.
SITVMS158:PRETUPS-611|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number is not entered.
SITVMS159:PRETUPS-612|VMS|To verify that Super Admin is not able to perform Change Other Status if To Serial Number is not entered.
SITVMS160:PRETUPS-613|VMS|To verify that Super Admin is not able to perform Change Other Status if Number Of Vouchers is not entered.
SITVMS161:PRETUPS-614|VMS|To verify that Super Admin is not able to perform Change Other Status if MRP is not entered.
SITVMS162:PRETUPS-615|VMS|To verify that Super Admin is not able to perform Change Other Status if Voucher Status is not selected.
SITVMS163:PRETUPS-616|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number is Alphanumeric.
SITVMS164:PRETUPS-617|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number is having space
SITVMS165:PRETUPS-618|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number is having decimal Value
SITVMS166:PRETUPS-619|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number is having Special Characters
SITVMS167:PRETUPS-620|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number is having all Alphabets
SITVMS168:PRETUPS-621|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number is having less than min length.
SITVMS169:PRETUPS-635|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number different from To Serial Number length
SITVMS170:PRETUPS-636|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number Greater than To Serial Number length
SITVMS171:PRETUPS-637|VMS|To verify that Super Admin is not able to perform Change Other Status if To Serial Number is Alphanumeric.
SITVMS172:PRETUPS-638|VMS|To verify that Super Admin is not able to perform Change Other Status if To Serial Number is having space
SITVMS173:PRETUPS-639|VMS|To verify that Super Admin is not able to perform Change Other Status if To Serial Number is having decimal Value
SITVMS174:PRETUPS-640|VMS|To verify that Super Admin is not able to perform Change Other Status if To Serial Number is having Special Characters
SITVMS175:PRETUPS-641|VMS|To verify that Super Admin is not able to perform Change Other Status if To Serial Number is having all Alphabets
SITVMS176:PRETUPS-642|VMS|To verify that Super Admin is not able to perform Change Other Status if To Serial Number is having less than min length.
SITVMS177:PRETUPS-643|VMS|To verify that Super Admin is not able to perform Change Other Status if number of vouchers is Alphanumeric.
SITVMS178:PRETUPS-644|VMS|To verify that Super Admin is not able to perform Change Other Status if Number of Voucher field is having space
SITVMS179:PRETUPS-645|VMS|To verify that Super Admin is not able to perform Change Other Status if Number Of Voucher Field is having decimal Value
SITVMS180:PRETUPS-646|VMS|To verify that Super Admin is not able to perform Change Other Status if Number Of Voucher Field is having Special Characters
SITVMS181:PRETUPS-647|VMS|To verify that Super Admin is not able to perform Change Other Status if Number Of Vouchers is having all Alphabets
SITVMS182:PRETUPS-648|VMS|To verify that Super Admin is not able to perform Change Other Status if Number Of Vouchers is having negative value
SITVMS183:PRETUPS-649|VMS|To verify that Super Admin is not able to perform Change Other Status if Number Of Vouchers is not equal to difference between From and To Serial Numbers.
SITVMS184:PRETUPS-650|VMS|To verify that Super Admin is not able to perform Change Other Status if mrp is Alphanumeric.
SITVMS185:PRETUPS-651|VMS|To verify that Super Admin is not able to perform Change Other Status if mrp is having space
SITVMS186:PRETUPS-652|VMS|To verify that Super Admin is not able to perform Change Other Status if mrp is having decimal Value
SITVMS187:PRETUPS-653|VMS|To verify that Super Admin is not able to perform Change Other Status if mrp is having Special Characters
SITVMS188:PRETUPS-654|VMS|To verify that Super Admin is not able to perform Change Other Status if mrp is having all Alphabets
SITVMS189:PRETUPS-655|VMS|To verify that Super Admin is not able to perform Change Other Status if mrp is having negative value
SITVMS190:PRETUPS-656|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number is having negative value
SITVMS191:PRETUPS-657|VMS|To verify that Super Admin is not able to perform Change Other Status if To Serial Number is having negative value
SITVMS192:PRETUPS-658|VMS|To verify that Super Admin is not able to perform Change Other Status if mrp is having negative decimal value
SITVMS193:PRETUPS-659|VMS|To verify that Super Admin is not able to perform Change Other Status if From Serial Number is having negative decimal value
SITVMS194:PRETUPS-1164|VMS|To verify that Super Admin is not able to perform Change Other Status if To Serial Number is having negative decimal value
SITVMS195:PRETUPS-660|VMS|To verify that Super Admin is not able to perform Change Other Status if Vouchers are already Consumed
EXTGWVC01:PRETUPS-661|VMS|To check if Vouchers Consumption is not Successful if MSISDN is blank
EXTGWVC02:PRETUPS-662|VMS|To check if Vouchers Consumption is not Successful if MSISDN is alphanumeric
EXTGWVC03:PRETUPS-663|VMS|To check if Vouchers Consumption is not Successful if MSISDN is having space
EXTGWVC04:PRETUPS-664|VMS|To check if Vouchers Consumption is not Successful if MSISDN is having decimal
EXTGWVC05:PRETUPS-665|VMS|To check if Vouchers Consumption is not Successful if MSISDN is negative
EXTGWVC06:PRETUPS-666|VMS|To check if Vouchers Consumption is not Successful if MSISDN is in negative decimal
EXTGWVC07:PRETUPS-667|VMS|To check if Vouchers Consumption is not Successful if MSISDN is Alphabetic
EXTGWVC08:PRETUPS-668|VMS|To check if Vouchers Consumption is not Successful if MSISDN is having special characters.
EXTGWVC09:PRETUPS-669|VMS|To check if Vouchers Consumption is not Successful if MSISDN is with wrong prefix.
EXTGWVC10:PRETUPS-670|VMS|To check if Vouchers Consumption is not Successful if MSISDN is without prefix.
EXTGWVC11:PRETUPS-671|VMS|To check if Vouchers Consumption is not Successful if MSISDN is less than min length.
EXTGWVC12:PRETUPS-672|VMS|To check if Vouchers Consumption is not Successful if MSISDN is more than max length.
EXTGWVC13:PRETUPS-673|VMS|To check if Vouchers Consumption is Successful if Network Code is blank
EXTGWVC14:PRETUPS-674|VMS|To check if Vouchers Consumption is Successful if Network Code is invalid
EXTGWVC15:PRETUPS-675|VMS|To check if Vouchers Consumption is  Successful if Network Code is having Space
EXTGWVC16:PRETUPS-676|VMS|To check if Vouchers Consumption is Successful if Network Code is having any Special Character
EXTGWVC17:PRETUPS-677|VMS|To check if Vouchers Consumption is not Successful if Type Tag is null
EXTGWVC18:PRETUPS-678|VMS|To check if Vouchers Consumption is not Successful if Type Tag is invalid
EXTGWVC19:PRETUPS-679|VMS|To check if Vouchers Consumption is Successful if External Reference Number is null.
EXTGWVC20:PRETUPS-680|VMS|To check if Vouchers Consumption is Successful even  if External Reference Number is invalid.
EXTGWVC21:PRETUPS-681|VMS|To check if Vouchers Consumption is Successful if Pin is null.
EXTGWVC22:PRETUPS-682|VMS|To check if Vouchers Consumption is Successful even if pin is invalid.
EXTGWVC23:PRETUPS-683|VMS|To check if Vouchers Consumption is Successful if MSISDN2 is null.
EXTGWVC24:PRETUPS-684|VMS|To check if Vouchers Consumption is Successful if MSISDN2 is invalid.
EXTGWVC25:PRETUPS-685|VMS|To check if Vouchers Consumption is not Successful if both MSISDN and MSISDN2 both are null.
EXTGWVC26:PRETUPS-686|VMS|To check if Vouchers Consumption is not Successful if MSISDN2 is less than min length.
EXTGWVC27:PRETUPS-687|VMS|To check if Vouchers Consumption is not Successful if MSISDN2 is more than max length.
EXTGWVC28:PRETUPS-688|VMS|To check if Vouchers Consumption is  Successful if Amount is null.
EXTGWVC29:PRETUPS-689|VMS|To check if Vouchers Consumption is  Successful if External Reference Number is null as External Reference Number is optional.
EXTGWVC30:PRETUPS-690|VMS|To check if Vouchers Consumption is  Successful if Voucher Code is null.
EXTGWVC31:PRETUPS-691|VMS|To check if Vouchers Consumption is  Successful if Voucher Code is invalid.
EXTGWVC32:PRETUPS-692|VMS|To check if Vouchers Consumption is not Successful if Voucher Code is from Already Consumed Voucher i.e. Voucher Status is 'CU'.
EXTGWVC33:PRETUPS-693|VMS|To check if Vouchers Consumption is not Successful if Voucher Code if Voucher Status is 'GE'.
EXTGWVC34:PRETUPS-694|VMS|To check if Vouchers Consumption is not Successful if Voucher Code if Voucher Status is 'WH'.
EXTGWVC35:PRETUPS-695|VMS|To check if Vouchers Consumption is not Successful if Voucher Code if Voucher Status is 'ST'.
EXTGWVC36:PRETUPS-697|VMS|To check if Vouchers Consumption is not Successful if Voucher Code if Voucher Status is 'OH'.
EXTGWVC37:PRETUPS-698|VMS|To check if Vouchers Consumption is not Successful if Voucher Code if Voucher Status is 'DA'.
EXTGWVC38:PRETUPS-699|VMS|To check if Vouchers Consumption is not Successful if Voucher Code if Voucher Status is 'PE'.
EXTGWVC39:PRETUPS-700|VMS|To check if Vouchers Consumption is not Successful if Voucher Code if Voucher Status is 'PA'.
EXTGWVC40:PRETUPS-701|VMS|To check if Vouchers Consumption is not Successful if Voucher Code if Voucher Status is 'S'.
EXTGWVC41:PRETUPS-703|VMS|To check if Vouchers Consumption is not Successful if Voucher Code if Voucher is already expired.
EXTGWVC42:PRETUPS-704|VMS|To check if Vouchers Consumption is Successful if Serial Number is null as it is optional field.
EXTGWVC43:PRETUPS-705|VMS|To check if Vouchers Consumption is not Successful if Serial Number is of some other Voucher Code.
EXTGWVC44:PRETUPS-706|VMS|To check if Vouchers Consumption is Successful if Language1  is null.
EXTGWVC45:PRETUPS-707|VMS|To check if Vouchers Consumption is Successful if Language2  is null.
EXTGWVC46:PRETUPS-708|VMS|To check if Vouchers Consumption is Successful if Language1  is invalid.
EXTGWVC47:PRETUPS-709|VMS|To check if Vouchers Consumption is Successful if Language2  is invalid.
EXTGWVC48:PRETUPS-710|VMS|To check if Vouchers Consumption is Successful if Info Tags are not blank.
EXTGWVC49:PRETUPS-711|VMS|To check if Vouchers Consumption is Successful if Info Tags are blank.
EXTGWVC50:PRETUPS-712|VMS|To check if Vouchers Consumption is Successful if Selector is blank.
EXTGWVC51:PRETUPS-713|VMS|To check if Vouchers Consumption is Successful if Serial Number is correct in case of Damaged Vouchers.
EXTGWVC52:PRETUPS-714|VMS|To check if Vouchers Consumption is not Successful if Serial Number is incorrect in case of Damaged Vouchers.
EXTGWVC53:PRETUPS-715|VMS|To check if Vouchers Consumption is not Successful if Serial Number is blank in case of Damaged Vouchers.
SITVMS248:PRETUPS-716|VMS|To verify that Channel Admin is able to perform Create Batch for Voucher Download for third party.
SITVMS249:PRETUPS-717|VMS|To verify that only one denomination is associated with single profile.
SITVMS250:PRETUPS-718|VMS|To verify that superadmin is not able to change the status of Stolen voucher to WH
SITVMS251:PRETUPS-719|VMS|To verify that superadmin is able to change the status of enabled voucher to STOLEN
SITVMS252:PRETUPS-720|VMS|To verify that superadmin is able to change the status of generated voucher to DISABLED
SITVMS253:PRETUPS-721|VMS|To verify that superadmin is able to change the status of enabled voucher to Disabled
SITVMS254:PRETUPS-722|VMS|To verify that superadmin is able to change the status of enabled voucher to OnHold
SITVMS255:PRETUPS-723|VMS|To verify that superadmin is able to change the status of OnHold voucher to Stolen
SITVMS256:PRETUPS-724|VMS|To verify that superadmin is able to change the status of OnHold voucher to Enable
SITVMS257:PRETUPS-725|VMS|To verify that superadmin is able to change the Voucher status from warehouse to suspended
SITVMS258:PRETUPS-726|VMS|To verify that superadmin is able to change the Voucher status from Enable to suspended
SITVMS259:PRETUPS-727|VMS|To verify that superadmin is able to change the Voucher status from OnHold to suspended
SITVMS260:PRETUPS-728|VMS|To verify that superadmin is able to change the status of OnHold voucher to Disabled
SITVMS261:PRETUPS-729|VMS|To verify that superadmin is able to change the status of WareHouse voucher to Disabled
SITVMS263:PRETUPS-731|VMS|To verify that superadmin is not able to change the status of EN voucher to WH
SITVMS264:PRETUPS-732|VMS|To verify that superadmin is not able to change the status of ST voucher to OH
SITVMS265:PRETUPS-733|VMS|To verify that superadmin is not able to change the status of ST voucher to EN
SITVMS266:PRETUPS-734|VMS|To verify that superadmin is not able to change the status of Suspended voucher to WH
SITVMS267:PRETUPS-736|VMS|To verify that superadmin is not able to change the status of Suspended voucher to EN
SITVMS268:PRETUPS-737|VMS|To verify that superadmin is not able to change the status of Suspended voucher to OnHold
SITVMS269:PRETUPS-739|VMS|To verify that superadmin is not able to change the status of Disabled voucher to WH
SITVMS270:PRETUPS-740|VMS|To verify that superadmin is not able to change the status of Disabled voucher to EN
SITVMS271:PRETUPS-742|VMS|To verify that superadmin is not able to change the status of Disabled voucher to OH
SITVMS272:PRETUPS-743|VMS|To verify that superadmin is able to change the status of PRE-ACTIVE voucher to EN
SITVMS273:PRETUPS-745|VMS|To verify that Denomination cannot be modified if voucher profile is already added in add active profile details.
SITVMS274:PRETUPS-746|VMS|To verify that Operator user is able to modify the MRP when no voucher is existing with that MRP.
SITVMS275:PRETUPS-748|VMS|To verify that Super Admin is able to reject the Voucher Generation at level 1
SITVMS276:PRETUPS-749|VMS|To verfiy that super admin is not able to ammend rejected order at approval level 1.
SITVMS277:PRETUPS-750|VMS|To verify that Super Admin is able to modify the quantity of the Vouchers at level 1
SITVMS278:PRETUPS-752|VMS|To verify that Super Admin is able to reject the Voucher Generation at level 2
SITVMS279:PRETUPS-753|VMS|To verify that Super Admin is able to modify the quantity of the Vouchers at level 2
SITVMS301:PRETUPS-755|VMS|To check Modificatiion of Voucher Denomaination.
SITVMS302:PRETUPS-757|VMS|To check Modificatiion of Voucher Profile.
SITVMS303:PRETUPS-759|VMS|To check Modificatiion of Voucher Active Profile {0}
SITVMS304:PRETUPS-760|VMS|Deletion of Voucher Profile {0}
SITVMS305:PRETUPS-762|VMS|To Verify that user is not able to see the voucher profile name and its respective details at voms order initiate if profile is deleted {0}
SITVMS306:PRETUPS-763|VMS|To Verify that user is not able to approve the order at level 1 if profile is suspended or deleted {0}
SITVMS308:PRETUPS-765|VMS|To verify that Superadmin can suspend the voucher profile type: {0}
SITVMS309:PRETUPS-766|VMS|To verify that Superadmin can suspend the voucher profile type: {0}
SITVMS310:PRETUPS-767|VMS|To Verify Superadmin is able to place multiple denomination order for voucher generation order {0}
SITVMS312:PRETUPS-768|VMS|To verify that Super Admin is able to modify the quantity of the Vouchers at level 2
SITVMS313:PRETUPS-1775|VMS|To verify that Super Admin is able to upload document at system specific level approval
SITVOUCHERDENOM:PRETUPS-421|VMS|To verify that Super Admin is able to create VOMS Denomination for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVOUCHERPROF:PRETUPS-423|VMS|To verify that Super Admin is able to create VOMS Profile for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVIEWVOUCHERDENOM:PRETUPS-426|VMS|To verify that Super Admin is  able to view VOMS Denomination voucher type {0}, service {1}, sub-service {2} and user {3}
SITVIEWVOUCHERPROF:PRETUPS-427|VMS|To verify that Super Admin is  able to view VOMS Profile voucher type {0}, service {1}, sub-service {2} and user {3}
SITACTIVEVOUCHERPROF:PRETUPS-429|VMS|To verify that Super Admin is able to perform Add Active Profile for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVIEWACTIVEVOUCHERPROF:PRETUPS-431|VMS|To verify that Super Admin is  able to view VOMS Active Profile voucher type {0}, service {1}, sub-service {2}, active profile {3} and user {4}
SITVOUCHERORDERINIT:PRETUPS-432|VMS|To verify that Super Admin is able to perform Voucher Order Initiate  for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVOUCHERAPPROV1:PRETUPS-434|VMS|To verify that Super Admin is able to perform Voucher Order Approval1 for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVOUCHERAPPROV2:PRETUPS-435|VMS|To verify that Super Admin is able to perform Voucher Order Approval2 for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVOUCHERAPPROV3:PRETUPS-436|VMS|To verify that Super Admin is able to perform Voucher Order Approval3 for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVOUCHERGENSCRIPT:PRETUPS-437|VMS|VoucherGeneration.sh for voucher type {0}, service {1}, sub-service {2} and user {3}
SITCREATBATCH:PRETUPS-438|VMS|To verify that Channel Admin is able to perform Create Batch For Voucher Download for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVOUCHERDOWNLOAD:PRETUPS-439|VMS|To verify that Channel Admin is able to perform Voms Voucher Download for voucher type {0}, service {1}, sub-service {2} and user {3}
SITCHANGESTATUS:PRETUPS-440|VMS|To verify that Super Admin is able to change Status to WH for voucher type {0}, service {1}, sub-service {2} and user {3}
SITO2C:PRETUPS-441|VMS|To verify that Operator user is able to perform Operator to channel Transfer for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVOUCHEREXPIRYEXPGE:PRETUPS-000|VMS|To check if Expiry Date can be extended successfully for voucher when voucher is in GE state
SITVOUCHEREXPIRYEXPPE:PRETUPS-000|VMS|To check if Expiry Date can be extended successfully for voucher when voucher is in PE state
SITVOUCHEREXPIRYEXPWH:PRETUPS-000|VMS|To check if Expiry Date can be extended successfully for voucher when voucher is in WH state
SITVOUCHEREXPIRYEXPEN:PRETUPS-000|VMS|To check if Expiry Date can be extended successfully for voucher when voucher is in EN state
SITVOUCHEREXPIRYEXPCU:PRETUPS-000|VMS|To check if Expiry Date can be extended successfully for voucher when voucher is in CU state
SITVOUCHEREXPIRYEXPS:PRETUPS-000|VMS|To check if Expiry Date can be extended successfully for voucher when voucher is in Suspend state
SITVOUCHEREXPIRYEXPOH:PRETUPS-000|VMS|To check if Expiry Date can not be extended successfully for voucher when voucher is in On Hold state
SITVOUCHEREXPIRYEXDIS:PRETUPS-000|VMS|To check if Expiry Date can not be extended successfully for voucher when voucher is in Disable state
SITVOUCHEREXPIRYEXP1:PRETUPS-000|VMS|To check if Expiry Date can not be extended successfully for voucher when from serial number is empty
SITVOUCHEREXPIRYEXP2:PRETUPS-000|VMS|To check if Expiry Date can not be extended successfully for voucher when to serial number is empty
SITVOUCHEREXPIRYEXP3:PRETUPS-000|VMS|To check if Expiry Date can not be extended successfully for voucher when voucher type is empty
SITVOUCHEREXPIRYEXP4:PRETUPS-000|VMS|To check if Expiry Date can be extended successfully for voucher when old date is empty
SITVOUCHEREXPIRYEXP5:PRETUPS-000|VMS|To check if Expiry Date can not be extended successfully for voucher when new expiry date is blank
SITVOUCHEREXPIRYEXP6:PRETUPS-000|VMS|To check if Expiry Date can  be extended successfully for voucher when external network code is blank
SITVOUCHEREXPIRYEXP7:PRETUPS-000|VMS|To check if Expiry Date can  be extended successfully for voucher when external reference number is blank
SITVOUCHEREXPIRYEXP8:PRETUPS-000|VMS|To check if Expiry Date can not be extended successfully for voucher when expiry change reason is empty
SITVOUCHEREXPIRYEXP9:PRETUPS-000|VMS|To check if Expiry Date can not be extended successfully for voucher when username is empty
SITVOUCHEREXPIRYEXP10:PRETUPS-000|VMS|To check if Expiry Date can not be extended successfully for voucher when password is empty
SITVOUCHERCONS:PRETUPS-442|VMS|To check if Vouchers are consumed successfully for voucher type {0}, service {1}, sub-service {2} and user {3}
SITVMSDAY2SCRIPT:PRETUPS-771|VMS|To verify VoucherBurnRateSummary.sh is working successfully.
SITVMSDAY2BURNRATEINDICATOR:PRETUPS-772|VMS|To verify that Super Admin is able to perform Voucher Burn Rate Indicator.
SITVMS500:PRETUPS-000|VMS|To view Voucher Denomination after successful Modification.
SITVMS501:PRETUPS-000|VMS|To view Voucher Profile after successful Modification.
SITVMS333:PRETUPS-000|VMS|To verify that Super Admin is able to create voucher profile when validity and talktime are mandatory
SITVMSBUNDLEADD:PRETUPS-3001|VMS_BUNDLE|Add Voucher Bundle
SITVMSBUNDLEVIEW:PRETUPS-3101|VMS_BUNDLE|View Voucher Bundle {0}
SITVMSBUNDLEMODIFY:PRETUPS-3201|VMS_BUNDLE|Modify Voucher Bundle {0}
SITVMSBUNDLEADDNEG1:PRETUPS-3051|VMS_BUNDLE|To verify bundle voucher cannot be created with blank voucher bundle name
SITVMSBUNDLEADDNEG2:PRETUPS-3052|VMS_BUNDLE|To verify bundle voucher cannot be created with duplicate voucher bundle name : {0}
SITVMSBUNDLEADDNEG3:PRETUPS-3053|VMS_BUNDLE|To verify bundle voucher cannot be created with alphabetic PREFIX ID
SITVMSBUNDLEADDNEG4:PRETUPS-3054|VMS_BUNDLE|To verify bundle voucher cannot be created with PREFIX ID greater than 4
SITVMSBUNDLEADDNEG5:PRETUPS-3055|VMS_BUNDLE|To verify bundle voucher cannot be created with fraction in quantity
SITVMSBUNDLEADDNEG6:PRETUPS-3056|VMS_BUNDLE|To verify bundle voucher cannot be created with negative value in quantity
SITCHANGESTATUSSCRIPT:PRETUPS-3002|VMS|VoucherChangeStatus.sh for voucher type {0}, service {1}, sub-service {2} and user {3}
#VMS FOR PHYSICAL VOUCHERS

SITPHYADDVOUCHERDENOM:PRETUPS-775|SIT_VMS_PHYSICAL|To verify that Super Admin is able to create VOMS Denomination for voucher type {0}, service {1}, sub-service {2} and user {3}}
SITPHYVIEWVOUCHERDENOM:PRETUPS-776|SIT_VMS_PHYSICAL|To verify that Super Admin is  able to view VOMS Denomination {0}, service {1}, sub-service {2} and user {3}
SITPHYADDVOUCHERPROF:PRETUPS-777|SIT_VMS_PHYSICAL|To verify that Super Admin is able to create VOMS Profile for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYVIEWVOUCHERPROF:PRETUPS-778|SIT_VMS_PHYSICAL|To verify that Super Admin is  able to view VOMS Profile {0}, service {1}, sub-service {2} and user {3}
SITPHYACTIVEVOUCHERPROF:PRETUPS-780|SIT_VMS_PHYSICAL|To verify that Super Admin is able to perform Add Active Profile for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYVIEWACTIVEVOUCHERPROF:PRETUPS-781|SIT_VMS_PHYSICAL|To verify that Super Admin is  able to view VOMS Active Profile {0}, service {1}, sub-service {2}, active profile {3} and user {4}
SITPHYVOUCHERORDERINIT:PRETUPS-782|SIT_VMS_PHYSICAL|To verify that Super Admin is able to perform Voucher Order Initiate  for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYVOUCHERAPPROV1:PRETUPS-784|SIT_VMS_PHYSICAL|To verify that Super Admin is able to perform Voucher Order Approval1 for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYVOUCHERAPPROV2:PRETUPS-789|SIT_VMS_PHYSICAL|To verify that Super Admin is able to perform Voucher Order Approval2 for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYVOUCHERAPPROV3:PRETUPS-790|SIT_VMS_PHYSICAL|To verify that Super Admin is able to perform Voucher Order Approval3 for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYVOUCHERGENSCRIPT:PRETUPS-791|SIT_VMS_PHYSICAL|VoucherGeneration.sh for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYCREATBATCH:PRETUPS-792|SIT_VMS_PHYSICAL|To verify that Channel Admin is able to perform Create Batch For Voucher Download for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYVOMSDOWNLOAD:PRETUPS-793|SIT_VMS_PHYSICAL|To verify that Channel Admin is able to perform Voms Voucher Download for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYCHANGESTATUS:PRETUPS-794|SIT_VMS_PHYSICAL|To verify that Super Admin is able to change Status to WH for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYO2C:PRETUPS-795|SIT_VMS_PHYSICAL|To verify that Operator user is able to perform Operator to channel Transfer for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYCONSUMPTION:PRETUPS-796|SIT_VMS_PHYSICAL|To check if Vouchers are consumed successfully for voucher type {0}, service {1}, sub-service {2} and user {3}
SITPHYVOUCHERINIT:PRETUPS-797|SIT_VMS_PHYSICAL|Voucher Order Initiation for Voucher Type {0}
SITPHYVOUCHERREQMRP:PRETUPS-798|SIT_VMS_PHYSICAL|Voucher Order Request Initiation Distributer is not able to find Electronic MRP in dropdown while adding {0} VOMS Profile.
SITPHYVOUCHERREQVT:PRETUPS-799|SIT_VMS_PHYSICAL|Voucher Order Request Initiation Distributer is not able to find Voucher Type in dropdown while adding {0} VOMS Profile.
SITPHYVOUCHERREQVO:PRETUPS-801|SIT_VMS_PHYSICAL|Voucher Order Request Initiation Distributer is not able to find Voucher Order Request link adding {0} VOMS Profile.
SITPHYVOUCHERREQNODENOM:PRETUPS-803|SIT_VMS_PHYSICAL|Voucher Order Request Initiation error message appearing at least one slab is required {0} VOMS Profile.
SITPHYVOUCHERREQNOREMARK:PRETUPS-805|SIT_VMS_PHYSICAL|Voucher Order Request Initiation error message appearing remark is required {0} VOMS Profile.
SITPHYVOUCHERREQNOPAYTYPE:PRETUPS-807|SIT_VMS_PHYSICAL|Voucher Order Request Initiation error message appearing Payment instrument type is required {0} VOMS Profile.
SITPHYVOUCHERREQNOPAYDATE:PRETUPS-809|SIT_VMS_PHYSICAL|Voucher Order Request Initiation error message appearing Payment instrument date is required {0} VOMS Profile.
SITVMSPHYDOCUPLOAD:PRETUPS-1776|SIT_VMS_PHYSICAL|To verify that Super Admin is able to upload doc document at level 3 approval for physical voucher type
SITVMSPHYDOCXUPLOAD:PRETUPS-1777|SIT_VMS_PHYSICAL|To verify that Super Admin is able to upload docx document at level 3 approval for physical voucher type
SITVMSPHYPDFUPLOAD:PRETUPS-1778|SIT_VMS_PHYSICAL|To verify that Super Admin is able to upload pdf document at level 3 approval for physical voucher type
SITVMSPHYFUPLOADNEGATIVE:PRETUPS-1779|SIT_VMS_PHYSICAL|To verify that Super Admin is not able to upload document of unsupported document type at level 3 approval for physical voucher type
#VMS FOR ELECTRONIC VOUCHERS
SITELECVOUCHERDENOM:PRETUPS-811|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to create VOMS Denomination for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELEVIEWVOUCHERDENOM:PRETUPS-812|SIT_VMS_ELECTRONIC|To verify that Super Admin is  able to view VOMS Denomination {0}, service {1}, sub-service {2} and user {3}
SITELECVOUCHERPROF:PRETUPS-814|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to create VOMS Profile for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECVIEWVOUCHERPROF:PRETUPS-816|SIT_VMS_ELECTRONIC|To verify that Super Admin is  able to view VOMS Profile {0}, service {1}, sub-service {2} and user {3}
SITELECACTIVEVOUCHERPROF:PRETUPS-817|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to perform Add Active Profile for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECVIEWACTIVEVOUCHERPROF:PRETUPS-818|SIT_VMS_ELECTRONIC|To verify that Super Admin is  able to view VOMS Active Profile {0}, service {1}, sub-service {2} and active profile {3}
SITELECVOUCHERORDERINIT:PRETUPS-819|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to perform Voucher Order Initiate  for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECVOUCHERAPPROV1:PRETUPS-820|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to perform Voucher Order Approval1 for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECVOUCHERAPPROV2:PRETUPS-821|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to perform Voucher Order Approval2 for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECVOUCHERAPPROV3:PRETUPS-822|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to perform Voucher Order Approval3 for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECVOUCHERGENSCRIPT:PRETUPS-823|SIT_VMS_ELECTRONIC|VoucherGeneration.sh for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECCREATBATCH:PRETUPS-824|SIT_VMS_ELECTRONIC|To verify that Channel Admin is able to perform Create Batch For Voucher Download for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECVOUCHERDOWNLOAD:PRETUPS-825|SIT_VMS_ELECTRONIC|To verify that Channel Admin is able to perform Voms Voucher Download for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECCHANGESTATUS:PRETUPS-826|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to change Status to WH for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECO2C:PRETUPS-827|SIT_VMS_ELECTRONIC|To verify that Operator user is able to perform Operator to channel Transfer for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECVOUCHERCONS:PRETUPS-828|SIT_VMS_ELECTRONIC|To check if Vouchers are consumed successfully for voucher type {0}, service {1}, sub-service {2} and user {3}
SITELECVOUCHERINIT:PRETUPS-829|SIT_VMS_ELECTRONIC|Voucher Order Initiation for Voucher Type {0}
SITELECVOUCHERREQMRP:PRETUPS-830|SIT_VMS_ELECTRONIC|Voucher Order Request Initiation Distributer is not able to find Physical MRP in dropdown while adding {0} VOMS Profile.
SITELECVOUCHERREQVT:PRETUPS-831|SIT_VMS_ELECTRONIC|Voucher Order Request Initiation Distributer is not able to find Voucher Type in dropdown while adding {0} VOMS Profile.
SITELECVOUCHERREQVO:PRETUPS-832|SIT_VMS_ELECTRONIC|Voucher Order Request Initiation Distributer is not able to find Voucher Order Request link adding {0} VOMS Profile.
SITELECVOUCHERREQNODENOM:PRETUPS-833|SIT_VMS_ELECTRONIC|Voucher Order Request Initiation error message appearing at least one slab is required {0} VOMS Profile.
SITELECVOUCHERREQNOREMARK:PRETUPS-834|SIT_VMS_ELECTRONIC|Voucher Order Request Initiation error message appearing remark is required {0} VOMS Profile.
SITELECVOUCHERREQNOPAYTYPE:PRETUPS-835|SIT_VMS_ELECTRONIC|Voucher Order Request Initiation error message appearing Payment instrument type is required {0} VOMS Profile.
SITELECVOUCHERREQNOPAYDATE:PRETUPS-836|SIT_VMS_ELECTRONIC|Voucher Order Request Initiation error message appearing Payment instrument date is required {0} VOMS Profile.
SITVMSELEDOCUPLOAD:PRETUPS-1780|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to upload doc document at level 3 approval for electronic voucher type
SITVMSELEDOCXUPLOAD:PRETUPS-1781|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to upload docx document at level 3 approval for electronic voucher type
SITVMSELEPDFUPLOAD:PRETUPS-1782|SIT_VMS_ELECTRONIC|To verify that Super Admin is able to upload Pdf document at level 3 approval for electronic voucher type
SITVMSELEFUPLOADNEGATIVE:PRETUPS-1783|SIT_VMS_ELECTRONIC|To verify that Super Admin is not able to upload document of unsupported document type at level 3 approval for electronic voucher type
#VMS FOR Negative Cases
SITVMSNEG1:PRETUPS-837|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic MRP in dropdown while adding Physical VOMS Profile.
SITVMSNEG2:PRETUPS-838|SIT_VMS_Negative|To verify that Super Admin is not able to find Physical MRP in dropdown while adding Electronic VOMS Profile.
SITVMSNEG3:PRETUPS-839|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic MRP in dropdown while modifying Physical VOMS Profile.
SITVMSNEG4:PRETUPS-840|SIT_VMS_Negative|To verify that Super Admin is not able to find physical MRP in dropdown while modifying Electronic VOMS Profile.
SITVMSNEG5:PRETUPS-841|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic MRP in dropdown while trying to  Physical VOMS Profile.
SITVMSNEG6:PRETUPS-842|SIT_VMS_Negative|To verify that Super Admin is not able to find physical MRP in dropdown while trying to view Electronic VOMS Profile.
SITVMSNEG7:PRETUPS-843|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic MRP in dropdown while adding Physical VOMS Active Profile.
SITVMSNEG8:PRETUPS-1174|SIT_VMS_Negative|To verify that Super Admin is not able to find physical MRP in dropdown while Adding Electronic VOMS Active Profile.
SITVMSNEG9:PRETUPS-844|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic denomination in dropdown while initiating Physical Vouchers.
SITVMSNEG10:PRETUPS-845|SIT_VMS_Negative|To verify that Super Admin is not able to find physical denomination in dropdown while initiating Electronic Vouchers.
SITVMSNEG11:PRETUPS-846|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic denomination in dropdown while approving level 1 Physical Vouchers.
SITVMSNEG12:PRETUPS-847|SIT_VMS_Negative|To verify that Super Admin is not able to find physical denomination in dropdown while approving level 1 Electronic Vouchers.
SITVMSNEG13:PRETUPS-848|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic denomination in dropdown while approving level 2 Physical Vouchers.
SITVMSNEG14:PRETUPS-849|SIT_VMS_Negative|To verify that Super Admin is not able to find physical denomination in dropdown while approving level 2 Electronic Vouchers.
SITVMSNEG15:PRETUPS-850|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic denomination in dropdown while approving level 3 Physical Vouchers.
SITVMSNEG16:PRETUPS-851|SIT_VMS_Negative|To verify that Super Admin is not able to find physical denomination in dropdown while approving level 3 Electronic Vouchers.
SITVMSNEG17:PRETUPS-852|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic mrp in dropdown while trying to view Physical Vouchers Denomination.
SITVMSNEG18:PRETUPS-853|SIT_VMS_Negative|To verify that Super Admin is not able to find physical mrp in dropdown while trying to view Electronic Vouchers Denomination.
SITVMSNEG19:PRETUPS-855|SIT_VMS_Negative|To verify that Super Admin is not able to find electronic denomination in dropdown while trying to modify Physical Vouchers Denomination.
SITVMSNEG20:PRETUPS-856|SIT_VMS_Negative|To verify that Super Admin is not able to find physical mrp in dropdown while trying to modify Electronic Vouchers Denomination.
SITVMSNEG21:PRETUPS-857|SIT_VMS_Negative|To verify that Channel Admin is not able to find electronic denomination in dropdown while trying to create batch for Physical Vouchers.
SITVMSNEG22:PRETUPS-858|SIT_VMS_Negative|To verify that Channel Admin is not able to find physical denomination in dropdown while trying to download batch for Electronic Vouchers.
SITVMSNEG25:PRETUPS-859|SIT_VMS_Negative|To verify that Channel Admin is not able to find electronic denomination in dropdown while trying to download batch for Physical Vouchers.
SITVMSNEG26:PRETUPS-861|SIT_VMS_Negative|To verify that Channel Admin is not able to find physical denomination in dropdown while trying to download batch for Electronic Vouchers.

#P2P Pin Mgmt
SITP2PPINMGMT1:PRETUPS-000|P2P Pin Management|To verify that Operator user is able to perform SendPIN for the registered P2P subscriber.
SITP2PPINMGMT2:PRETUPS-000|P2P Pin Management|To verify that Operator user is able to perform ResetPIN for the registered P2P subsriber.

#P2P Deregister Subscriber
SITP2PDEREGSUBS1:PRETUPS-000| P2P Deregister Subscriber|To verify that Operator user is able to deregister subscriber from P2P services.

#P2P suspend/resume service
SITP2PSUSRESSERV1:PRETUPS-000| P2P Suspend/Resume Service|To verify that Operator user is able to suspend P2P services for the registered P2P subscriber.
SITP2PSUSRESSERV2:PRETUPS-000| P2P Suspend/Resume Service|To verify that Operator user is able to resume P2P services for the registered P2P subscriber.


#Restricted List Management
SITRESTLIST1:PRETUPS-000| Restricted List Management|Verify that User can upload a list of to be restricted MSISDNs in the system.
SITRESTLIST2:PRETUPS-000| Restricted List Management|Verify that user can approve a Single MSISDN from the uploaded Restricted List
SITRESTLIST3:PRETUPS-000| Restricted List Management|Verify that User can reject a Single MSISDN from the Uploaded Restricted List
SITRESTLIST4:PRETUPS-000| Restricted List Management|Verify that User can discard a Single MSISDN from the Uploaded Restricted List
SITRESTLIST5:PRETUPS-000| Restricted List Management|Verify that Operator User can reject the uploaded list of restricted MSISDNs
SITRESTLIST6:PRETUPS-000| Restricted List Management|Verify that Operator User can discard the uploaded list of restricted MSISDNs
SITRESTLIST7:PRETUPS-000| Restricted List Management|Verify that Operator User can approve the uploaded list of restricted MSISDNs
SITRESTLIST8:PRETUPS-000| Restricted List Management|Verify that Operator User can blacklist the subscriber as P2P Payer
SITRESTLIST9:PRETUPS-000| Restricted List Management|Verify that Operator User can blacklist the subscriber as P2P Payee.
SITRESTLIST10:PRETUPS-000| Restricted List Management|Verify that Operator User can blacklist the subscriber as C2S Payee.
SITRESTLIST11:PRETUPS-000| Restricted List Management|Verify that Operator User can unblacklist the subscribers.
SITRESTLIST12:PRETUPS-000| Restricted List Management|Verify that Operator User can delete a subscriber from a Restricted List.
SITRESTLIST13:PRETUPS-000| Restricted List Management|Verify that Operator User can view a Subscriber from the Restricted List.
SITRESTLIST14:PRETUPS-000| Restricted List Management|Verify that Operator User will not be able to upload a list if number of records enter are not in sync with the number of records present in the file.
SITRESTLIST15:PRETUPS-000| Restricted List Management|Verify that Operator user will not be able to upload a list in case of no path selected.
SITRESTLIST16:PRETUPS-000| Restricted List Management|Verify that Operator user will not be able to upload a list in case Postpaid Subscriber is selected as subscriber type for the list of Prepaid Subscribers
SITRESTLIST17:PRETUPS-000| Restricted List Management|Verify that Operator User will not be able to upload a list in case the start tag is not present in the list.
SITRESTLIST18:PRETUPS-000| Restricted List Management|Verify that Operator User will not be able to upload a list in case the end tag is not present in the list.
SITRESTLIST19:PRETUPS-000| Restricted List Management|Verify that Operator User will not be able to upload a list in case the invalid tags are present in the list.
SITRESTLIST20:PRETUPS-000| Restricted List Management|Verify that List Upload will not be successful in case User tries to uplaod a file other than txt file.
SITRESTLIST21:PRETUPS-000| Restricted List Management|Verify that there is no download Option available to download the file template for Restricted List.
SITRESTLIST22:PRETUPS-000| Restricted List Management|Verify that C2S Transfer will be successful, in case the subscriber exists as approved in Restricted List but not Blacklisted as C2S Payee.
SITRESTLIST23:PRETUPS-000| Restricted List Management|Verify that the User blacklisted as C2S Payee, will not be able to recieve a c2S Recharge from Channel User
SITRESTLIST24:PRETUPS-000| Restricted List Management|Verify that the User blacklisted as C2S Payee, will be able to do P2P transaction as a Receiver successfully.
SITRESTLIST25:PRETUPS-000| Restricted List Management|Verify that On getting unblacklisted, The Subscriber can participate in C2S Transaction as a Receiver
SITRESTLIST26:PRETUPS-000| Restricted List Management|Verify that the User blacklisted as P2P Payee, will not be able to recieve a P2P Credit Transfer.
SITRESTLIST27:PRETUPS-000| Restricted List Management|Verify that the User blacklisted as P2P Payee, will be able to send credit via P2P transaction successfully.
SITRESTLIST28:PRETUPS-000| Restricted List Management|Verify that the User blacklisted as P2P Payee, will be able to recieve credit via C2S Transfer.
SITRESTLIST29:PRETUPS-000| Restricted List Management|Verify that the User blacklisted as P2P Payer, will not be able to perform a P2P Credit Transfer as Sender.
SITRESTLIST30:PRETUPS-000| Restricted List Management|Verify that On getting unblacklisted, The Subscriber can participate in P2P Transaction as a Sender
SITRESTLIST31:PRETUPS-000| Restricted List Management|Verify that On getting unblacklisted, The Subscriber can participate in P2P Transaction as a Receiver
SITRESTLIST35:PRETUPS-000| Restricted List Management|Verify that Operator User can blacklist all the subscribers at once of the uploaded RestrictedList.
SITRESTLIST36:PRETUPS-000| Restricted List Management|Verify that Operator User is not able to view the detail of a Subscriber which is not uploaded and approved for restricted list.
SITRESTLIST37:PRETUPS-000| Restricted List Management|Verify that Operator User is not able to view the detail of a Subscriber if From and To date is not correct.
SITRESTLIST41:PRETUPS-000| Restricted List Management|Verify that Operator User is not able to delete a Subscriber which is not uploaded and approved in Restricted List.
SITRESTLIST42:PRETUPS-000| Restricted List Management|Verify that different Operations (Approve,Reject,Discard) can be performed for subscribers at once after uploading the list.
SITRESTLIST43:PRETUPS-000| Restricted List Management|Verify that Operator User will be able to delete all the MSISDNs of the Restricted List.
SITRESTLIST44:PRETUPS-000| Restricted List Management|Verify that the Status after approving the Subscriber is getting updated correctly in database.
SITRESTLIST45:PRETUPS-000| Restricted List Management|Verify that the Status after rejecting the Subscriber is getting updated correctly in database.
SITRESTLIST46:PRETUPS-000| Restricted List Management|Verify that the Status after discarding the Subscriber is getting updated correctly in database.
SITRESTLIST47:PRETUPS-000| Restricted List Management|Verify that the Status after blacklisting the Subscriber is getting updated correctly in database.
SITRESTLIST48:PRETUPS-000| Restricted List Management|Verify that the Status after un-blacklisting the Subscriber is getting updated correctly in database.
SITRESTLIST49:PRETUPS-000| Restricted List Management|Verify that proper Error Message is displayed in case domain is not selected while uploading a list
SITRESTLIST50:PRETUPS-000| Restricted List Management|Verify that proper Error Message is displayed in case username is not entered while uploading a list.
SITRESTLIST51:PRETUPS-000| Restricted List Management|Verify that proper Error Message is displayed in case no subscriber type is selected.
SITRESTLIST52:PRETUPS-000| Restricted List Management|Verify that proper Error Message is displayed in case no. of records is not entered.
SITRESTLIST53:PRETUPS-000| Restricted List Management|Verify that Operator User can blacklist multiple subscribers as P2P Payee at a time by uploading a list of the subscribers to be blacklisted.
SITRESTLIST54:PRETUPS-000| Restricted List Management|Verify that Operator User can Un-blacklist multiple subscribers as P2P Payee at a time.
SITRESTLIST55:PRETUPS-000| Restricted List Management|Verify that Operator User can blacklist multiple subscribers as P2P Payer at a time by uploading a list of the subscribers to be blacklisted.
SITRESTLIST56:PRETUPS-000| Restricted List Management|Verify that Operator User can Un-blacklist multiple subscribers as P2P Payer at a time.
SITRESTLIST57:PRETUPS-000| Restricted List Management|Verify that Operator User can blacklist multiple subscribers as C2S Payee at a time by uploading a list of the subscribers to be blacklisted.
SITRESTLIST58:PRETUPS-000| Restricted List Management|Verify that Operator User can Un-blacklist multiple subscribers as C2S Payee at a time.

#Bar-Unbar Channel user
SBARUNBARCHNLUSER1:PRETUPS-000| Bar-Unbar Channel User|To verify that Operator user is able to perform Bar User({0}) for module {1} and user type {2}.
SBARUNBARCHNLUSER2:PRETUPS-000| Bar-Unbar Channel User|To verify that Operator user is able to perform Un-Bar User({0}) for module {1} and user type {2}.
SBARUNBARCHNLUSER3:PRETUPS-000| Bar-Unbar Channel User|To verify that Operator user is able to view channel user in barred list after Bar User action is performed for msisdn {0}.
SBARUNBARCHNLUSER4:PRETUPS-000| Bar-Unbar Channel User|To verify that Operator user is not able to view channel user in barred list after UnBar User action is performed for msisdn {0}.

#Role Matrix Validation
SITROLEMATRIXVALIDATION1:PRETUPS-000| Role Matrix Validation|To verify the rolematrix roleCode[{0}] with roleName[{1}] exist for user category [{2}].

#Batch Operator User Creation
SITBATCHOPTUSERCREATION1:PRETUPS-000| Batch Operator User Initiate|To verify that Operator user with category code [{0}] and parent [{1}] can be created in the system using batch operator user creation.
SITBATCHOPTUSERCREATION2:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if first name is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION3:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Web Login ID is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION4:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if MobileNumber is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION5:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Subscriber Code is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION6:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Status Code is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION7:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Division Code is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION8:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Department Code is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION9:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Geographical domain Code is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION10:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Product Code is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION11:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Role Type is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION12:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Role Code is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION13:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Domain Code is blank in the uploaded sheet.
SITBATCHOPTUSERCREATION14:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is successful if External Code is passed as blank in the uploaded sheet.
SITBATCHOPTUSERCREATION15:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is successful if EmailID is passed as blank in the uploaded sheet.
SITBATCHOPTUSERCREATION16:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is successful if Web login password is passed as blank in the uploaded sheet.
SITBATCHOPTUSERCREATION17:PRETUPS-000| Batch Operator User Initiate|To verify that while batch operator user initiate if Web login password is passed as blank then the default password get assigned to the initiated user.
SITBATCHOPTUSERCREATION18:PRETUPS-000| Batch Operator User Initiate|To verify that while batch operator user initiate if Status Code is assigned as 'S' to the initiated user then that user get created in the system with suspended status.
SITBATCHOPTUSERCREATION19:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if Mobile number is entered as '0'.
SITBATCHOPTUSERCREATION20:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if duplicate WebLoginID is entered.
SITBATCHOPTUSERCREATION21:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if invalid password is entered.
SITBATCHOPTUSERCREATION22:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if invalid rolecode is entered.
SITBATCHOPTUSERCREATION23:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if network code is left blank.
SITBATCHOPTUSERCREATION24:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if invalid networkCode is entered
SITBATCHOPTUSERCREATION25:PRETUPS-000| Batch Operator User Initiate|To verify that batch operator user initiate is not successful if password length is less than {0} digits.


#Commission Profile CBC
SITCBCCOMMPROFILE1:PRETUPS-1829|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} category with all possible scenario.
SITCBCCOMMPROFILE2:PRETUPS-1830|Commission Profile|To verify that Operator User is able to Delete Commission Profile for {0} category with all possible scenario.
SITCBCCOMMPROFILE3:PRETUPS-1831|Commission Profile|To verify that Operator User is not able to create cbc Commission Profile for {0} category without adding base commission.
SITCBCCOMMPROFILE4:PRETUPS-1832|Commission Profile|To verify that Operator User is not able Commission Profile for {0} category without profile name.
SITCBCCOMMPROFILE5:PRETUPS-1833|Commission Profile|To verify that Operator User is not able Commission Profile for {0} category without short name.
SITCBCCOMMPROFILE6:PRETUPS-1834|Commission Profile|To verify that Operator User is not able Commission Profile for {0} category without from date.
SITCBCCOMMPROFILE7:PRETUPS-1835|Commission Profile|To verify that Operator User is not able Commission Profile for {0} category without time.
SITCBCCOMMPROFILE8:PRETUPS-1836|Commission Profile|To verify that Operator User is not able to create additional Commission Profile for {0} category without adding base commission.
SITCBCCOMMPROFILE9:PRETUPS-1837|Commission Profile|To verify that Operator User is not able to create cbc Commission Profile for {0} category without selecting product.
SITCBCCOMMPROFILE11:PRETUPS-1798|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category if value in Slab 1 is more than Slab 2.
SITCBCCOMMPROFILE12:PRETUPS-1799|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category when  From date is left Blank and to Date is present.
SITCBCCOMMPROFILE13:PRETUPS-1800|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category when  To date is left Blank and From Date is present.
SITCBCCOMMPROFILE14:PRETUPS-1801|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category when CBC applicable "from date" and CBC to Date is added but CBC Slab is left blank.
SITCBCCOMMPROFILE15:PRETUPS-1802|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category when invalid data like(abc,12,'[,etc) is given in Value field.
SITCBCCOMMPROFILE16:PRETUPS-1803|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category when Value field is blank.
SITCBCCOMMPROFILE17:PRETUPS-1804|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category when invalid data like(abc,12,'[,etc) is given in Rate field.
SITCBCCOMMPROFILE18:PRETUPS-1805|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category when Rate field is blank.
SITCBCCOMMPROFILE19:PRETUPS-1806|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category when Otf applicable "from date" is before  commission profile "Applicable date".
SITCBCCOMMPROFILE20:PRETUPS-1807|Commission Profile|To verify that Operator User is not able to assign cbc for {0} category when Otf applicable "Time Slab" is before  commission profile "Applicable time".
SITCBCCOMMPROFILE21:PRETUPS-1808|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} category when Otf applicable From and To date are not given.
SITCBCCOMMPROFILE22:PRETUPS-1809|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} category when Otf Time Slab is not given.
SITCBCCOMMPROFILE23:PRETUPS-1810|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} category when Otf From ,To date and Time Slab are not given.
SITCBCCOMMPROFILE24:PRETUPS-1811|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} category when  we add  Commission Profile without adding otf profile and Preference 'TARGET_BASED_BASE_COMMISSION' is True
SITCBCCOMMPROFILE25:PRETUPS-1812|Commission Profile|To verify that while creating new Commission Profile  {0} category  we can add Otf Profile Details.
SITCBCCOMMPROFILE26:PRETUPS-1813|Commission Profile|To verify that while creating new Commission Profile  {0} category  we can view the details of commission profile that we have added before final submit.
SITCBCCOMMPROFILE27:PRETUPS-1814|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category if value in Slab 1 is more than Slab 2.
SITCBCCOMMPROFILE28:PRETUPS-1815|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category when  From date is left Blank and to Date is present.
SITCBCCOMMPROFILE29:PRETUPS-1816|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category when  To date is left Blank and From Date is present.
SITCBCCOMMPROFILE30:PRETUPS-1817|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category when CBC applicable "from date" and CBC to Date is added but CBC Slab is left blank.
SITCBCCOMMPROFILE31:PRETUPS-1818|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category when invalid data like(abc,12,'[,etc) is given in Value field.
SITCBCCOMMPROFILE32:PRETUPS-1819|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category when Value field is blank.
SITCBCCOMMPROFILE33:PRETUPS-1820|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category when invalid data like(abc,12,'[,etc) is given in Rate field.
SITCBCCOMMPROFILE34:PRETUPS-1821|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category when Rate field is blank.
SITCBCCOMMPROFILE35:PRETUPS-1822|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category when Otf applicable "from date" is before  commission profile "Applicable date".
SITCBCCOMMPROFILE36:PRETUPS-1823|Commission Profile|To verify that Operator User is not able to modify cbc for {0} category when Otf applicable "Time Slab" is before  commission profile "Applicable time".
SITCBCCOMMPROFILE37:PRETUPS-1824|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} category when Otf applicable From and To date are not given.
SITCBCCOMMPROFILE38:PRETUPS-1825|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} category when Otf Time Slab is not given.
SITCBCCOMMPROFILE39:PRETUPS-1826|Commission Profile|To verify that Operator User is able to create Commission Profile for {0} category when Otf From ,To date and Time Slab are not given.
SITCBCCOMMPROFILE40:PRETUPS-1827|Commission Profile|To verify that while modifying Commission Profile  {0} category  we can modify Otf Profile Details.
SITCBCCOMMPROFILE41:PRETUPS-1828|Commission Profile|To verify that while modifying Commission Profile  {0} category  we can view the details of commission profile that we have added before final submit.
SITCBCCOMMPROFILE42:PRETUPS-1838|Commission Profile|To verify that  {0} category user can not see CBC link if Target based base commission is set false in system preference
SITCBCCOMMPROFILE43:PRETUPS-1839|Commission Profile|To verify that  {0} category user can see CBC link if Target based base commission is set true in system preference
SITCBCCOMMPROFILE44:PRETUPS-1840|Commission Profile|To verify that proper error message is displayed when {0} category user is tries to modify 'Target based base commission' Preference as blank.
SITCBCCOMMPROFILE45:PRETUPS-1841|Commission Profile|To verify that proper error message is displayed when {0} category user is tries to modify 'Target based base commission slabs' Preference as blank.

SITSUSRESCHNLUSR1:PRETUPS-1848|Channel User |To verify that Channel user is able to suspend child channel user
SITSUSRESCHNLUSR2:PRETUPS-1849|Channel User |To verify that channel admin is able to approve the suspend request
SITSUSRESCHNLUSR3:PRETUPS-1850|Channel User |To verify that channel admin is able to resume the suspended user
SITSUSRESCHNLUSR4:PRETUPS-1851|Channel User |To verify that channel admin is able to reject the suspension request


#Network Admin VMS
SITVMSNA31:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if Denomination Name is blank
SITVMSNA32:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if Short Name is blank
SITVMSNA33:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if MRP is blank
SITVMSNA34:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if payable amount is blank
SITVMSNA35:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if Denomination Name is DUPLICATE
SITVMSNA36:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if Short Name is DUPLICATE
SITVMSNA37:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if MRP is DUPLICATE
SITVMSNA38:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if MRP is alphabetic
SITVMSNA39:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if MRP is negative
SITVMSNA40:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if payable amount is alphanumeric
SITVMSNA41:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if payable amount is negative
SITVMSNA42:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if MRP is having space
SITVMSNA43:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if Payable Amount is having space
SITVMSNA44:PRETUPS-000|VMS|To verify that Network Admin is able to create VOMS Denomination if Denomination Name is having special characters.
SITVMSNA45:PRETUPS-000|VMS|To verify that Network Admin is able to create VOMS Denomination if MRP is in decimal with more than 3 digits
SITVMSNA46:PRETUPS-000|VMS|To verify that Network Admin is able to create VOMS Denomination if MRP is in decimal with less than 3 digits
SITVMSNA47:PRETUPS-000|VMS|To verify that Network Admin is able to create VOMS Denomination if MRP is in NEGATIVE decimal
SITVMSNA48:PRETUPS-000|VMS|To verify that Network Admin is able to create VOMS Denomination if MRP is less than Payable Amount.
SITVMSNA49:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if MRP is having Special Characters
SITVMSNA50:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if MRP is having AlphaNumeric Characters
SITVMSNA51:PRETUPS-000|VMS|To verify that Network Admin is NOT able to create VOMS Denomination if MRP is Zero
SITVMSNA52:PRETUPS-000|VMS|To verify that Network Admin is able to create VOMS Denomination if Payable Amount is in decimal with more than 3 digits
SITVMSNA53:PRETUPS-000|VMS|To verify that Network Admin is able to create VOMS Denomination if Payable Amount is in decimal with less than 3 digits
SITVMSNA54:PRETUPS-000|VMS|To verify that Network Admin is not able to create VOMS Denomination if Payable Amount is having special characters
SITVMSNA55:PRETUPS-000|VMS|To verify that Network Admin is not able to create VOMS Denomination if Payable Amount is having alphanumeric values
SITVMSNA56:PRETUPS-000|VMS|To verify that Network Admin is not able to create Voucher Profile  if Profile Name is Blank
SITVMSNA57:PRETUPS-000|VMS|To verify that Network Admin is not able to create Voucher Profile  if Short Name is Blank
SITVMSNA58:PRETUPS-000|VMS|To verify that Network Admin is not able to create Voucher Profile  if Min Quantity is Blank
SITVMSNA59:PRETUPS-000|VMS|To verify that Network Admin is not able to create Voucher Profile  if Performance Indicator Quantity is Blank
SITVMSNA60:PRETUPS-000|VMS|To verify that Network Admin is not able to create Voucher Profile  if TalkTime is Blank
SITVMSNA61:PRETUPS-000|VMS|To verify that other Network's Network Admin is NOT able to view VOMS Denomination of other Network
SITVMSNA62:PRETUPS-000|VMS|To verify that other Network's Network Admin is NOT able to view VOMS Denomination Profile of other Network
SITVMSNA63:PRETUPS-000|VMS|To verify that other Network's Network Admin is NOT able to view VOMS Denomination Active Profile of other Network
SITVMSNA64:PRETUPS-000|VMS|To verify that other Network's Network Admin is NOT able to view VOMS Denomination at approval level 1 of other Network
SITVMSNA65:PRETUPS-000|VMS|To verify that other Network's Network Admin is NOT able to view VOMS Denomination at approval level 2 of other Network
#Suspent/resume user hierarchy
SITCHANNELUSERTRANSFER1:PRETUPS-1846|Channel User Transfer|To verify that channel admin is able to suspend through login id
SITCHANNELUSERTRANSFER2:PRETUPS-1847|Channel User Transfer|To verify that channel admin is able to resume through login id

#Voucher Status Change VF-Australia
SITVOUCHERSTATUSCHANGE01:PRETUPS-2000|Change Voucher Status|To verify that Operator User is able to change status of voucher from status [{0}] to status [{1}]
SITVOUCHERSTATUSCHANGE02:PRETUPS-2001|Change Voucher Status|To verify that Operator User is not able to change status of voucher from status [{0}] to status [{1}]

#Voucher Expiry Date change
SITVOUCHEREXPIRYCHANGE01:PRETUPS-2002|Change Voucher Expiry|To verify that superadmin is able to extend the expiry date of voucher for {0} voucher
SITVOUCHEREXPIRYCHANGE02:PRETUPS-2003|Change Voucher Expiry|To verify that superadmin is able to extend the expiry date of voucher for multiple vouchers
SITVOUCHEREXPIRYCHANGE03:PRETUPS-2004|Change Voucher Expiry|To  verify that expiry date of Voucher with consumed status cannot be changed
SITVOUCHEREXPIRYCHANGE04:PRETUPS-2005|Change Voucher Expiry|To verify that expiry date of stolen vouchers cannot be changed
SITVOUCHEREXPIRYCHANGE05:PRETUPS-2006|Change Voucher Expiry|To verify that expiry date can be greater than current expiry date of voucher
SITVOUCHEREXPIRYCHANGE06:PRETUPS-2007|Change Voucher Expiry|To verify that expiry date can be less than current expiry date of voucher

#Voucher Provisioning
SITVOUCHERPROVISIONING01:PRETUPS-2008|Voucher Provisioning|To verify that VMS is able to process Provisioning file after executing scheduled process successfully
SITVOUCHERPROVISIONING02:PRETUPS-2008|Voucher Provisioning|To verify that Voucher profile is created successfully based on values in the Provisioning file after executing scheduled process.

#Voucher Acivation
SITVOUCHERACTIVATION01:PRETUPS-2009|Voucher Activation|To verify that vouchers should be activated after executing voucher activation process successfully.
SITVOUCHERACTIVATION02:PRETUPS-2010|Voucher Activation|To verify that vouchers should be activated if the activation file does not have ACT extension format
SITVOUCHERACTIVATION03:PRETUPS-2011|Voucher Activation|To verify that vouchers should not be activated after executing activation process successfully only if the batch number of provisioning file and the activation file is not same.

#Data Bundle Recharge
SITDBRC01:PRETUPS-2012|Data Bundle Recharge|To Verify that {0} category user with parentCategory {1}  is able to perform "Data Bundle Recharge" through web successfully.
SITDBRC02:PRETUPS-2013|Data Bundle Recharge|To Verify that user is not able to perform "Data Bundle recharge" through web successfully if the entered PIN is invalid
SITDBRC03:PRETUPS-2014|Data Bundle Recharge|To Verify that user is not able to perform "Data Bundle recharge" successfully if the entered amount is not in defined slab value

#VIEW SELF COMM ENQUIRY
RESTVSCE1:PRETUPS-0000|VIEW SELF COMM ENQUIRY|To check if View self Commission Enquiry Api is working successfully.
RESTVSCE2:PRETUPS-0000|VIEW SELF COMM ENQUIRY|To check if View self Commission Enquiry Api is not working successfully when identifierType field is empty or not present.
RESTVSCE3:PRETUPS-0000|VIEW SELF COMM ENQUIRY|To check if View self Commission Enquiry Api is not working successfully when identifierValue field is empty or not present.
RESTVSCE4:PRETUPS-0000|VIEW SELF COMM ENQUIRY|To check if View self Commission Enquiry Api is not working successfully when identifierType field & identifierValue field are empty or not present.
RESTVSCE5:PRETUPS-0000|VIEW SELF COMM ENQUIRY|To check if View self Commission Enquiry Api is not working successfully when unauthorized user is passed. User other than Distributor, Agent and Retailer.
RESTVSCE6:PRETUPS-0000|VIEW SELF COMM ENQUIRY|To check if View self Commission Enquiry Api is not working successfully when identifierType field is wrong.
RESTVSCE7:PRETUPS-0000|VIEW SELF COMM ENQUIRY|To check if View self Commission Enquiry Api is not working successfully when identifierValue field is wrong.

#USER PASSWORD MANAGEMENT
RESTUPM1:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if User Password Management Api is working successfully and success response is coming for valid inputs.
RESTUPM2:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if User Password Management Api is not working successfully when remarks are empty.
RESTUPM3:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if User Password Management Api is not working successfully when identifierValue are invalid.
RESTUPM4:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if proper response is coming when msisdn and login id are empty.
RESTUPM5:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if proper response is coming when operation ID is invalid.
RESTUPM6:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if User Password Management Api is not working successfully when identifierValue is blank.
RESTUPM7:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if User Password Management Api is not working successfully when identifierType is blank.
RESTUPM8:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if User Password Management Api is not working successfully when identifierType is invalid.
RESTUPM9:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if User Password Management Api is working successfully and correct success message is given when unblocking an unblocked user
RESTUPM10:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if User Password Management Api is working successfully and correct success message is given when unblocking a blocked user
RESTUPM11:PRETUPS-0000|USER PASSWORD MANAGEMENT|To check if User Password Management Api is working successfully and correct success message is given when password is reset



#PROCESS CHANNEL USER
RESTPCU1:PRETUPS-0000|#PROCESS CHANNEL USER|TO check if API is working successfully
RESTPCU2:PRETUPS-0000|#PROCESS CHANNEL USER|To check if proper response is coming when login credentials are invalid
RESTPCU3:PRETUPS-0000|#PROCESS CHANNEL USER|To check if proper response is coming when all optional values are empty
RESTPCU4:PRETUPS-0000|#PROCESS CHANNEL USER|To check if proper response is coming when profile is empty
RESTPCU5:PRETUPS-0000|#PROCESS CHANNEL USER|To check if proper response is coming when msisdn is empty
RESTPCU6:PRETUPS-0000|#PROCESS CHANNEL USER|To check if proper response is coming when count is invalid
RESTPCU7:PRETUPS-0000|#PROCESS CHANNEL USER|To check if proper response is coming when amount is empty
RESTPCU8:PRETUPS-0000|#PROCESS CHANNEL USER|To check if proper response is coming when pin is empty
RESTPCU9:PRETUPS-0000|#PROCESS CHANNEL USER|To check if proper response is coming when selector is empty
RESTPCU10:PRETUPS-0000|#PROCESS CHANNEL USER|To check if proper response is coming when voucher type is EXEVDRESP


#SELF VOUCHER ENQUIRY
RESTSVES1:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To check if self voucher enquiry by subscriber - API  is working successfully
RESTSVES2:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To check if Self Voucher Enquiry - API  is not  working when subscribermsisdn is invalid
RESTSVES3:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To check if Self Voucher Enquiry - API  is not  working when subscribermsisdn is blank
RESTSVES4:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To check if Self Voucher Enquiry - API  is not  working when subscribermsisdn is not numeric
RESTSVES5:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To check if Self Voucher Enquiry - API  is not  working when suspended subscriber MSISDN is sent in the request
RESTSVES6:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To Verify error message if MSISDN of subscriber previous request is Underprocess sent in the request
RESTSVES7:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To Verify if Voucher pin is not visible if prefrence for SUBSCRIBER_VOUCHER_PIN_REQUIRED is set false
RESTSVES8:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To Verify if Voucher pin is visible if prefrence for SUBSCRIBER_VOUCHER_PIN_REQUIRED is set true
RESTSVES9:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To check if Self Voucher Enquiry - API  is not  working when request gateway login id is blank
RESTSVES10:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To check if Self Voucher Enquiry - API  is not  working when servicePort is blank
RESTVSCE11:PRETUPS-0000|#SELF_VOUCHER_ENQUIRY|To check if Self Voucher Enquiry - API  is not  working when Source type is blank




#C2C VOUCHER TRANSFER APPROVAL
RESTC2CVT1:PRETUPS-0000|#C2C_VOUCHER_TRANSFER|To check if C2C Voucher Transfer and Approval - API  is working successfully for {0} to {1}.
RESTC2CVT2:PRETUPS-0000|#C2C_VOUCHER_TRANSFER|To check if C2C Voucher Transfer and Approval - API  is not  working for {0} to {1} when blank msisdn, extnwcode, loginId and password is sent in the request
RESTC2CVT3:PRETUPS-0000|#C2C_VOUCHER_TRANSFER|To check if C2C Voucher Transfer and Approval - API  is not  working for {0} to {1} when msisdn is sent and pin is not sent
RESTC2CVT4:PRETUPS-0000|#C2C_VOUCHER_TRANSFER|To check if C2C Voucher Transfer and Approval - API  is not  working for {0} to {1} when status is sent as "N"
RESTC2CVT5:PRETUPS-0000|#C2C_VOUCHER_TRANSFER|To check if C2C Voucher Transfer and Approval - API  is not  working for {0} to {1} when transfer Id is empty
RESTC2CVT6:PRETUPS-0000|#C2C_VOUCHER_TRANSFER|To check if C2C Voucher Transfer and Approval - API  is not  working for {0} to {1} when extnwcode is sent empty
RESTC2CVT11:PRETUPS-0000|#C2C_VOUCHER_TRANSFER|To check if C2C Voucher Transfer and Approval - API  is not  working for {0} to {1} when Invalid msisdn is provided
RESTC2CVT12:PRETUPS-0000|#C2C_VOUCHER_TRANSFER|To check if C2C Voucher Transfer and Approval - API  is not  working for {0} to {1} when alphanumeric msisdn is provided.


#C2C VOUCHER TRANSFER INITIATE
RESTC2CVTI1:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is working successfully for {0} to {1}.
RESTC2CVTI2:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is not working successfully for {0} to {1} when msisdn is blank
RESTC2CVTI3:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when pin is blank
RESTC2CVTI4:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when extnwcode is blank
RESTC2CVTI8:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when  source type is blank
RESTC2CVTI9:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when  Language1 is invalid.
RESTC2CVTI10:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when  Voucher type is blank.
RESTC2CVTI11:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when  Voucher Segment is blank
RESTC2CVTI12:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when msisdn2 is blank.
RESTC2CVTI13:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when remark is blank.
RESTC2CVTI14:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when payment instrument code is blank.
RESTC2CVTI15:PRETUPS-0000|#C2C_VOUCHER_INITIATE|To check if C2C Voucher Initiate - API  is NOT working successfully for {0} to {1} when payment instrument date is blank.

#C2C BUY VOUCHER
RESTC2CBV1:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is working successfully for {0}.
RESTC2CBV2:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when blank msisdn, extnwcode, loginId and password is sent in the request
RESTC2CBV3:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when msisdn is sent and pin is not sent
RESTC2CBV4:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when extrefnum is empty
RESTC2CBV5:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when voucher segment is empty
RESTC2CBV6:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when service port is empty
RESTC2CBV7:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when req gateway login id is empty
RESTC2CBV8:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when req gateway password is empty
RESTC2CBV9:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when voucher details is empty
RESTC2CBV10:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when ext network code is empty
RESTC2CBV11:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when voucher type is empty
RESTC2CBV12:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when payment instrument code is empty
RESTC2CBV13:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when payment instrument date is empty
RESTC2CBV14:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when payment instrument number is empty
RESTC2CBV15:PRETUPS-0000|#C2C_BUY_VOUCHER|To check if C2C Buy Voucher - API  is not working successfully for {0} when language1 is invalid

#C2C STOCK INITIATE
RESTC2CSI1:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API  is working successfully from {0} to {1}.
RESTC2CSI2:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is working successfully from {0} to {1} when blank msisdn, extnwcode, loginId and password is sent in the request
RESTC2CSI3:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when  msisdn is sent and pin is not sent
RESTC2CSI4:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when extrefnum is empty
RESTC2CSI5:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when request gateway login id is blank
RESTC2CSI6:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when request gateway password id is blank
RESTC2CSI7:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when request gateway code id is blank
RESTC2CSI8:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when extnwcode is blank
RESTC2CSI9:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when pin is numeric
RESTC2CSI10:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when invalid language is given
RESTC2CSI11:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when msisdn length is invalid
RESTC2CSI12:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when instrument type is empty
RESTC2CSI13:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when pament instrument type is cash
RESTC2CSI14:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when pin length is invalid
RESTC2CSI15:PRETUPS-0000|#C2C_STOCK_INITIATE|To check if C2C_STOCK_INITIATE - API is not working successfully from {0} to {1} when language is blank

#C2C STOCK TRANSFER
RESTC2CST1:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API  is working successfully from {0} to {1}.
RESTC2CST2:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is working successfully from {0} to {1} when blank msisdn, extnwcode, loginId and password is sent in the request
RESTC2CST3:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when  msisdn is sent and pin is not sent
RESTC2CST4:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when extrefnum is empty
RESTC2CST5:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when request gateway login id is blank
RESTC2CST6:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when request gateway password id is blank
RESTC2CST7:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when request gateway code id is blank
RESTC2CST8:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when extnwcode is blank
RESTC2CST9:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when pin is numeric
RESTC2CST10:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when invalid language is given
RESTC2CST11:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when msisdn length is invalid
RESTC2CST12:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when instrument type is empty
RESTC2CST13:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when pament instrument type is cash
RESTC2CST14:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when pin length is invalid
RESTC2CST15:PRETUPS-0000|#C2C_STOCK_TRANSFER|To check if C2C_STOCK_TRANSFER - API is not working successfully from {0} to {1} when language is blank

#C2C STOCK APPROVAL
RESTC2CSA1:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is working successfully for {0}.
RESTC2CSA2:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when msisdn is blank
RESTC2CSA3:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when pin is blank
RESTC2CSA4:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when extnwcode is blank
RESTC2CSA5:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when request gateway login id is blank
RESTC2CSA6:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when request gateway login password is blank
RESTC2CSA7:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when service port is blank
RESTC2CSA8:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when source type is blank
RESTC2CSA9:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when txnid is blank
RESTC2CSA10:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when currnet status is blank
RESTC2CSA11:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when alphanumeric msisdn is provided
RESTC2CSA12:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when Invalid msisdn is provided
RESTC2CSA13:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when invalid length pin is provided
RESTC2CSA14:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when invalid extn code is provided
RESTC2CSA15:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when req gateway login password is invalid
RESTC2CSA16:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when service port is invlaid
RESTC2CSA17:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when language1 is invalid
RESTC2CSA18:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when payment instrument type is blank
RESTC2CSA19:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when payment instrument date is blank
RESTC2CSA20:PRETUPS-0000|#C2C_STOCK_APPROVAL|To check if C2C Stock Approval - API  is NOT working successfully for {0} when payment instrument number is blank

#C2C VIEW TRANSFER DETAILS
RESTC2CSVTD1:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is working successfully for {0}
RESTC2CSVTD2:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when tranfer id is empty
RESTC2CSVTD3:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when login id is empty
RESTC2CSVTD4:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when login id is invalid
RESTC2CSVTD5:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when password is blank
RESTC2CSVTD6:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when password is invalid
RESTC2CSVTD7:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when password length is invalid
RESTC2CSVTD8:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request gateway password is blank
RESTC2CSVTD9:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request gateway login id is blank
RESTC2CSVTD10:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request gateway type is blank
RESTC2CSVTD11:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request gateway type is blank
RESTC2CSVTD12:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request source type is blank
RESTC2CSVTD13:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request network code is blank
RESTC2CSVTD14:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request network code for is blank
RESTC2CSVTD15:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request service port is blank
RESTC2CSVTD16:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request source type is wrong
RESTC2CSVTD17:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER VOUCHER DETAILS - API  is not working successfully for {0} when request transfer type is blank
RESTC2CSVTD18:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is working successfully for {0}
RESTC2CSVTD19:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when transfer id is empty
RESTC2CSVTD20:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when login id is empty
RESTC2CSVTD21:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when login id is invalid
RESTC2CSVTD22:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when password is blank
RESTC2CSVTD23:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when password is invalid
RESTC2CSVTD24:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when password length is invalid
RESTC2CSVTD25:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request gateway password is blank
RESTC2CSVTD26:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request gateway login id is blank
RESTC2CSVTD27:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request gateway type is blank
RESTC2CSVTD28:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request gateway type is blank
RESTC2CSVTD29:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request source type is blank
RESTC2CSVTD30:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request network code is blank
RESTC2CSVTD31:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request network code for is blank
RESTC2CSVTD32:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request service port is blank
RESTC2CSVTD33:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request source type is wrong
RESTC2CSVTD34:PRETUPS-0000|#C2C_VIEW_TRANSFER_DETAILS|To check if C2C VIEW TRANSFER STOCK DETAILS - API  is not working successfully for {0} when request transfer type is blank

#C2C TRANSFER APPROVAL LIST
RESTC2CTAL1:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is working successfully
RESTC2CTAL2:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully  when request gateway login id is blank
RESTC2CTAL3:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully  when request gateway login id is invalid
RESTC2CTAL4:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when request gateway password is blank
RESTC2CTAL5:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when request gateway password is invalid
RESTC2CTAL6:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when service port is blank
RESTC2CTAL7:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when service port is Invalid
RESTC2CTAL8:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when source type is blank
RESTC2CTAL9:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when external network code is blank
RESTC2CTAL10:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when external network code is invalid
RESTC2CTAL11:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when login id is blank
RESTC2CTAL12:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when login id is invalid
RESTC2CTAL13:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when password is invalid
RESTC2CTAL14:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when password is blank
RESTC2CTAL15:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when password length is invalid
RESTC2CTAL16:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is working successfully when approval level is 2
RESTC2CTAL17:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when request gateway type is invalid
RESTC2CTAL18:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when mssisdn2 is blank
RESTC2CTAL19:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is not working successfully when mssisdn2 is invalid
RESTC2CTAL40:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST STOCK - API  is working successfully when approval level is 3
RESTC2CTAL20:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is working successfully
RESTC2CTAL21:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully  when request gateway login id is blank
RESTC2CTAL22:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully  when request gateway login id is invalid
RESTC2CTAL23:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when request gateway password is blank
RESTC2CTAL24:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when request gateway password is invalid
RESTC2CTAL25:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when service port is blank
RESTC2CTAL26:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when service port is Invalid
RESTC2CTAL27:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when source type is blank
RESTC2CTAL28:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when external network code is blank
RESTC2CTAL29:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when external network code is invalid
RESTC2CTAL30:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when login id is blank
RESTC2CTAL31:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when login id is invalid
RESTC2CTAL32:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when password is invalid
RESTC2CTAL33:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when password is blank
RESTC2CTAL34:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when password length is invalid
RESTC2CTAL35:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is working successfully when approval level is 2
RESTC2CTAL36:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when request gateway type is invalid
RESTC2CTAL37:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when mssisdn2 is blank
RESTC2CTAL38:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is not working successfully when mssisdn2 is invalid
RESTC2CTAL39:PRETUPS-0000|#C2C_VIEW_TRANSFER_APPROVAL_LIST|To check if C2C TRANSFER APPROVAL LIST VOUCHER - API  is working successfully when approval level is 3


#CHANNEL VOUCHER ENQUIRY
RESTCVENQ1:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is working successfully
RESTCVENQ2:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is not working successfully when voucher type is blank
RESTCVENQ3:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is not working successfully when voucher segment is blank
RESTCVENQ4:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is not working successfully when denomination is blank
RESTCVENQ5:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is working successfully when voucher profile is blank. It is optional field
RESTCVENQ6:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is working successfully when login id and password is blank. It is optional field
RESTCVENQ7:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is not working successfully when gatway login id  is blank
RESTCVENQ8:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is not working successfully when gatway password is blank
RESTCVENQ9:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is not working successfully when service port is blank
RESTCVENQ10:PRETUPS-0000|#CHANNEL_VOUCHER_ENQUIRY|To check if CHANNEL VOUCHER ENQUIRY - API  is not working successfully when source type is blank

#USER SEARCH
RESTUS1:PRETUPS-0000|#Users_Search|To check if USERS SEARCH - API  is working successfully
RESTUS2:PRETUPS-0000|#Users_Search|To check if USERS SEARCH - API  is NOT working successfully when Category is invalid
RESTUS3:PRETUPS-0000|#Users_Search|To check if USERS SEARCH - API  is NOT working successfully when identifierType is invalid
RESTUS4:PRETUPS-0000|#Users_Search|To check if USERS SEARCH - API  is NOT working successfully when identifierValue is blank
RESTUS5:PRETUPS-0000|#Users_Search|To check if USERS SEARCH - API  is NOT working successfully when identifierValue is Invalid


#SELF PROFILE THRESHHOLD
RESTSPT1:PRETUPS-0000|#Self_Profile_Threshold|To check if SELF PROFILE THRESHOLD - API  is working successfully
RESTSPT2:PRETUPS-0000|#Self_Profile_Threshold|To check if SELF PROFILE THRESHOLD - API  is NOT working successfully when identifierType is blank
RESTSPT3:PRETUPS-0000|#Self_Profile_Threshold|To check if SELF PROFILE THRESHOLD - API  is NOT working successfully when identifierType is invalid
RESTSPT4:PRETUPS-0000|#Self_Profile_Threshold|To check if SELF PROFILE THRESHOLD - API  is NOT working successfully when identifierValue is blank
RESTSPT5:PRETUPS-0000|#Self_Profile_Threshold|To check if SELF PROFILE THRESHOLD - API  is NOT working successfully when identifierValue is invalid

#USER PROFILE THRESHOLD
RESTUPT1:PRETUPS-0000|#USER_Profile_Threshold|To check if USER PROFILE THRESHOLD - API  is working successfully for {0} when logged in with {1}.
RESTUPT2:PRETUPS-0000|#USER_Profile_Threshold|To check if USER PROFILE THRESHOLD - API  is NOT working successfully {0} when loginId is blank when logged in with {1}.
RESTUPT3:PRETUPS-0000|#USER_Profile_Threshold|To check if USER PROFILE THRESHOLD - API  is NOT working successfully {0} when loginId is invalid when logged in with {1}.


#NETWORK STOCK CREATION
RESTNWSTOCKC1:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is working successfully
RESTNWSTOCKC2:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when wallet type is blank
RESTNWSTOCKC3:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when request quantity is blank
RESTNWSTOCKC4:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when request quantity is invalid(negative)
RESTNWSTOCKC5:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when product list is empty
RESTNWSTOCKC6:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when requested quantity is more than wallet balance
RESTNWSTOCKC7:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when network code is blank
RESTNWSTOCKC8:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when user id is blank
RESTNWSTOCKC9:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when wallet type is invalid
RESTNWSTOCKC10:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when identifier type is blank
RESTNWSTOCKC11:PRETUPS-0000|#Network_Stock_Creation|To check if NETWORK STOCK CREATION - API is not  working successfully when identifier value  is blank


#ADD VOUCHER CARD GROUP
RESTADDVCG1:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is working successfully
RESTADDVCG2:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when identifier type is blank(login id)
RESTADDVCG3:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when identifier value is blank(password)
RESTADDVCG4:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when service type description is blank
RESTADDVCG5:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when sub service type description is blank
RESTADDVCG6:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when voucher segment  description is blank
RESTADDVCG7:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when voucher denomination is blank
RESTADDVCG8:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when product name is blank
RESTADDVCG9:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when receiver tax1 type is blank
RESTADDVCG10:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when receiver tax2 type is blank
RESTADDVCG11:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when bonus value is blank
RESTADDVCG12:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when bonus validity is blank
RESTADDVCG13:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when multFactor value is blank
RESTADDVCG14:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when applicableFrom date is blank
RESTADDVCG15:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when applicableFrom hour is blank
RESTADDVCG16:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when network code is blank
RESTADDVCG17:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when card group set name is blank
RESTADDVCG18:PRETUPS-0000|#Add_Voucher_Card_Group|To check if ADD VOUCHER CARD GROUP - API is not working successfully when validity period description is blank






#Delete Voucher Card Group
RESTDVCG1:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is working successfully
RESTDVCG2:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is not  working successfully when ServiceTypeDesc is blank
RESTDVCG3:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is not  working successfully when SubServiceTypeDesc is blank
RESTDVCG4:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is not  working successfully when cardGroupSetName is blank
RESTDVCG5:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is not  working successfully when version is blank
RESTDVCG6:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is not  working successfully when ModifiedBy is blank
RESTDVCG7:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is not  working successfully when ModuleCodeBlank is blank
RESTDVCG8:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is not  working successfully when ModuleCodeBlank is blank
RESTDVCG9:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is not  working successfully when identifierType is blank/invalid
RESTDVCG10:PRETUPS-0000|#DELETE_VOUCHER_CARD_GROUP|To check is DELETE_VOUCHER CARD GROUP - API  is not  working successfully when identifierValue is blank/invalid

#Get Voucher Type
RESTVTYPE1:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_TYPE|To check is  BUY VOUCHER GET TYPE - API  is working successfully
RESTVTYPE2:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_TYPE|To check is BUY VOUCHER GET TYPE  - API  is not  working successfully when login id is blank
RESTVTYPE3:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_TYPE|To check is BUY VOUCHER GET TYPE  - API  is not  working successfully when IdentifierLogin is invalid
RESTVTYPE4:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_TYPE|To check is BUY VOUCHER GET TYPE  - API  is working successfully with correct login id
RESTVTYPE5:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_TYPE|To check is BUY VOUCHER GET TYPE  - API is working successfully with correct operator user.
RESTVTYPE6:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_TYPE|To check is BUY VOUCHER GET TYPE  - API is working successfully with empty voucher list.

#Get Voucher Segment
RESTVSEGT1:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_SEGMENT|To check is BUY VOUCHER GET SEGMENT - API  is working successfully
RESTVSEGT2:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_SEGMENT|To check is BUY VOUCHER GET SEGMENT - API  is not  working successfully when login id is blank
RESTVSEGT3:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_SEGMENT|To check is BUY VOUCHER GET SEGMENT - API  is not  working successfully when IdentifierLogin is invalid
RESTVSEGT4:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_SEGMENT|To check is BUY VOUCHER GET SEGMENT - API  is working successfully with correct login id
RESTVSEGT5:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_SEGMENT|To check is BUY VOUCHER GET SEGMENT - API is not  working successfully when voucher type is invalid
RESTVSEGT6:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_SEGMENT|To check is BUY VOUCHER GET SEGMENT - API is working successfully with correct operator user.

#Get Voucher Denomination
RESTVDENO1:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_DENOMINATION|To check is BUY VOUCHER GET DENOMINATION - API  is working successfully for user {0}.
RESTVDENO2:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_DENOMINATION|To check is BUY VOUCHER GET DENOMINATION - API  is not  working successfully for user {0} when login id is blank
RESTVDENO3:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_DENOMINATION|To check is BUY VOUCHER GET DENOMINATION - API  is not  working successfully for user {0} when IdentifierLogin is invalid
RESTVDENO4:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_DENOMINATION|To check is BUY VOUCHER GET DENOMINATION - API  is working successfully for user {0} with correct login id
RESTVDENO5:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_DENOMINATION|To check is BUY VOUCHER GET DENOMINATION - API  is not  working successfully for user {0} when voucher type is invalid
RESTVDENO6:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_DENOMINATION|To check is BUY VOUCHER GET DENOMINATION - API  is not  working successfully for user {0} when voucher segment is invalid
RESTVDENO7:PRETUPS-0000|#C2C_BUY_VOUCHER_GET_DENOMINATION|To check is BUY VOUCHER GET DENOMINATION - API  is working successfully for user {0} with correct operator user.



#Voucher Tracking Report
VTR1:PRETUPS-000|Voucher Tracking Report|Channel User Category {0} is able to download voucher tracking report
#Voucher Availability Report
VAR1:PRETUPS-000|Voucher Tracking Report|Channel User Category {0} is able to download voucher availbility report
#Voucher Availability Report
VCR1:PRETUPS-000|Voucher Tracking Report|Channel User Category {0} is able to download voucher consumption report

#User Upward Hierarchy
USRUPWRDHIERARCHY1:PRETUPS-0000|User upward Hierarchy|User upward serach with Correct LoginId
USRUPWRDHIERARCHY2:PRETUPS-0000|User upward Hierarchy|User upward serach with Correct MSISDN
USRUPWRDHIERARCHY3:PRETUPS-0000|User upward Hierarchy|User upward serach with No Login No MSISDN
USRUPWRDHIERARCHY4:PRETUPS-0000|User upward Hierarchy|User upward serach with blank password
USRUPWRDHIERARCHY5:PRETUPS-0000|User upward Hierarchy|User upward serach with incorrect password length
USRUPWRDHIERARCHY6:PRETUPS-0000|User upward Hierarchy|User upward serach with invald user
USRUPWRDHIERARCHY7:PRETUPS-0000|User upward Hierarchy|User upward serach with invald network code

#C2C Recent Buy Enquiry
C2CRECENTBUY1:PRETUPS-0000|C2C Recent Buy Enquiry|C2C Recent Buy Enquiry with Correct LoginId
C2CRECENTBUY2:PRETUPS-0000|C2C Recent Buy Enquiry|C2C Recent Buy Enquiry with Correct MSISDN
C2CRECENTBUY3:PRETUPS-0000|C2C Recent Buy Enquiry|C2C Recent Buy Enquiry with No Login No MSISDN
C2CRECENTBUY4:PRETUPS-0000|C2C Recent Buy Enquiry|C2C Recent Buy Enquiry with blank password
C2CRECENTBUY5:PRETUPS-0000|C2C Recent Buy Enquiry|C2C Recent Buy Enquiry with incorrect password length
C2CRECENTBUY6:PRETUPS-0000|C2C Recent Buy Enquiry|C2C Recent Buy Enquiry with invald user
C2CRECENTBUY7:PRETUPS-0000|C2C Recent Buy Enquiry|C2C Recent Buy Enquiry with invald network code
# USER DETAILS API
USRDTAILS001:PRETUPS-0000|User Details Api|User Details Api with Login Id and Password.
USRDTAILS002:PRETUPS-0000|User Details Api|User Details Api with Msisdn and Pin.
USRDTAILS003:PRETUPS-0000|User Details Api|User Details Api with blank msisdn2.
USRDTAILS004:PRETUPS-0000|User Details Api|User Details Api with Invaild msisdn2.
USRDTAILS005:PRETUPS-0000|User Details Api|User Details Api with Invaild extnwcode.
USRDTAILS006:PRETUPS-0000|User Details Api|User Details Api with Invaild Requester Msisdn.
USRDTAILS007:PRETUPS-0000|User Details Api|User Details Api with Valid Requester Msisdn but blank pin.
USRDTAILS008:PRETUPS-0000|User Details Api|User Details Api with Valid Requester LoginId but InvaildPassword.


#C2S GET AMOUNT SERVICE WISE LIST
RESTC2SGASWL1::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is working successfully
RESTC2SGASWL2::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is  not working successfully when blank msisdn is provided.
RESTC2SGASWL3::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is  not working successfully when blank pin is provided.
RESTC2SGASWL4::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is  not working successfully when blank extnwcode is provided.
RESTC2SGASWL5::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is  not working successfully when blank Request GatewayLoginId is provided.
RESTC2SGASWL6::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is  not working successfully when blank Request GatewayPassword is provided.
RESTC2SGASWL7::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is  not working successfully when blank ServicePort is provided.
RESTC2SGASWL8::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is  not working successfully when blank SourceTYPE is provided.
RESTC2SGASWL9::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is  not working successfully when From date is Greater than to Date.
RESTC2SGASWL10::PRETUPS-0000|#C2S GET_AMOUNT_SERVICE_WISE_LIST|To check if C2S GET AMOUNT SERVICE WISE LIST - API  is  not working successfully when invalid date format is provided.


#C2S Get Transaction Details
RESTC2SGTD1::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API  is working successfully for {0}.
RESTC2SGTD2::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API is  not working successfully for {0} when blank msisdn is provided.
RESTC2SGTD3::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API is  not working successfully for {0} when blank pin is provided.
RESTC2SGTD4::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API  is  not working successfully for {0} when blank extnwcode is provided.
RESTC2SGTD5::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API  is  not working successfully for {0} when blank Request GatewayLoginId is provided.
RESTC2SGTD6::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API  is  not working successfully for {0} when blank Request GatewayPassword is provided.
RESTC2SGTD7::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API  is  not working successfully for {0} when blank ServicePort is provided.
RESTC2SGTD8::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API  is  not working successfully for {0}  when blank SourceTYPE is provided.
RESTC2SGTD9::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API  is  not working successfully for {0} when From date is Greater than to Date.
RESTC2SGTD10::PRETUPS-0000|#C2S_Get_Transaction_Details|To check if C2S Get Transaction Details - API  is  not working successfully for {0} when invalid date format is provided.

#C2S TOTAL NUMBER OF TRANSACTION
RESTC2STNOT1::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API  is working successfully.
RESTC2STNOT2::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API is  not working successfully when blank msisdn is provided.
RESTC2STNOT3::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API is  not working successfully when blank pin is provided.
RESTC2STNOT4::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API  is  not working successfully when blank extnwcode is provided.
RESTC2STNOT5::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API  is  not working successfully when blank Request GatewayLoginId is provided.
RESTC2STNOT6::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API  is  not working successfully when blank Request GatewayPassword is provided.
RESTC2STNOT7::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API  is  not working successfully when blank ServicePort is provided.
RESTC2STNOT8::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API  is  not working successfully  when blank SourceTYPE is provided.
RESTC2STNOT9::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API  is  not working successfully when From date is Greater than to Date.
RESTC2STNOT10::PRETUPS-0000|#C2S_TOTAL_NUMBER_OF_TRANSACTION|To check if C2S TOTAL NUMBER OF TRANSACTION - API  is  not working successfully when invalid date format is provided.

#C2S Income Calculator
RESTC2SINC1::PRETUPS-0000|#C2S Income Calculator|To check if C2S Income Calculator - API  is working successfully.
RESTC2SINC2::PRETUPS-0000|#C2S Income Calculator|To check if C2S Income Calculator - API is  not working successfully when blank  extnwcode is provided.
RESTC2SINC3::PRETUPS-0000|#C2S Income Calculator|To check if C2S Income Calculator - API is  not working successfully when blank msisdn is provided.
RESTC2SINC4::PRETUPS-0000|#C2S Income Calculator|To check if C2S Income Calculator - API  is  not working successfully when blank from date is provided.
RESTC2SINC5::PRETUPS-0000|#C2S Income Calculator|To check if C2S Income Calculator - API  is  not working successfully when blank to date is provided.
RESTC2SINC6::PRETUPS-0000|#C2S Income Calculator|To check if C2S Income Calculator - API  is  not working successfully when blank pin is provided.
RESTC2SINC7::PRETUPS-0000|#C2S Income Calculator|To check if C2S Income Calculator - API  is  not working successfully when msisdn of invalid length is provided.
RESTC2SINC8::PRETUPS-0000|#C2S Income Calculator|To check if C2S Income Calculator - API  is  not working successfully  when blank msisdn2 is provided.


#View Pass Book INFO
RESTC2SVPB1::PRETUPS-0000|#View PassBook Info|To check if View PassBook Info - API  is working successfully.
RESTC2SVPB2::PRETUPS-0000|#View PassBook Info|To check if View PassBook Info - API is  not working successfully when blank  extnwcode is provided.
RESTC2SVPB3::PRETUPS-0000|#View PassBook Info|To check if View PassBook Info - API is  not working successfully when blank msisdn is provided.
RESTC2SVPB4::PRETUPS-0000|#View PassBook Info|To check if View PassBook Info - API  is  not working successfully when blank from date is provided.
RESTC2SVPB5::PRETUPS-0000|#View PassBook Info|To check if View PassBook Info - API  is  not working successfully when blank to date is provided.
RESTC2SVPB6::PRETUPS-0000|#View PassBook Info|To check if View PassBook Info - API  is  not working successfully when blank pin is provided.
RESTC2SVPB7::PRETUPS-0000|#View PassBook Info|To check if View PassBook Info - API  is  not working successfully when msisdn of invalid length is provided.

#GET VOUCHER INFO
RESTGVI1::PRETUPS-0000|#GET_VOUCHER_INFO|To check if GET VOUCHER INFO - API  is working successfully for {0}.

#TOPFIVEPRODUCTRECHARGEDETAIL
RESTTOPFIVE1::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is working successfully .
RESTTOPFIVE2::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API is  not working successfully when blank msisdn is provided.
RESTTOPFIVE3::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API is  not working successfully when blank pin is provided.
RESTTOPFIVE4::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully when blank extnwcode is provided.
RESTTOPFIVE5::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully when blank Request GatewayLoginId is provided.
RESTTOPFIVE6::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully when blank Request GatewayPassword is provided.
RESTTOPFIVE7::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully when blank ServicePort is provided.
RESTTOPFIVE8::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully  when blank SourceTYPE is provided.
RESTTOPFIVE9::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully when From date is Greater than to Date.
RESTTOPFIVE10::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully when invalid date format is provided.
RESTTOPFIVE11::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully when invalid number of products is provided.
RESTTOPFIVE12::PRETUPS-0000|#TOP_FIVE_PRODUCT_RECHARGE_DETAIL|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully when invalid top five product is provided.

#SENDOTPDETAIL
SENDOTP1::PRETUPS-0000|#SEND_OTP_DETAIL|To check if SEND OTP DETAIL - API  is working successfully .
SENDOTP2::PRETUPS-0000|#SEND_OTP_DETAIL|To check if SEND OTP DETAIL - API is  not working successfully when blank msisdn is provided.
SENDOTP3::PRETUPS-0000|#SEND_OTP_DETAIL|To check if SEND OTP DETAIL - API is  not working successfully when blank pin is provided.
SENDOTP4::PRETUPS-0000|#SEND_OTP_DETAIL|To check if SEND OTP DETAIL - API  is  not working successfully when blank extnwcode is provided.
SENDOTP5::PRETUPS-0000|#SEND_OTP_DETAIL|To check if SEND OTP DETAIL - API  is  not working successfully when blank Request GatewayLoginId is provided.
SENDOTP6::PRETUPS-0000|#SEND_OTP_DETAIL|To check if SEND OTP DETAIL - API  is  not working successfully when blank Request GatewayPassword is provided.
SENDOTP7::PRETUPS-0000|#SEND_OTP_DETAIL|To check if SEND OTP DETAIL - API  is  not working successfully when blank ServicePort is provided.
SENDOTP8::PRETUPS-0000|#SEND_OTP_DETAIL|To check if SEND OTP DETAIL - API  is  not working successfully  when blank SourceTYPE is provided.
SENDOTP9::PRETUPS-0000|#SEND_OTP_DETAIL|To check if SEND OTP DETAIL - API  is  not working successfully  when requested times is more than max times.

#VALIDATEOTPDETAIL
VALIDATEOTP1::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is working successfully .
VALIDATEOTP2::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is  not working successfully when blank loginId is provided.
VALIDATEOTP3::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is  not working successfully when blank password is provided.
VALIDATEOTP4::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is  not working successfully when blank extnwcode is provided.
VALIDATEOTP5::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is  not working successfully when blank Request GatewayLoginId is provided.
VALIDATEOTP6::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is  not working successfully when blank Request GatewayPassword is provided.
VALIDATEOTP7::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is  not working successfully when blank ServicePort is provided.
VALIDATEOTP8::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is  not working successfully  when blank SourceTYPE is provided.
VALIDATEOTP9::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is  not working successfully  when OTP is invalid.
VALIDATEOTP10::PRETUPS-0000|#VALIDATE_OTP_DETAIL|To check if VALIDATE OTP DETAIL - API is  not working successfully  when new pin is not same as confirm pin.

#TOTALINCOMEDETAIL
TOTALINCOME1::PRETUPS-0000|#TOTAL_INCOME_DETAIL|To check if TOTAL INCOME DETAIL - API is working successfully for {0}.
TOTALINCOME9::PRETUPS-0000|#TOTAL_INCOME_DETAIL|To check if TOTAL INCOME DETAIL - API is  not working successfully for {0} when From date is Greater than to Date.
TOTALINCOME10::PRETUPS-0000|#TOTAL_INCOME_DETAIL|To check if TOTAL INCOME DETAIL - API is  not working successfully for {0} when invalid date format is provided.

#TOTALTRANSACTIONDETAILEDVIEW
TXNDETAIL1::PRETUPS-0000|#TOTAL_TRANSACTION_DETAILED_VIEW|To check if TOTAL TXN DETAILED VIEW - API  is working successfully for {0}.
TXNDETAIL9::PRETUPS-0000|#TOTAL_TRANSACTION_DETAILED_VIEW|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully for {0} when From date is Greater than to Date.
TXNDETAIL10::PRETUPS-0000|#TOTAL_TRANSACTION_DETAILED_VIEW|To check if TOTAL TXN DETAILED VIEW - API  is  not working successfully for {0} when invalid date format is provided.



#USER PAYMENT TYPES
USRPAYMENT1:PRETUPS-5893|#USER_PAYMENT_TYPES|To check if USER PAYMENT TYPE - API  is working successfully for {0} with correct loginId .
USRPAYMENT2:PRETUPS-6442|#USER_PAYMENT_TYPES|To check if USER PAYMENT TYPE - API  is working successfully for {0} with Correct MSISDN.
USRPAYMENT3::PRETUPS-6443|#USER_PAYMENT_TYPES|To check if USER PAYMENT TYPE - API is  not working successfully for {0} when blank loginId is provided.
USRPAYMENT4::PRETUPS-6444|#USER_PAYMENT_TYPES|To check if USER PAYMENT TYPE - API is  not working successfully for {0} when blank extnwcode is provided.
USRPAYMENT5::PRETUPS-6445|#USER_PAYMENT_TYPES|To check if USER PAYMENT TYPE - API is  not working successfully for {0} when blank Request GatewayLoginId is provided.
USRPAYMENT6::PRETUPS-6446|#USER_PAYMENT_TYPES|To check if USER PAYMENT TYPE - API is  not working successfully for {0} when blank Request GatewayPassword is provided.
USRPAYMENT7::PRETUPS-6447|#USER_PAYMENT_TYPES|To check if USER PAYMENT TYPE - API is  not working successfully for {0} when blank ServicePort is provided.
USRPAYMENT8::PRETUPS-6448|#USER_PAYMENT_TYPES|To check if USER PAYMENT TYPE - API is  not working successfully for {0}  when blank SourceTYPE is provided.
USRPAYMENT9::PRETUPS-6449|#USER_PAYMENT_TYPES|To check if USER PAYMENT TYPE - API is  working successfully for O2C of channel user {0}.

#GETVOUCHERCOUNT
RESTVCNT1:PRETUPS-5875|#C2C_BUY_VOUCHER_GET_COUNT|To check is BUY VOUCHER GET COUNT - API  is working successfully for {0}.

#GETDOMAINCATEGORY
RESTGDC1::PRETUPS-4285|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is working successfully for {0}.
RESTGDC2::PRETUPS-6420|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when blank loginId is passed.
RESTGDC3::PRETUPS-4289|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when invalid extcode is entered.
RESTGDC4::PRETUPS-6421|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when blank password is entered.
RESTGDC5::PRETUPS-4286|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when blank extnwcode is entered.
RESTGDC6::PRETUPS-4291|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when invalid msisdn2 is entered.
RESTGDC7::PRETUPS-4290|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when invalid password is entered.
RESTGDC8::PRETUPS-6422|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when blank Request GatewayLoginId is provided.
RESTGDC9::PRETUPS-6423|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when blank Request GatewayPassword is provided.
RESTGDC10::PRETUPS-6424|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when blank ServicePort is provided.
RESTGDC11::PRETUPS-6425|#GET_DOMAIN_CATEGORY|To check if GET DOMAIN CATEGORY - API  is not working successfully for {0} when blank SourceTYPE is provided.

#AUTOCOMPLETEUSERDETAILS
AUTOCMPLDETAIL1::PRETUPS-4008|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is working successfully for {0} .
AUTOCMPLDETAIL2::PRETUPS-6406|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS- API is  not working successfully for {0} when blank msisdn is provided.
AUTOCMPLDETAIL3::PRETUPS-6407|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API is  not working successfully for {0} when blank pin is provided.
AUTOCMPLDETAIL4::PRETUPS-6408|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0} when blank extnwcode is provided.
AUTOCMPLDETAIL5::PRETUPS-6409|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0} when blank Request GatewayLoginId is provided.
AUTOCMPLDETAIL6::PRETUPS-6410|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0} when blank Request GatewayPassword is provided.
AUTOCMPLDETAIL7::PRETUPS-6411|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0} when blank ServicePort is provided.
AUTOCMPLDETAIL8::PRETUPS-6412|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0}  when blank SourceTYPE is provided.
AUTOCMPLDETAIL9::PRETUPS-4012|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0}  when msisdnn is provided is less than min({0}) character required.
AUTOCMPLDETAIL10::PRETUPS-6414|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0}  when loginidn is provided is less than min({0}) character required.
AUTOCMPLDETAIL11::PRETUPS-6415|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0}  when usernamen is provided is less than min({0}) character required.
AUTOCMPLDETAIL12::PRETUPS-4013|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0}  when no user details for autocompleteion is provided.
AUTOCMPLDETAIL13::PRETUPS-6416|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0}  when invalid domain code is provided.
AUTOCMPLDETAIL14::PRETUPS-6417|#AUTO_COMPLETE_USER_DETAILS|To check if AUTO COMPLETE USER DETAILS - API  is  not working successfully for {0}  when invalid category code is provided.


#SENDER-RECEIVER USER DETAILS
TRFUSERSDETAILS1:PRETUPS-5885|#USER_INFO|To check if TRF USERS DETAILS - API is working successfully for {0} to {1} with correct msisdn.
TRFUSERSDETAILS2:PRETUPS-6434|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when blank msisdn, extnwcode, loginId and password is sent in the request
TRFUSERSDETAILS3:PRETUPS-6435|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when  msisdn is sent and pin is not sent
TRFUSERSDETAILS4:PRETUPS-5887|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when msisdn2 is empty
TRFUSERSDETAILS5:PRETUPS-6436|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when request gateway login id is blank
TRFUSERSDETAILS6:PRETUPS-6437|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when request gateway password is blank
TRFUSERSDETAILS7:PRETUPS-6438|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when request gateway code id is blank
TRFUSERSDETAILS8:PRETUPS-5890|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when extnwcode is blank
TRFUSERSDETAILS9:PRETUPS-6439|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when pin is numeric
TRFUSERSDETAILS10:PRETUPS-6429|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when invalid language1 is given
TRFUSERSDETAILS11:PRETUPS-6430|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when msisdn length is invalid
TRFUSERSDETAILS12:PRETUPS-6431|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when c2ctrftype is other than "B" or "C".
TRFUSERSDETAILS13:PRETUPS-6432|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when c2ctrftype is blank.
TRFUSERSDETAILS14:PRETUPS-6433|#USER_INFO|To check if TRF USERS DETAILS - API is not working successfully for {0} to {1} when pin length is invalid
TRFUSERSDETAILS15:PRETUPS-5892|#USER_INFO|To check if TRF USERS DETAILS - API is working successfully for {0} to {1} with correct msisdn and transfertype as 'B'(for BUY).

#TRANSACTIONCALCULATIONSTOCKVOUCHERVIEW
TXNCALVIEW1::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is working successfully for {0}.
TXNCALVIEW2::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is not working successfully for {0} when blank Request GatewayLoginId is provided.
TXNCALVIEW3::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is not working successfully for {0} when blank Request GatewayPassword is provided.
TXNCALVIEW4::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is not working successfully for {0} when when blank ServicePort is provided.
TXNCALVIEW5::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is not working successfully for {0} when when blank SourceTYPE is provided
TXNCALVIEW6::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is not working successfully for {0} when blank extnwcode is provided.
TXNCALVIEW7::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is not working successfully for {0} when blank msisdn is provided.
TXNCALVIEW8::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is not working successfully for {0} when blank pin is provided.
TXNCALVIEW9::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is not working successfully for {0} when invalid pin length is provided.
TXNCALVIEW10::PRETUPS-0000|#TRANSACTION_CALCULATIONS_STOCK_VOUCHER|To check if TRANSACTION CALCULATIONS STOCK VOUCHER - API is not working successfully for {0} when msisdn of invalid length is provided.


#USERASSOCIATEPROFILE
USRPROFILE1:PRETUPS-6145|#USER_ASSOCIATE_PROFILE|To check if User Associate Profile API is working for {0} successfully with loginid.

#USERDELETE
USRDELETE1:PRETUPS-13368|#USER_DELETE|To verify that Delete Channel User API is working successfully when valid request is sent..
USRDELETE2:PRETUPS-13369|#USER_DELETE|To verify that Delete Channel User API is not working successfully when a user which is in N status is delted.
USRDELETE3:PRETUPS-13370|#USER_DELETE|To verify that Delete Channel User API is not working successfully when blank external network code is sent in request.
USRDELETE4:PRETUPS-13371|#USER_DELETE|To verify that Delete Channel User API is not working successfully when invalid external network code is sent in request.
USRDELETE5:PRETUPS-13372|#USER_DELETE|To verify that Delete Channel User API is not working successfully when invalid idtype is sent in request.
USRDELETE6:PRETUPS-13373|#USER_DELETE|To verify that Delete Channel User API is not working successfully when BLANK remark is sent in request.
USRDELETE7:PRETUPS-13374|#USER_DELETE|To verify that Delete Channel User API is not  working successfully when invalid user  is sent in request.

#FETCHCHANNELUSERSLIST
FCUL1::PRETUPS-6173|#FETCH_CHANNEL_USERS_LIST|To verify that FETCH CHANNEL USERS LIST -API is  working successfully for {0} when valid request is sent.
FCUL2::PRETUPS-6174|#FETCH_CHANNEL_USERS_LIST|To verify that FETCH CHANNEL USERS LIST -API is not working successfully for {0} when invalid loginId is given in identifierValue.
FCUL3::PRETUPS-6175|#FETCH_CHANNEL_USERS_LIST|To verify that FETCH CHANNEL USERS LIST -API is not working successfully for {0} when invalid msisdn is given in identifierValue.
FCUL4::PRETUPS-6315|#FETCH_CHANNEL_USERS_LIST|To verify that  FETCH CHANNEL USERS LIST -API  is not working successfully for {0} when blank loginId is given in identifierValue.
FCUL5::PRETUPS-6316|#FETCH_CHANNEL_USERS_LIST|To verify that  FETCH CHANNEL USERS LIST -API  is not working successfully  for {0} when blank msisdn is provided in identifierValue.
FCUL6::PRETUPS-6317|#FETCH_CHANNEL_USERS_LIST|To verify that  FETCH CHANNEL USERS LIST -API  is not working successfully  for {0} when blank external network code is given.
FCUL7::PRETUPS-6318|#FETCH_CHANNEL_USERS_LIST|To verify that  FETCH CHANNEL USERS LIST -API  is  not working successfully  for {0} when pageNumber & entriesPerPage  provided are invalid.
FCUL8::PRETUPS-6319|#FETCH_CHANNEL_USERS_LIST|To verify that  FETCH CHANNEL USERS LIST -API  is not working successfully  for {0} when blank userName is given with category.
FCUL9::PRETUPS-6320|#FETCH_CHANNEL_USERS_LIST|To verify that  FETCH CHANNEL USERS LIST -API  is not working successfully  for {0} when blank value is given for pageNumber.
FCUL10::PRETUPS-6321|#FETCH_CHANNEL_USERS_LIST|To verify that  FETCH CHANNEL USERS LIST -API  is not working successfully  for {0} when when blank value is given for entriesPerPage.
FCUL11::PRETUPS-6322|#FETCH_CHANNEL_USERS_LIST|To verify that  FETCH CHANNEL USERS LIST -API  is not working successfully  for {0} when when only userName is provided.
FCUL12::PRETUPS-6185|#FETCH_CHANNEL_USERS_LIST|To verify that  FETCH CHANNEL USERS LIST -API  is not working successfully  for {0} when when invalid Geography is provided for userName.

#FETCHUSERDETAILS
FETCHUSERDETAILS1::PRETUPS-6346|#FETCH_USER_DETAILS|To check if FETCH USER DETAILS - API  is working for {0} with loginId successfully.
FETCHUSERDETAILS2::PRETUPS-6358|#FETCH_USER_DETAILS|To check if FETCH USER DETAILS - API  is working successfully for {0} with msisdn successfully.
FETCHUSERDETAILS3::PRETUPS-6347|#FETCH_USER_DETAILS|To check if FETCH USER DETAILS - API  is not working successfully for {0} when invalid newtwork code is provided.
FETCHUSERDETAILS4::PRETUPS-6359|#FETCH_USER_DETAILS|To check if FETCH USER DETAILS - API  is not working successfully for {0} when invalid idType is provided.
FETCHUSERDETAILS5::PRETUPS-6360|#FETCH_USER_DETAILS|To check if FETCH USER DETAILS - API  is not working successfully for {0} when invalid idValue is provided.
FETCHUSERDETAILS6::PRETUPS-6348|#FETCH_USER_DETAILS|To check if FETCH USER DETAILS - API  is not working successfully for {0} when user credential provided is invalid.
FETCHUSERDETAILS7::PRETUPS-6349|#FETCH_USER_DETAILS|To check if FETCH USER DETAILS - API  is not working successfully for {0} when sub user is not in logged in users hierarchy.
FETCHUSERDETAILS8::PRETUPS-6361|#FETCH_USER_DETAILS|To check if FETCH USER DETAILS - API  is working successfully for {0} when sub user is suspended and suspended user details is displayed.
FETCHUSERDETAILS9::PRETUPS-6362|#FETCH_USER_DETAILS|To check if FETCH USER DETAILS - API  is working successfully for {0} when sub user is resumed and no suspended user details is displayed.

#GETDOMAINCATEGORYPARENTCAT
GDCPC1::PRETUPS-6189|#GET_DOMAIN_CATEGORY_PARENT_CAT|To verify that GET - Domain/Category/Parent Category -API is  working successfully for {0} when valid request is sent.
GDCPC2::PRETUPS-6190|#GET_DOMAIN_CATEGORY_PARENT_CAT|To verify that GET - Domain/Category/Parent Category -API is not working successfully for {0} when blank  network code is sent.
GDCPC3::PRETUPS-6191|#GET_DOMAIN_CATEGORY_PARENT_CAT|To verify that GET - Domain/Category/Parent Category -API is not working successfully when {0} invalid loginId is given in identifierValue.
GDCPC4::PRETUPS-6192|#GET_DOMAIN_CATEGORY_PARENT_CAT|To verify that GET - Domain/Category/Parent Category -API is not working successfully when {0} invalid msisdn is given in identifierValue.
GDCPC5::PRETUPS-6312|#GET_DOMAIN_CATEGORY_PARENT_CAT|To verify that GET - Domain/Category/Parent Category -API is not working successfully when {0} blank loginId is given in identifierValue.
GDCPC6::PRETUPS-6313|#GET_DOMAIN_CATEGORY_PARENT_CAT|To verify that GET - Domain/Category/Parent Category -API is not working successfully when {0} blank msisdn is given in identifierValue.

#USERPROPERTIESLISTS
USERPROPERTIESLISTS1:PRETUPS-6154|#USER_PROPERTIES_LISTS|To check if User Properties Lists API is working successfully for {0} with loginid.
USERPROPERTIESLISTS2:PRETUPS-6161|#USER_PROPERTIES_LISTS|To check if User Properties Lists API is working successfully for {0}with msisdn.
USERPROPERTIESLISTS3:PRETUPS-6155|#USER_PROPERTIES_LISTS|To check if User Properties Lists API is not working successfully for {0} with wrong network code.
USERPROPERTIESLISTS4:PRETUPS-6454|#USER_PROPERTIES_LISTS|To check if User Properties Lists API is not working successfully for {0} with blank identifiertype.
USERPROPERTIESLISTS5:PRETUPS-6156|#USER_PROPERTIES_LISTS|To check if User Properties Lists API is not working successfully for {0} with wrong user.
USERPROPERTIESLISTS6:PRETUPS-6160|#USER_PROPERTIES_LISTS|To check if User Properties Lists API is working successfully for {0} if parent is a child of logged in user .
USERPROPERTIESLISTS7:PRETUPS-6157|#USER_PROPERTIES_LISTS|To check if User Properties Lists API is not working successfully for {0} if parent is not a child of logged in user.
USERPROPERTIESLISTS8:PRETUPS-6158|#USER_PROPERTIES_LISTS|To check if User Properties Lists API is not workingsuccessfully for {0} if parent category is higher than user category.
USERPROPERTIESLISTS9:PRETUPS-6159|#USER_PROPERTIES_LISTS|To check if User Properties Lists API is not working  successfully for {0} if parent is invalid.

#SELFREGISTRATION
SELFREG1:PRETUPS-6309|#SELFREGISTRATION|To check if Self Regsitration API is working successfully.
SELFREG2:PRETUPS-6302|#SELFREGISTRATION|To check if Self Regsitration API is not working successfully for invalid msisdn.
SELFREG3:PRETUPS-6300|#SELFREGISTRATION|To check if Self Regsitration API is not working successfully for blank msisdn.
SELFREG4:PRETUPS-6304|#SELFREGISTRATION|To check if Self Regsitration API is not working successfully for blank pin.
SELFREG5:PRETUPS-6305|#SELFREGISTRATION|To check if Self Regsitration API is not working successfully for invalid pin.
SELFREG6:PRETUPS-6303|#SELFREGISTRATION|To check if Self Regsitration API is not working successfully for invalid pin length.
SELFREG7:PRETUPS-6306|#SELFREGISTRATION|To check if Self Regsitration API is not working successfully for blank user name.
SELFREG8:PRETUPS-6307|#SELFREGISTRATION|To check if Self Regsitration API is not working successfully for blank emailId.
SELFREG9:PRETUPS-6308|#SELFREGISTRATION|To check if Self Regsitration API is not working successfully for invalid emailId.
SELFREG10:PRETUPS-6301|#SELFREGISTRATION|To check if Self Regsitration API is not working successfully for mobile no already exist.

#O2CINITIATE
O2CINI1:PRETUPS-6289|#O2CINITIATE|To check if O2C Initiate API is working successfully.
O2CINI2:PRETUPS-6290|#O2CINITIATE|To verify that  O2C initiate API  is not  working successfully when invalid pin is sent.
O2CINI3:PRETUPS-6291|#O2CINITIATE|To verify that  O2C initiate API  is  not working successfully when invalid msisdn is sent.
O2CINI4:PRETUPS-6292|#O2CINITIATE|To verify that  O2C initiate API  is not  working successfully when invalid trfcategory or trfcategory other than sale is sent.
O2CINI5:PRETUPS-6293|#O2CINITIATE|To verify that  O2C initiate API  is not  working successfully when invalid amount is sent in products.
O2CINI6:PRETUPS-6294|#O2CINITIATE|To verify that  O2C initiate API  is not  working successfully when invalid product code  is sent in products.
O2CINI7:PRETUPS-6295|#O2CINITIATE|To verify that  O2C initiate API  is not  working successfully when products are sent in invalid format.
O2CINI8:PRETUPS-6296|#O2CINITIATE|To verify that  O2C initiate API  is not  working successfully when invalid token is sent.
O2CINI9:PRETUPS-6297|#O2CINITIATE|To verify that  O2C initiate API  is not  working successfully when invalid imei is sent.
O2CINI10:PRETUPS-6298|#O2CINITIATE|To verify that  O2C initiate API  is not  working successfully when invalid mhash is sent.


#O2CAPPROVAL
O2CAPPR1:PRETUPS-6280|#O2CAPPRVL|To check if O2C Approval API is working successfully in case of success.
O2CAPPR2:PRETUPS-6281|#O2CAPPRVL|To check if O2C Approval API is working successfully in case of fail.
O2CAPPR3:PRETUPS-6284|#O2CAPPRVL|To verify that O2C Approval API  is not  working successfully when invalid mhash is sent.
O2CAPPR4:PRETUPS-6285|#O2CAPPRVL|To verify that O2C Approval API  is not  working successfully when invalid token is sent.
O2CAPPR5:PRETUPS-6282|#O2CAPPRVL|To verify that O2C Approval API  is  not working successfully when invalid txnid is sent.
O2CAPPR6:PRETUPS-6283|#O2CAPPRVL|To verify that O2C Approval API  is not  working successfully when invalid imei is sent.
O2CAPPR7:PRETUPS-6286|#O2CAPPRVL|To verify that O2C Approval API  is not  working successfully when invalid status is sent.

#ADDCHANNELUSER
ADD1:PRETUPS-6516|#ADD|To check if Add channel user API is working successfully.
ADD2:PRETUPS-6496|#ADD|To check if Add channel user API is not working successfully when invalid parent category is given.
ADD3:PRETUPS-6497|#ADD|To check if Add channel user API is not working successfully when existing webloginid is given.
ADD4:PRETUPS-6498|#ADD|To check if Add channel user API is not working successfully when existing extcode is given.
ADD5:PRETUPS-6499|#ADD|To check if Add channel user API is not working successfully when invalid geography is given.
ADD6:PRETUPS-6500|#ADD|To check if Add channel user API is not working successfully when invalid language is given.
ADD7:PRETUPS-6501|#ADD|To check if Add channel user API is not working successfully when invalid stk profile is given.
ADD8:PRETUPS-6502|#ADD|To check if Add channel user API is not working successfully when existing mobile no is given.
ADD9:PRETUPS-6503|#ADD|To check if Add channel user API is not working successfully when mobile no not in network is given.
ADD10:PRETUPS-6504|#ADD|To check if Add channel user API is not working successfully when invalid appointment date is given.
ADD11:PRETUPS-6505|#ADD|To check if Add channel user API is not working successfully when invalid allowed days is given.
ADD12:PRETUPS-6506|#ADD|To check if Add channel user API is not working successfully when invalid payment type is given.
ADD13:PRETUPS-6507|#ADD|To check if Add channel user API is not working successfully when blank short name is given.
ADD14:PRETUPS-6508|#ADD|To check if Add channel user API is not working successfully when invalid user name prefix is given.
ADD15:PRETUPS-6509|#ADD|To check if Add channel user API is not working successfully when invalid email id is passed.
ADD16:PRETUPS-6510|#ADD|To check if Add channel user API is not working successfully when invalid web password is given.
ADD17:PRETUPS-6511|#ADD|To check if Add channel user API is not working successfully when blank primary msisdn is given.
ADD18:PRETUPS-6512|#ADD|To check if Add channel user API is not working successfully when invalid contact no is given.
ADD19:PRETUPS-6513|#ADD|To check if Add channel user API is not working successfully when invalid group role is given.
ADD20:PRETUPS-6514|#ADD|To check if Add channel user API is not working successfully when invalid voucher type is given.
ADD21:PRETUPS-6515|#ADD|To check if Add channel user API is not working successfully when invalid services is given.



#MODIFYCHANNELUSER
MODIFY1:PRETUPS-6536|#MODIFY|To check if Modify channel user API is working successfully.
MODIFY3:PRETUPS-6517|#MODIFY|To check if Modify channel user API is not working successfully when existing  login id  is given.
MODIFY4:PRETUPS-6518|#MODIFY|To check if Modify channel user API is not working successfully when invalid stk profile  is given.
MODIFY5:PRETUPS-6519|#MODIFY|To check if Modify channel user API is not working successfully when invalid language is given.
MODIFY6:PRETUPS-6520|#MODIFY|To check if Modify channel user API is not working successfully when existing msisdn is given.
MODIFY7:PRETUPS-6521|#MODIFY|To check if Modify channel user API is not working successfully when invalid appointment is given.
MODIFY8:PRETUPS-6522|#MODIFY|To check if Modify channel user API is not working successfully when invalid ip address is given.
MODIFY9:PRETUPS-6523|#MODIFY|To check if Modify channel user API is not working successfully when invalid payment type is given.
MODIFY10:PRETUPS-6524|#MODIFY|To check if Modify channel user API is not working successfully when invalid allowed days is given.
MODIFY11:PRETUPS-6525|#MODIFY|To check if Modify channel user API is not working successfully when invalid user name prefix is given.
MODIFY12:PRETUPS-6526|#MODIFY|To check if Modify channel user API is not working successfully when blank user name is given.
MODIFY13:PRETUPS-6527|#MODIFY|To check if Modify channel user API is not working successfully when blank short name is given.
MODIFY14:PRETUPS-6528|#MODIFY|To check if Modify channel user API is not working successfully when invalid emailid is given.
MODIFY15:PRETUPS-6529|#MODIFY|To check if Modify channel user API is not working successfully when invalid web password is passed.
MODIFY16:PRETUPS-6530|#MODIFY|To check if Modify channel user API is not working successfully when invalid suspend in is given.
MODIFY17:PRETUPS-6531|#MODIFY|To check if Modify channel user API is not working successfully when invalid suspend out is given.
MODIFY18:PRETUPS-6532|#MODIFY|To check if Modify channel user API is not working successfully when invalid document type is given.
MODIFY19:PRETUPS-6533|#MODIFY|To check if Modify channel user API is not working successfully when invalid grade code is given.
MODIFY20:PRETUPS-6534|#MODIFY|To check if Modify channel user API is not working successfully when invalid commission id is given.
MODIFY21:PRETUPS-6535|#MODIFY|To check if Modify channel user API is not working successfully when invalid transfer profile is given.

#OAUTHETICATION
OAUTHETICATION1:PRETUPS-0000|#OAUTHETICATION|To check if OAuthentication API is working successfully for user {0}.

#PREPAIDRECHARGE
RC1:PRETUPS-6536|#RC|To check if PREPAID RECHARGE API is working successfully for {0}.
RC2:PRETUPS-6536|#RC|To check if PREPAID RECHARGE API is not working successfully for {0} if token is invalid.
RC3:PRETUPS-6536|#RC|To check if PREPAID RECHARGE API is not working successfully for {0} if invalid selector.
RC4:PRETUPS-6536|#RC|To check if PREPAID RECHARGE API is not working successfully for {0} if invalid selector length.
RC5:PRETUPS-6536|#RC|To check if PREPAID RECHARGE API is not working successfully for {0} if invalid selector alphabets.
RC6:PRETUPS-6536|#RC|To check if PREPAID RECHARGE API is not working successfully for {0} if amount is invalid.
RC7:PRETUPS-6536|#RC|To check if PREPAID RECHARGE API is not working successfully for {0} if amount is zero.

#C2SSUBSERVICESLIST
C2SSUBSERVICESLIST1:PRETUPS-6664|#C2S_SUBSERVICES_LIST|To check if C2S Subservices List API is working successfully for {0} with a valid service type : {1}.
C2SSUBSERVICESLIST2:PRETUPS-6665|#C2S_SUBSERVICES_LIST|To check if C2S Subservices List API is working successfully for {0} with service type code 'ALL'.

#POSTPAIDBILLPAYMENT
PPB1:PRETUPS-6536|#PPB|To check if POSTPAID BILL RECHARGE API is working successfully for {0}.
PPB2:PRETUPS-6536|#PPB|To check if POSTPAID BILL RECHARGE API is not working successfully for {0} if token is invalid.
PPB3:PRETUPS-6536|#PPB|To check if POSTPAID BILL RECHARGE API is not working successfully for {0} if invalid selector.
PPB4:PRETUPS-6536|#PPB|To check if POSTPAID BILL RECHARGE API is not working successfully for {0} if invalid selector length.
PPB5:PRETUPS-6536|#PPB|To check if POSTPAID BILL RECHARGE API is not working successfully for {0} if invalid selector alphabets.
PPB6:PRETUPS-6536|#PPB|To check if POSTPAID BILL RECHARGE API is not working successfully for {0} if amount is invalid.
PPB7:PRETUPS-6536|#PPB|To check if POSTPAID BILL RECHARGE API is not working successfully for {0} if amount is zero.

#GIFTRECHARGE
GRC1:PRETUPS-6536|#GRC|To check if GIFT RECHARGE API is working successfully for {0}.
GRC2:PRETUPS-6536|#GRC|To check if GIFT RECHARGE API is not working successfully for {0} if token is invalid.
GRC3:PRETUPS-6536|#GRC|To check if GIFT RECHARGE API is not working successfully for {0} if invalid selector.
GRC4:PRETUPS-6536|#GRC|To check if GIFT RECHARGE API is not working successfully for {0} if invalid selector length.
GRC5:PRETUPS-6536|#GRC|To check if GIFT RECHARGE API is not working successfully for {0} if invalid selector alphabets.
GRC6:PRETUPS-6536|#GRC|To check if GIFT RECHARGE API is not working successfully for {0} if amount is invalid.
GRC7:PRETUPS-6536|#GRC|To check if GIFT RECHARGE API is not working successfully for {0} if amount is zero.

#USERPINMANAGEMENT
USERPINMANAGEMENT1:PRETUPS-0000|#USER_PIN_MANAGEMENT|To check if User Pin Management API is working successfully for {0} with loginid.
USERPINMANAGEMENT2:PRETUPS-0000|#USER_PIN_MANAGEMENT|To check if User Pin Management API is working successfully for {0} with msisdn.
USERPINMANAGEMENT3:PRETUPS-0000|#USER_PIN_MANAGEMENT|To check if User Pin Management API is working successfully for {0} with reset pin as N.
USERPINMANAGEMENT4:PRETUPS-0000|#USER_PIN_MANAGEMENT|To check if User Pin Management API is not working successfully for {0} with wrong network code.
USERPINMANAGEMENT5:PRETUPS-0000|#USER_PIN_MANAGEMENT|To check if User Pin Management API is not working successfully for {0} with wrong user.
USERPINMANAGEMENT6:PRETUPS-0000|#USER_PIN_MANAGEMENT|To check if User Pin Management API is not working successfully for {0} with empty remarks.
USERPINMANAGEMENT7:PRETUPS-0000|#USER_PIN_MANAGEMENT|To check if User Pin Management API is not working successfully for {0} with empty msisdn.


#INTERNETRECHARGE
INTRRC1:PRETUPS-6657|#INTRRC|To check if INTERNET RECHARGE API is working successfully for {0}.
INTRRC2:PRETUPS-6658|#INTRRC|To check if INTERNET RECHARGE API is not working successfully for {0} if token is invalid.
INTRRC3:PRETUPS-6659|#INTRRC|To check if INTERNET RECHARGE API is not working successfully for {0} if invalid selector length.
INTRRC4:PRETUPS-6660|#INTRRC|To check if INTERNET RECHARGE API is not working successfully for {0} if invalid selector alphabets.
INTRRC5:PRETUPS-6661|#INTRRC|To check if INTERNET RECHARGE API is not working successfully for {0} if amount is invalid.
INTRRC6:PRETUPS-6662|#INTRRC|To check if INTERNET RECHARGE API is not working successfully for {0} if msisdn length is invalid.

#EVDRECHARGE
EVD1:PRETUPS-6651|#EVD|To check if EVD RECHARGE API is working successfully for {0}.
EVD2:PRETUPS-6652|#EVD|To check if EVD RECHARGE API is not working successfully for {0} if token is invalid.
EVD3:PRETUPS-6653|#EVD|To check if EVD RECHARGE API is not working successfully for {0} if invalid selector length.
EVD4:PRETUPS-6654|#EVD|To check if EVD RECHARGE API is not working successfully for {0} if invalid selector alphabets.
EVD5:PRETUPS-6655|#EVD|To check if EVD RECHARGE API is not working successfully for {0} if amount is invalid.
EVD6:PRETUPS-6656|#EVD|To check if EVD RECHARGE API is not working successfully for {0} if msisdn length is invalid.

#FIXEDRECHARGE
FIXEDRC1:PRETUPS-6671|#FRC|To check if FIXED RECHARGE API is working successfully for {0}.
FIXEDRC2:PRETUPS-6672|#FRC|To check if FIXED RECHARGE API is not working successfully for {0} if token is invalid.
FIXEDRC3:PRETUPS-6676|#FRC|To check if FIXED RECHARGE API is not working successfully for {0} if msisdn length is invalid.
FIXEDRC4:PRETUPS-6673|#FRC|To check if FIXED RECHARGE API is not working successfully for {0} if invalid selector length.
FIXEDRC5:PRETUPS-6674|#FRC|To check if FIXED RECHARGE API is not working successfully for {0} if invalid selector alphabets.
FIXEDRC6:PRETUPS-6675|#FRC|To check if FIXED RECHARGE API is not working successfully for {0} if amount is invalid.

#C2CDOWNLOADTEMPLATE
C2CTEMP1:PRETUPS-6914|#C2CTEMP|To check if C2C DOWNLOAD TEMPLATE API is working successfully for {0}.
C2CTEMP2:PRETUPS-6915|#C2CTEMP|To check if C2C DOWNLOAD TEMPLATE API is not working successfully for {0} if token is invalid.
C2CTEMP3:PRETUPS-6916|#C2CTEMP|To check if C2C DOWNLOAD TEMPLATE API is  working successfully for {0} if transfer type is WITHDRAW.
C2CTEMP4:PRETUPS-6917|#C2CTEMP|To check if C2C DOWNLOAD TEMPLATE API is not working successfully for {0} if invalid transfer type.

#C2FILEDOWNLOAD
C2CDL1:PRETUPS-6956|#C2CTEMP|To check if C2C DOWNLOAD FILE API is working successfully for {0}.
C2CDL2:PRETUPS-6957|#C2CTEMP|To check if C2C DOWNLOAD FILE API is not working successfully for {0} if txn id is invalid.
C2CDL3:PRETUPS-6958|#C2CTEMP|To check if C2C DOWNLOAD FILE API is  working successfully for {0} if txn id is valid but no file is uploaded.



#C2S Revamp Recharge
PREVAMPC2STRF1:PRETUPS-317|C2S Recharge|To verify that {0} category user is able to perform C2S Recharge.
PREVAMPC2STRF2:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if subscriber Amount is blank.
PREVAMPC2STRF3:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if Amount is alphanumeric.
PREVAMPC2STRF4:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if Amount is negative.
PREVAMPC2STRF5:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if Amount is Zero.
PREVAMPC2STRF6:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if blank PIN is given.
PREVAMPC2STRF7:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if invalid PIN is given.
PREVAMPC2STRF8:PRETUPS-000|C2S Recharge|To verify that {0} is able to close EnterPIN Popup in Customer Recharge through WEB.
PREVAMPC2STRF9:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if subscriber MSISDN is blank.
PREVAMPC2STRF10:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if subscriber MSISDN is invalid.
PREVAMPC2STRF11:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if subscriber MSISDN is Alphanumeric
PREVAMPC2STRF12:PRETUPS-000|C2S Recharge|To verify that fields are reset while performing C2S Transfer by {0} .
PREVAMPC2STRF13:PRETUPS-000|C2S Recharge|To verify that Copy button is working while performing C2S Transfer by {0} .
PREVAMPC2STRF14:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if Recharge Subservice is not selected.
PREVAMPC2STRF15:PRETUPS-000|C2S Recharge|To verify that Print button is working while performing C2S Transfer by {0} .



#Revamp PostPaid BillPayment
PREVAMPPOSTPAID1:PRETUPS-000|Postpaid Recharge|To verify that {0} category user is able to perform PPB Postpaid Recharge.
PREVAMPPOSTPAID2:PRETUPS-000|Postpaid Recharge|To verify that {0} is not able to perform Postpaid Recharge through WEB if subscriber Amount is blank.
PREVAMPPOSTPAID3:PRETUPS-000|Postpaid Recharge|To verify that {0} is not able to perform Postpaid Recharge through WEB if Amount is alphanumeric.
PREVAMPPOSTPAID4:PRETUPS-000|Postpaid Recharge|To verify that {0} is not able to perform Postpaid Recharge through WEB if Amount is negative.
PREVAMPPOSTPAID5:PRETUPS-000|Postpaid Recharge|To verify that {0} is not able to perform Postpaid Recharge through WEB if Amount is Zero.
PREVAMPPOSTPAID6:PRETUPS-000|Postpaid Recharge|To verify that {0} is not able to perform Postpaid Recharge through WEB if blank PIN is given.
PREVAMPPOSTPAID7:PRETUPS-000|Postpaid Recharge|To verify that {0} is not able to perform Postpaid Recharge through WEB if invalid PIN is given.
PREVAMPPOSTPAID8:PRETUPS-000|Postpaid Recharge|To verify that {0} is able to close EnterPIN Popup in Postpaid Recharge through WEB.
PREVAMPPOSTPAID9:PRETUPS-000|Postpaid Recharge|To verify that {0} is not able to perform Postpaid Recharge through WEB if subscriber MSISDN is blank.
PREVAMPPOSTPAID10:PRETUPS-000|Postpaid Recharge|To verify that {0} is not able to perform Postpaid Recharge through WEB if subscriber MSISDN is invalid.
PREVAMPPOSTPAID11:PRETUPS-000|Postpaid Recharge|To verify that {0} is not able to perform Postpaid Recharge through WEB if subscriber MSISDN is Alphanumeric
PREVAMPPOSTPAID12:PRETUPS-000|Postpaid Recharge|To verify that fields are reset while performing Postpaid by {0}.
PREVAMPPOSTPAID13:PRETUPS-000|Postpaid Recharge|To verify that Copy button is working while performing Postpaid Recharge by {0}.
PREVAMPPOSTPAID14:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if Recharge Subservice is not selected.
PREVAMPPOSTPAID15:PRETUPS-000|C2S Recharge|To verify that Print button is working while performing C2S Transfer by {0}.



#Revamp Gift Recharge
PREVAMPGIFTRECHARGE1:PRETUPS-317,PRETUPS-503,PRETUPS-402|GIFT Recharge|To verify that {0} category user is able to perform C2S Gift Recharge.
PREVAMPGIFTRECHARGE2:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if subscriber Amount is blank.
PREVAMPGIFTRECHARGE3:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Amount is alphanumeric.
PREVAMPGIFTRECHARGE4:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Amount is negative.
PREVAMPGIFTRECHARGE5:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Amount is Zero.
PREVAMPGIFTRECHARGE6:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if blank PIN is given.
PREVAMPGIFTRECHARGE7:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Invalid PIN is given.
PREVAMPGIFTRECHARGE8:PRETUPS-000|GIFT Recharge|To verify that {0} is able to close EnterPIN Popup in Gift Customer Recharge through WEB.
PREVAMPGIFTRECHARGE9:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if subscriber MSISDN is blank.
PREVAMPGIFTRECHARGE10:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if subscriber MSISDN is invalid.
PREVAMPGIFTRECHARGE11:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if subscriber MSISDN is Alphanumeric
PREVAMPGIFTRECHARGE12:PRETUPS-000|GIFT Recharge|To verify that fields are reset while performing C2S Gift Recharge by {0}.
PREVAMPGIFTRECHARGE13:PRETUPS-000|GIFT Recharge|To verify that Copy button is working while performing C2S Gift Recharge by {0}.
PREVAMPGIFTRECHARGE14:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Gifter Msisdn is blank.
PREVAMPGIFTRECHARGE15:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Gifter Name is blank.
PREVAMPGIFTRECHARGE16:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Customer Recharge through WEB if Recharge Subservice is not selected.
PREVAMPGIFTRECHARGE17:PRETUPS-000|GIFT Recharge|To verify that Print button is working while performing C2S Transfer by {0}.
PREVAMPGIFTRECHARGE18:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Gifter Name is Numeric.
PREVAMPGIFTRECHARGE19:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Gifter Msisdn is Alphabetical.
PREVAMPGIFTRECHARGE20:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Gifter Name has Special Characters
PREVAMPGIFTRECHARGE21:PRETUPS-000|GIFT Recharge|To verify that {0} is not able to perform Gift Customer Recharge through WEB if Gifter Msisdn has Special Characters.



#Internet Revamp recharge
PREVAMPINTERNETRECHARGE1:PRETUPS-317|Internet Recharge|To verify that {0} category user is able to perform C2S Recharge.
PREVAMPINTERNETRECHARGE2:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if subscriber Amount is blank.
PREVAMPINTERNETRECHARGE3:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if Amount is alphanumeric.
PREVAMPINTERNETRECHARGE4:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if Amount is negative.
PREVAMPINTERNETRECHARGE5:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if Amount is Zero.
PREVAMPINTERNETRECHARGE6:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if blank PIN is given.
PREVAMPINTERNETRECHARGE7:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if Invalid PIN is given.
PREVAMPINTERNETRECHARGE8:PRETUPS-000|C2S Recharge|To verify that {0} is able to close EnterPIN Popup in Internet Recharge through WEB.
PREVAMPINTERNETRECHARGE9:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if subscriber MSISDN is blank.
PREVAMPINTERNETRECHARGE10:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if subscriber MSISDN is invalid.
PREVAMPINTERNETRECHARGE11:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if subscriber MSISDN is Alphanumeric
PREVAMPINTERNETRECHARGE12:PRETUPS-000|C2S Recharge|To verify that fields are reset while performing Internet Recharge by {0}.
PREVAMPINTERNETRECHARGE13:PRETUPS-000|C2S Recharge|To verify that Copy button is working while performing Internet Recharge by {0}.
PREVAMPINTERNETRECHARGE14:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform Internet Recharge through WEB if Recharge Subservice is not selected.
PREVAMPINTERNETRECHARGE15:PRETUPS-000|C2S Recharge|To verify that Print button is working while performing Internet Recharge by {0}.

#Revamp FixLine Recharge
PREVAMPFIXLINERECHARGE1:PRETUPS-317|C2S Recharge|To verify that {0} category user is able to perform FixLine Recharge.
PREVAMPFIXLINERECHARGE2:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if subscriber Amount is blank.
PREVAMPFIXLINERECHARGE3:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if Amount is alphanumeric.
PREVAMPFIXLINERECHARGE4:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if Amount is negative.
PREVAMPFIXLINERECHARGE5:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if Amount is Zero.
PREVAMPFIXLINERECHARGE6:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if blank PIN is given.
PREVAMPFIXLINERECHARGE7:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if Invalid PIN is given.
PREVAMPFIXLINERECHARGE8:PRETUPS-000|C2S Recharge|To verify that {0} is able to close EnterPIN Popup in FixLine Recharge through WEB.
PREVAMPFIXLINERECHARGE9:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if subscriber MSISDN is blank.
PREVAMPFIXLINERECHARGE10:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if subscriber MSISDN is invalid.
PREVAMPFIXLINERECHARGE11:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if subscriber MSISDN is Alphanumeric
PREVAMPFIXLINERECHARGE12:PRETUPS-000|C2S Recharge|To verify that fields are reset while performing FixLine Recharge by {0}.
PREVAMPFIXLINERECHARGE13:PRETUPS-000|C2S Recharge|To verify that Copy button is working while performing FixLine Recharge by {0}.
PREVAMPFIXLINERECHARGE14:PRETUPS-000|C2S Recharge|To verify that {0} is not able to perform FixLine Recharge through WEB if Recharge Subservice is not selected.
PREVAMPFIXLINERECHARGE15:PRETUPS-000|C2S Recharge|To verify that Print button is working while performing FixLine Recharge by {0}.


#Revamp Channel To Channel Bulk Transfer
PREVAMPC2CTRF1:PRETUPS-317|C2C Bulk Transfer|To verify C2C Bulk Transfer from {0} to {1} is successful.
PREVAMPC2CTRF2:PRETUPS-317|C2C Bulk Transfer|To verify C2C Bulk Transfer from {0} to {1} is not successful with blank Category.
PREVAMPC2CTRF3:PRETUPS-317|C2C Bulk Transfer|To verify C2C Bulk Transfer from {0} to {1} is not successful with blank Batch Name.
PREVAMPC2CTRF4:PRETUPS-317|C2C Bulk Transfer|To verify C2C Bulk Transfer from {0} to {1} is not successful without uploading Template File.
PREVAMPC2CTRF5:PRETUPS-317|C2C Bulk Transfer|To verify reset button is working while performing C2C Bulk Transfer from {0} to {1}.
PREVAMPC2CTRF6:PRETUPS-317|C2C Bulk Transfer|To verify {0} is not able to download User List without category while performing C2C Bulk Transfer.
PREVAMPC2CTRF7:PRETUPS-317|C2C Bulk Transfer|To verify {0} is able to download Template File without category while performing C2C Bulk Transfer.
PREVAMPC2CTRF8:PRETUPS-317|C2C Bulk Transfer|To verify C2C Bulk Transfer from {0} to {1} is not successful without uploading Correct Template File Type.
PREVAMPC2CTRF9:PRETUPS-317|C2C Bulk Transfer|To verify C2C Bulk Transfer from {0} to {1} is not successful with Blank PIN.
PREVAMPC2CTRF10:PRETUPS-317|C2C Bulk Transfer|To verify C2C Bulk Transfer from {0} to {1} is not successful with Blank Excel Uploaded.
PREVAMPC2CTRF11:PRETUPS-317|C2C Bulk Transfer|To verify C2C Bulk Transfer from {0} to {1} is not successful with Invalid Receiver MSISDN.
PREVAMPC2CTRF12:PRETUPS-317|C2C Bulk Transfer|To verify Error is displayed while uploading Invalid Header File in C2C Bulk Transfer from {0} to {1}.
PREVAMPC2CTRF13:PRETUPS-317|C2C Bulk Transfer|To verify Error is displayed while uploading Invalid Data File in C2C Bulk Transfer from {0} to {1}.
PREVAMPC2CTRF14:PRETUPS-317|C2C Bulk Transfer|To verify Error is displayed while uploading Blank Data File with Headers in C2C Bulk Transfer from {0} to {1} .


#Revamp Channel To Channel Bulk Withdraw
PREVAMPC2CWDW1:PRETUPS-317|C2C Bulk Withdraw|To verify C2C Bulk Withdraw from {0} to {1} is successful.
PREVAMPC2CWDW2:PRETUPS-317|C2C Bulk Withdraw|To verify C2C Bulk Withdraw from {0} to {1} is not successful with blank Category.
PREVAMPC2CWDW3:PRETUPS-317|C2C Bulk Withdraw|To verify C2C Bulk Withdraw from {0} to {1} is not successful with blank Batch Name.
PREVAMPC2CWDW4:PRETUPS-317|C2C Bulk Withdraw|To verify C2C Bulk Withdraw from {0} to {1} is not successful without uploading Template File.
PREVAMPC2CWDW5:PRETUPS-317|C2C Bulk Withdraw|To verify reset button is working while performing C2C Bulk Withdraw from {0} to {1}.
PREVAMPC2CWDW6:PRETUPS-317|C2C Bulk Withdraw|To verify {0} is not able to download User List without category to {1} while performing C2C Bulk Withdraw.
PREVAMPC2CWDW7:PRETUPS-317|C2C Bulk Withdraw|To verify {0} is able to download Template File without category to {1} while performing C2C Bulk Withdraw.
PREVAMPC2CWDW8:PRETUPS-317|C2C Bulk Withdraw|To verify C2C Bulk Withdraw from {0} to {1} is not successful without uploading Correct File Type.
PREVAMPC2CWDW9:PRETUPS-317|C2C Bulk Withdraw|To verify C2C Bulk Withdrawal from {0} to {1} is not successful with Blank PIN.
PREVAMPC2CWDW10:PRETUPS-317|C2C Bulk Withdraw|To verify C2C Bulk Withdrawal from {0} to {1} is not successful with Blank Excel Uploaded.
PREVAMPC2CWDW11:PRETUPS-317|C2C Bulk Withdraw|To verify C2C Bulk Withdrawal from {0} to {1} is not successful with Invalid Receiver MSISDN.
PREVAMPC2CWDW12:PRETUPS-317|C2C Bulk Withdraw|To verify Error is displayed while uploading Invalid Header File in C2C Bulk Withdrawal from {0} to {1} .
PREVAMPC2CWDW13:PRETUPS-317|C2C Bulk Withdraw|To verify Error is displayed while uploading Invalid Data File in C2C Bulk Withdrawal from {0} to {1} .
PREVAMPC2CWDW14:PRETUPS-317|C2C Bulk Withdraw|To verify Error is displayed while uploading Blank Data File with Headers in C2C Bulk Withdrawal from {0} to {1} .


#C2S Bulk Revamp Recharge
PREVAMPC2SBRC1:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is able to perform C2S Bulk Recharge for Daily.
PREVAMPC2SBRC2:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is able to perform C2S Bulk Recharge for Weekly.
PREVAMPC2SBRC3:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is able to perform C2S Bulk Recharge for Monthly.
PREVAMPC2SBRC4:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Invalid MSISDN.
PREVAMPC2SBRC5:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Negative Amount.
PREVAMPC2SBRC6:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Zero Amount.
PREVAMPC2SBRC7:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Blank Amount.
PREVAMPC2SBRC8:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Blank MSISDN.
PREVAMPC2SBRC9:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Blank Sub Service.
PREVAMPC2SBRC10:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Blank Language Code.
PREVAMPC2SBRC11:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Invalid Language Code.
PREVAMPC2SBRC12:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Invalid Sub Service.
PREVAMPC2SBRC13:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Alphanumeric Amount.
PREVAMPC2SBRC14:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Alphanumeric MSISDN.
PREVAMPC2SBRC15:PRETUPS-317|C2S Bulk Recharge|To verify that Reset Button is working while performing C2S Bulk Recharge with {0} user.
PREVAMPC2SBRC16:PRETUPS-000|C2S Bulk Recharge|To verify that {0} is not able to perform C2S Bulk Recharge through WEB if Invalid PIN is entered.
PREVAMPC2SBRC17:PRETUPS-000|C2S Bulk Recharge|To verify that {0} is not able to perform C2S Bulk Recharge through WEB if blank PIN is entered.
PREVAMPC2SBRC18:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Blank Schedule Date.
PREVAMPC2SBRC19:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Blank Occurrence.
PREVAMPC2SBRC20:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Blank Number of Iterations.
PREVAMPC2SBRC21:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge without Uploading Template File.
PREVAMPC2SBRC22:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Template File without data.
PREVAMPC2SBRC23:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Blank Template File without headers.
PREVAMPC2SBRC24:PRETUPS-317|C2S Bulk Recharge|To verify that {0} category user is not able to perform C2S Bulk Recharge with Invalid Template File.
PREVAMPC2SBRC25:PRETUPS-317|C2S Bulk Recharge|To verify that Copy button is working while performing C2S Bulk Recharge by {0} .




#Internet Recharge Bulk Revamp
PREVAMPINTBRC1:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is able to perform Internet Bulk Recharge for Daily.
PREVAMPINTBRC2:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is able to perform Internet Bulk Recharge for Weekly.
PREVAMPINTBRC3:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is able to perform Internet Bulk Recharge for Monthly.
PREVAMPINTBRC4:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Invalid MSISDN.
PREVAMPINTBRC5:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Negative Amount.
PREVAMPINTBRC6:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Zero Amount.
PREVAMPINTBRC7:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Blank Amount.
PREVAMPINTBRC8:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Blank MSISDN.
PREVAMPINTBRC9:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Blank Sub Service.
PREVAMPINTBRC10:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Blank Notification MSISDN.
PREVAMPINTBRC11:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Invalid Notification MSISDN.
PREVAMPINTBRC12:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Invalid Sub Service.
PREVAMPINTBRC13:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Alphanumeric Amount.
PREVAMPINTBRC14:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Alphanumeric MSISDN.
PREVAMPINTBRC15:PRETUPS-317|Internet Recharge bulk|To verify that Reset Button is working while performing Internet Recharge bulk with {0} user.
PREVAMPINTBRC16:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Invalid PIN.
PREVAMPINTBRC17:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Bulk Recharge with Blank PIN.
PREVAMPINTBRC18:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Recharge bulk with Blank Schedule Date.
PREVAMPINTBRC19:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Recharge bulk with Blank Occurrence.
PREVAMPINTBRC20:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Recharge bulk with Blank Number of Iterations.
PREVAMPINTBRC21:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Recharge bulk without Uploading Template File.
PREVAMPINTBRC22:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Recharge bulk with Template File without data.
PREVAMPINTBRC23:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Recharge bulk with Blank Template File without headers.
PREVAMPINTBRC24:PRETUPS-317|Internet Recharge bulk|To verify that {0} category user is not able to perform Internet Recharge bulk with Invalid Template File.
PREVAMPINTBRC25:PRETUPS-317|Internet Recharge Bulk|To verify that Copy button is working while performing Internet Recharge bulk by {0} .



#Gift Recharge Bulk Revamp
PREVAMPGFTBRC1:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is able to perform Gift Bulk Recharge for Daily.
PREVAMPGFTBRC2:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is able to perform Gift Bulk Recharge for Weekly.
PREVAMPGFTBRC3:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is able to perform Gift Bulk Recharge for Monthly.
PREVAMPGFTBRC4:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Invalid MSISDN.
PREVAMPGFTBRC5:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Negative Amount.
PREVAMPGFTBRC6:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Zero Amount.
PREVAMPGFTBRC7:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Blank Amount.
PREVAMPGFTBRC8:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Blank MSISDN.
PREVAMPGFTBRC9:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Blank Sub Service.
PREVAMPGFTBRC10:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Blank Language Code.
PREVAMPGFTBRC11:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Invalid Language Code.
PREVAMPGFTBRC12:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Invalid Sub Service.
PREVAMPGFTBRC13:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Blank Gifter MSISDN.
PREVAMPGFTBRC14:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Blank Gifter Name.
PREVAMPGFTBRC15:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Numeric Gifter Name.
PREVAMPGFTBRC16:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Alphabetic Gifter MSISDN.
PREVAMPGFTBRC17:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Alphanumeric Amount.
PREVAMPGFTBRC18:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Alphanumeric MSISDN.
PREVAMPGFTBRC19:PRETUPS-317|Gift Recharge bulk|To verify that Reset Button is working while performing Gift Bulk Recharge with {0} user.
PREVAMPGFTBRC20:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Invalid PIN.
PREVAMPGFTBRC21:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Bulk Recharge with Blank PIN.
PREVAMPGFTBRC22:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Recharge bulk with Blank Schedule Date.
PREVAMPGFTBRC23:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Recharge bulk with Blank Occurrence.
PREVAMPGFTBRC24:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Recharge bulk with Blank Number of Iterations.
PREVAMPGFTBRC25:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Recharge bulk without Uploading Template File.
PREVAMPGFTBRC26:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Recharge bulk with Template File without data.
PREVAMPGFTBRC27:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Recharge bulk with Blank Template File without headers.
PREVAMPGFTBRC28:PRETUPS-317|Gift Recharge bulk|To verify that {0} category user is not able to perform Gift Recharge bulk with Invalid Template File.
PREVAMPGFTBRC29:PRETUPS-317|Gift Recharge Bulk|To verify that Copy button is working while performing Gift Recharge bulk by {0} .

#O2C Transfer Revamped Channel Admin
PREVAMPO2CTRF1:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with MSISDN.
PREVAMPO2CTRF2:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2}.
PREVAMPO2CTRF3:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Approval 2 for category {0} with parent category {1}, product type {2}.
PREVAMPO2CTRF4:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Approval 3 for category {0} with parent category {1}, product type {2}.
PREVAMPO2CTRF5:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Login ID.
PREVAMPO2CTRF6:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with User Name.
PREVAMPO2CTRF7:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Alphanumeric MSISDN.
PREVAMPO2CTRF8:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Blank MSISDN.
PREVAMPO2CTRF9:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Invalid MSISDN.
PREVAMPO2CTRF10:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Blank Login ID.
PREVAMPO2CTRF11:PRETUPS-317|O2C Transfer|To verify that Reset Button is working while performing O2CT initiation for category {0} with parent category {1}, product type {2}.
PREVAMPO2CTRF12:PRETUPS-317|O2C Transfer|To verify that Search By Reset Button is working while performing O2CT initiation for category {0} with parent category {1}, product type {2}.
PREVAMPO2CTRF13:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Alphabetic Reference Number.
PREVAMPO2CTRF14:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Alphabetic Payment Instrument Number.
PREVAMPO2CTRF15:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Blank Amount.
PREVAMPO2CTRF16:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Blank Remarks.
PREVAMPO2CTRF17:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Negative Amount.
PREVAMPO2CTRF18:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Blank PIN.
PREVAMPO2CTRF19:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Invalid PIN.
PREVAMPO2CTRF20:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Invalid Login ID.
PREVAMPO2CTRF21:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Reject 1 for category {0} with parent category {1}, product type {2}.
PREVAMPO2CTRF22:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Reject 2 for category {0} with parent category {1}, product type {2}.
PREVAMPO2CTRF23:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Reject 3 for category {0} with parent category {1}, product type {2}.
PREVAMPO2CTRF24:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2} with duplicate Enternal Transaction Number.
PREVAMPO2CTRF25:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2} with Invalid Search By.
PREVAMPO2CTRF26:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2} with MSISDN in Search By.
PREVAMPO2CTRF27:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2} with User Name in Search By.
PREVAMPO2CTRF28:PRETUPS-317|O2C Transfer|To verify that Operator user is able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2} with Current Date in Search By.
PREVAMPO2CTRF29:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2} with Blank Enternal Transaction Number.
PREVAMPO2CTRF30:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2} with Blank Enternal Transaction Date.
PREVAMPO2CTRF31:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2} with Alphanumeric Enternal Transaction Number.
PREVAMPO2CTRF32:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform Operator to channel Transfer Approval 1 for category {0} with parent category {1}, product type {2} with Alphanumeric Reference Number.

#O2C Transfer Revamped Channel User
PREVAMPO2CTRFCU1:PRETUPS-317|O2C Transfer|To verify that Channel user is able to perform O2CT initiation by category {0} with parent category {1}, product type {2} with MSISDN.
PREVAMPO2CTRFCU2:PRETUPS-317|O2C Transfer|To verify that Reset Button is working while performing O2CT initiation for category {0} with parent category {1}, product type {2}.
PREVAMPO2CTRFCU3:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Alphabetic Reference Number.
PREVAMPO2CTRFCU4:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Alphabetic Payment Instrument Number.
PREVAMPO2CTRFCU5:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Blank Amount.
PREVAMPO2CTRFCU6:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Blank Remarks.
PREVAMPO2CTRFCU7:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Negative Amount.
PREVAMPO2CTRFCU8:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Alphanumeric Amount.
PREVAMPO2CTRFCU9:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Blank PIN.
PREVAMPO2CTRFCU10:PRETUPS-317|O2C Transfer|To verify that Operator user is not able to perform O2CT initiation for category {0} with parent category {1}, product type {2} with Invalid PIN.



#DVD Recharge Revamped
PREVAMPDVDRC1:PRETUPS-317|DVD RECHARGE|To verify {0} is able to perform DVD Recharge.
PREVAMPDVDRC2:PRETUPS-317|DVD RECHARGE|To verify that Copy button is working by {0} while performing DVD Recharge.
PREVAMPDVDRC3:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Invalid PIN.
PREVAMPDVDRC4:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Blank PIN.
PREVAMPDVDRC5:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Blank MSISDN.
PREVAMPDVDRC6:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Blank Quantity.
PREVAMPDVDRC7:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Blank Voucher Type.
PREVAMPDVDRC8:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Invalid MSISDN.
PREVAMPDVDRC9:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Negative Amount.
PREVAMPDVDRC10:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Alphanumeric MSISDN.
PREVAMPDVDRC11:PRETUPS-317|DVD RECHARGE|To verify {0} is able to perform DVD Recharge with adding additional slots.
PREVAMPDVDRC12:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Blank Denomination.
PREVAMPDVDRC13:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Blank Voucher Profile.
PREVAMPDVDRC14:PRETUPS-317|DVD RECHARGE|To verify {0} is not able to perform DVD Recharge by entering Zero Quantity.
PREVAMPDVDRC15:PRETUPS-317|DVD RECHARGE|To verify {0} is able to delete additional slots while performing DVD Recharge.


#DVD Bulk Recharge Revamped
PREVAMPDVDBRC1:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is able to perform DVD Bulk Recharge.
PREVAMPDVDBRC2:PRETUPS-317|DVD BULK RECHARGE|To verify that fields are reset while performing DVD Bulk Recharge by {0} .
PREVAMPDVDBRC3:PRETUPS-317|DVD BULK RECHARGE|To verify that Copy button is working by {0} while performing DVD Bulk Recharge.
PREVAMPDVDBRC4:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Invalid MSISDN.
PREVAMPDVDBRC5:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Negative Quantity
PREVAMPDVDBRC6:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Blank Quantity.
PREVAMPDVDBRC7:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Blank Voucher Type Code.
PREVAMPDVDBRC8:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Blank PIN.
PREVAMPDVDBRC9:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Invalid PIN.
PREVAMPDVDBRC10:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Blank Segment Code.
PREVAMPDVDBRC11:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Blank Denomination.
PREVAMPDVDBRC12:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Blank Voucher Profile ID.
PREVAMPDVDBRC13:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge by entering Zero Quantity.
PREVAMPDVDBRC14:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge with Invalid Template File.
PREVAMPDVDBRC15:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge with Template File without data.
PREVAMPDVDBRC16:PRETUPS-317|DVD BULK RECHARGE|To verify {0} is not able to perform DVD Bulk Recharge with Blank Template File without headers.



#EVD Recharge
PREVAMPEVDRCH1:PRETUPS-317|EVD RECHARGE|To verify {0} is able to perform EVD Recharge.
PREVAMPEVDRCH2:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if subscriber Amount is blank.
PREVAMPEVDRCH3:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if Amount is alphanumeric.
PREVAMPEVDRCH4:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if Amount is negative.
PREVAMPEVDRCH5:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if Amount is Zero.
PREVAMPEVDRCH6:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if blank PIN is given.
PREVAMPEVDRCH7:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if invalid PIN is given.
PREVAMPEVDRCH8:PRETUPS-000|EVD RECHARGE|To verify that {0} is able to close EnterPIN Popup in EVD Recharge through WEB.
PREVAMPEVDRCH9:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if subscriber MSISDN is blank.
PREVAMPEVDRCH10:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if subscriber MSISDN is invalid.
PREVAMPEVDRCH11:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if subscriber MSISDN is Alphanumeric
PREVAMPEVDRCH12:PRETUPS-000|EVD RECHARGE|To verify that fields are reset by {0} while performing EVD Recharge.
PREVAMPEVDRCH13:PRETUPS-000|EVD RECHARGE|To verify that Copy button by {0} is working while performing EVD Recharge.
PREVAMPEVDRCH14:PRETUPS-000|EVD RECHARGE|To verify that {0} is not able to perform EVD Recharge through WEB if Recharge Subservice is not selected.
PREVAMPEVDRCH15:PRETUPS-000|EVD RECHARGE|To verify that by {0} Print button is working while performing EVD Recharge .


#C2S GET MVD DENOMINATION
RESTC2SGTMVDDEN1::PRETUPS-0000|#C2S_Get_MVD_Denomination|To check if C2S GET MVD DENOMINATION - API  is working successfully for {0}.



#MVDRECHARGE
MVD1:PRETUPS-7949|#MVD|To check if MVD RECHARGE API is working for {0} successfully.
MVD2:PRETUPS-7950|#MVD|To check if MVD RECHARGE API is not working for {0} if MSISDN2 is blank.
MVD3:PRETUPS-7951|#MVD|To check if MVD RECHARGE API is not working for {0} if Network Code is blank.
MVD4:PRETUPS-7952|#MVD|To check if MVD RECHARGE API is not working for {0} if Network Code is invalid.
MVD5:PRETUPS-7953|#MVD|To check if MVD RECHARGE API is not working for {0} if pin is invalid.
MVD6:PRETUPS-7954|#MVD|To check if MVD RECHARGE API is not working for {0} if quantity is blank
MVD7:PRETUPS-7955|#MVD|To check if MVD RECHARGE API is not working for {0} if quantity is not numeric.
MVD8:PRETUPS-7956|#MVD|To check if MVD RECHARGE API is not working for {0} if  quantity range exceed max_voucher_quantity preference.
MVD9:PRETUPS-7957|#MVD|To check if MVD RECHARGE API is not working for {0} if amount is  blank.
MVD10:PRETUPS-7958|#MVD|To check if MVD RECHARGE API is not working for {0} if amount is not numeric.
#C2CTRFMULT
C2CST1:PRETUPS-0000|#C2CST|To check if C2C stock multiple API is working successfully  from {0} to {1} with msisdn.
C2CST2:PRETUPS-0000|#C2CST|To check if C2C stock multiple API is not working successfully from {0} to {1} with invalid token .
C2CST3:PRETUPS-0000|#C2CST|To check if C2C stock multiple API is not working successfully from {0} to {1} with invalid msisdn.
C2CST4:PRETUPS-0000|#C2CST|To check if C2C stock multiple API is not working successfully from {0} to {1} with blank receiver credentials.
C2CST5:PRETUPS-0000|#C2CST|To check if C2C stock multiple API is not working successfully from {0} to {1} with wrong loginId.
C2CST6:PRETUPS-0000|#C2CST|To check if C2C stock multiple API is not working successfully from {0} to {1} with wrong extcode.
C2CST7:PRETUPS-0000|#C2CST|To check if C2C stock multiple API is not working successfully from {0} to {1} with empty msisdn.

#REGEX
REGEX1:PRETUPS-0000|#REGEX1|To check if REGEX API is working successfully for {0}.
REGEX2:PRETUPS-0000|#REGEX2|To check if REGEX API is not working successfully for {0} with invalid token .
REGEX3:PRETUPS-0000|#REGEX3|To check if REGEX API is not working successfully for {0} with invalid language.
REGEX4:PRETUPS-0000|#REGEX3|To check if REGEX API is not working successfully for {0} with invalid country.
REGEX5:PRETUPS-0000|#REGEX3|To check if REGEX API is not working successfully for {0} with invalid locale.

#DVD
DVD1:PRETUPS-7867|#DVD|To check if DVD API is working successfully for {0}.
DVD2:PRETUPS-7868|#DVD|To check if DVD API is not working for {0} if receiver's msisdn does not exist in the network.
DVD3:PRETUPS-7869|#DVD|To check if DVD API is not working for {0} if Network Code is blank.
DVD4:PRETUPS-7870|#DVD|To check if DVD API is not working for {0} if Network Code is invalid.
DVD5:PRETUPS-7871|#DVD|To check if DVD API is not working for {0} if pin is invalid.
DVD6:PRETUPS-7872|#DVD|To check if DVD API is not working for {0} if voucher details is blank.
DVD7:PRETUPS-7873|#DVD|To check if DVD API is not working for {0} if voucher details is invalid.

#DownloadTemplateInternet
DTINTRC1:PRETUPS-7968|#DTINTRC1|To check if Internet Recharge Download Template API is working successfully for {0}.
DTINTRC2:PRETUPS-7969|#DTINTRC2|To check if Internet Recharge Download Template API is not working successfully for {0} if token is invalid.
#DownloadTemplateFixed
DTFIXRC1:PRETUPS-7962|#DTFIXRC1|To check if Fixed Recharge Download Template API is working successfully for {0}.
DTFIXRC2:PRETUPS-7963|#DTFIXRC2|To check if Fixed Recharge Download Template API is not working successfully for {0} if token is invalid.
#DownloadTemplateRC
DTCRC1:PRETUPS-7966|#DTCRC1|To check if Customer Recharge Download Template API is working successfully for {0}.
DTCRC2:PRETUPS-7967|#DTCRC2|To check if Customer Recharge Download Template API is not working successfully for {0} if token is invalid.
#DownloadDVDMasterSheet
DVDMS1:PRETUPS-0000|#DVDMS1|To check if Customer Recharge Download Template API is working successfully for {0}.
DVDMS2:PRETUPS-0000|#DVDMS2|To check if Customer Recharge Download Template API is not working successfully for {0} if token is invalid.

#DownloadTemplateGift
DTGRC1:PRETUPS-7964|#DTGRC1|To check if Gift Recharge Download Template API is working successfully for {0}.
DTGRC2:PRETUPS-7965|#DTGRC2|To check if Gift Recharge Download Template API is not working successfully for {0} if token is invalid.
#DownloadRestrictedListInternet
DRLINTRC1:PRETUPS-7973|#DRLINTRC1|To check if Internet Recharge Download Restricted User API is working successfully for {0}.
DRLINTRC2:PRETUPS-7974|#DRLINTRC2|To check if Internet Recharge Download Restricted User API is not working successfully for {0} if token is invalid.
#DownloadRestrictedListRC
DRLCRC1:PRETUPS-7971|#DRLCRC1|To check if Customer Recharge Download Restricted User API is working successfully.
DRLCRC2:PRETUPS-7972|#DRLCRC2|To check if Customer Recharge Download Restricted User API is not working successfully if token is invalid.

#C2CBatchUsersListDownload
C2CBULD1:PRETUPS-7971|#DRLCRC1|To check if C2C BATCH USERS LIST DOWNLOAD API is working successfully for {0}.
C2CBULD2:PRETUPS-7972|#DRLCRC2|To check if C2C BATCH USERS LIST DOWNLOAD API is not working successfully for {0} if category is invalid.
C2CBULD3:PRETUPS-7972|#DRLCRC2|To check if C2C BATCH USERS LIST DOWNLOAD API is not working successfully for {0} if operation type is invalid.

#O2CReturn
O2CRET1:PRETUPS-9815|#O2CRET1|To check if O2C Return API is working successfully for {0}.
O2CRET2:PRETUPS-0000|#O2CRET2|To check if O2C Return API is not working successfully for {0} if token is invalid.
O2CRET3:PRETUPS-9816|#O2CRET3|To check if O2C Return API is not working successfully for {0} if pin is invalid.
O2CRET4:PRETUPS-9817|#O2CRET4|To check if O2C Return API is not working successfully for {0} if remarks is empty.
O2CRET5:PRETUPS-9818|#O2CRET5|To check if O2C Return API is not working successfully for {0} if product is invalid.
O2CRET6:PRETUPS-9819|#O2CRET6|To check if O2C Return API is not working successfully for {0} if quantity is invalid(nagative).

#O2CInitiateByOpt
O2CINIOPT1:PRETUPS-9797|#O2CINIOPT1|To check if O2C Initiate By Opt API is working successfully for {0}.
O2CINIOPT2:PRETUPS-0000|#O2CINIOPT2|To check if O2C Initiate By Opt API is not working successfully for {0} if token is invalid.
O2CINIOPT3:PRETUPS-9798|#O2CINIOPT3|To check if O2C Initiate By Opt API is not working successfully for {0} if pin is invalid.
O2CINIOPT4:PRETUPS-9799|#O2CINIOPT4|To check if O2C Initiate By Opt API is not working successfully for {0} if remarks is empty.
O2CINIOPT5:PRETUPS-9800|#O2CINIOPT5|To check if O2C Initiate By Opt API is not working successfully for {0} if product is invalid.
O2CINIOPT6:PRETUPS-9801|#O2CINIOPT6|To check if O2C Initiate By Opt API is not working successfully for {0} if quantity is invalid(nagative).


#Revamp C2S EVD RECHARGE
PREVAMPEVDRC1:PRETUPS-317|EVD RECHARGE|To verify {0} is able to perform EVD Recharge.
PREVAMPEVDRC2:PRETUPS-317|EVD Recharge|To verify that {0} is not able to perform EVD Recharge through WEB if subscriber Denomination is blank.
PREVAMPEVDRC3:PRETUPS-317|EVD Recharge|To verify that {0} is not able to perform EVD Recharge through WEB if Denomination is alphanumeric.
PREVAMPEVDRC4:PRETUPS-317|EVD Recharge|To verify that {0} is not able to perform EVD Recharge through WEB if Denomination is negative.
PREVAMPEVDRC5:PRETUPS-317|EVD Recharge|To verify that {0} is not able to perform EVD Recharge through WEB if Denomination is Zero.
PREVAMPEVDRC6:PRETUPS-317|EVD Recharge|To verify that {0} is not able to perform EVD Recharge through WEB if blank PIN is given.
PREVAMPEVDRC7:PRETUPS-317|EVD Recharge|To verify that {0} is not able to perform EVD Recharge through WEB if invalid PIN is given.
PREVAMPEVDRC8:PRETUPS-317|EVD Recharge|To verify that {0} is able to close EnterPIN Popup in EVD Recharge through WEB.
PREVAMPEVDRC9:PRETUPS-317|EVD Recharge|To verify that {0} is not able to perform EVD Recharge through WEB if subscriber MSISDN is blank.
PREVAMPEVDRC10:PRETUPS-317|EVD Recharge|To verify that {0} is not able to perform EVD Recharge through WEB if subscriber MSISDN is invalid.
PREVAMPEVDRC11:PRETUPS-317|EVD Recharge|To verify that {0} is not able to perform EVD Recharge through WEB if subscriber MSISDN is Alphanumeric
PREVAMPEVDRC12:PRETUPS-317|EVD Recharge|To verify that {0} able to reset fields while performing EVD Recharge.
PREVAMPEVDRC13:PRETUPS-317|EVD Recharge|To verify that {0} able to Copy details of EVD Recharge.


#O2CInitiateByChannelUser
O2CINICU1:PRETUPS-9802|#O2CINICU1|To check if O2C Initiate By Channel User API is working successfully for {0}.
O2CINICU2:PRETUPS-0000|#O2CINICU2|To check if O2C Initiate By Channel User API is not working successfully for {0} if token is invalid.
O2CINICU3:PRETUPS-9803|#O2CINICU3|To check if O2C Initiate By Channel User API is not working successfully for {0} if pin is invalid.
O2CINICU4:PRETUPS-9804|#O2CINICU4|To check if O2C Initiate By Channel User API is not working successfully for {0} if remarks is empty.
O2CINICU5:PRETUPS-9805|#O2CINICU5|To check if O2C Initiate By Channel User API is not working successfully for {0} if product is invalid.
O2CINICU6:PRETUPS-9806|#O2CINICU6|To check if O2C Initiate By Channel User API is not working successfully for {0} if quantity is invalid(nagative).

#C2S Bulk Internet Recharge
C2SBulkInternet1:PRETUPS-6536|#C2SBI|To check if PREPAID BULK INTERNET RECHARGE API is working successfully for {0}.
C2SBulkInternet2:PRETUPS-6536|#C2SBI|To check if PREPAID BULK INTERNET RECHARGE API is not working successfully for {0} if Prior Date is Given.
C2SBulkInternet3:PRETUPS-6536|#C2SBI|To check if PREPAID BULK INTERNET RECHARGE API is not working successfully for {0} if Date is Given with Schedule Now 'ON'.
C2SBulkInternet4:PRETUPS-6536|#C2SBI|To check if PREPAID BULK INTERNET RECHARGE API is not working successfully for {0} if PIN provided is Wrong.
C2SBulkInternet5:PRETUPS-6536|#C2SBI|To check if PREPAID BULK INTERNET RECHARGE API is not working successfully for {0} if Schedule Date is Blank
C2SBulkInternet6:PRETUPS-6536|#C2SBI|To check if PREPAID BULK INTERNET RECHARGE API is not working successfully for {0} if PIN is Blank.

#C2S Bulk Gift Recharge
C2SBulkGiftRecharge1:PRETUPS-6536|#C2SBGR|To check if PREPAID BULK GIFT RECHARGE API is working successfully for {0}.
C2SBulkGiftRecharge2:PRETUPS-6536|#C2SBGR|To check if PREPAID BULK GIFT RECHARGE API is not working successfully for {0} if Prior Date is Given.
C2SBulkGiftRecharge3:PRETUPS-6536|#C2SBGR|To check if PREPAID BULK GIFT RECHARGE API is not working successfully for {0} if Date is Given with Schedule Now 'ON'.
C2SBulkGiftRecharge4:PRETUPS-6536|#C2SBGR|To check if PREPAID BULK GIFT RECHARGE API is not working successfully for {0} if PIN provided is Wrong.
C2SBulkGiftRecharge5:PRETUPS-6536|#C2SBGR|To check if PREPAID BULK GIFT RECHARGE API is not working successfully for {0} if Schedule Date is Blank.
C2SBulkGiftRecharge6:PRETUPS-6536|#C2SBGR|To check if PREPAID BULK GIFT RECHARGE API is not working successfully for {0} if PIN is Blank.

#C2S Bulk Prepaid Recharge
C2SBulkPrepaid1:PRETUPS-6536|#C2SBP|To check if PREPAID BULK PREPAID RECHARGE API is working successfully for {0}.
C2SBulkPrepaid2:PRETUPS-6536|#C2SBP|To check if PREPAID BULK PREPAID RECHARGE API is not working successfully for {0} if Prior Date is Given.
C2SBulkPrepaid3:PRETUPS-6536|#C2SBP|To check if PREPAID BULK PREPAID RECHARGE API is not working successfully for {0} if Date is Given with Schedule Now 'ON'.
C2SBulkPrepaid4:PRETUPS-6536|#C2SBP|To check if PREPAID BULK PREPAID RECHARGE API is not working successfully for {0} if PIN provided is Wrong.
C2SBulkPrepaid5:PRETUPS-6536|#C2SBP|To check if PREPAID BULK PREPAID RECHARGE API is not working successfully for {0} if Schedule Date is Blank
C2SBulkPrepaid6:PRETUPS-6536|#C2SBP|To check if PREPAID BULK PREPAID RECHARGE API is not working successfully for {0} if PIN is Blank.


#GET USER INFO
GETUSERINFO1:PRETUPS-0000|#GETUSERINFO1|To check if Get User Info API is working successfully from channel user {0}.
GETUSERINFO2:PRETUPS-0000|#GETUSERINFO2|To check if Get User Info API is not successfull from channel user {0} if network code is invalid.
GETUSERINFO3:PRETUPS-0000|#GETUSERINFO3|To check if Get User Info API is not successfull from channel user {0} if userId is invalid.

#GET SEARCH DETAILS
O2CSD01:PRETUPS-0000|#O2CSD01|To check if Get Search Details API is working successfully for Operator user {0} with LoginID.
O2CSD02:PRETUPS-0000|#O2CSD02|To check if Get Search Details API is working successfully for Operator user {0} with MSISDN.
O2CSD03:PRETUPS-0000|#O2CSD03|To check if Get Search Details API is working successfully for Operator user {0} with User Name.
O2CSD04:PRETUPS-0000|#O2CSD04|To check if Get Search Details API is not working successfully for Operator user {0} with Empty Identifier Value.


#O2CVOUCHERAPPLIST
O2CAPPLIST1:PRETUPS-10004|#O2CAPPLIST1|To check if O2C Approval List API is working successfully from {0}
O2CAPPLIST2:PRETUPS-10005|#O2CAPPLIST2|To check if O2C Approval List API is working successfully from {0} with mssidn
O2CAPPLIST3:PRETUPS-10006|#O2CAPPLIST3|To check if O2C Approval List API is not working successfully for {0} if invalid approval level is passed
O2CAPPLIST4:PRETUPS-10007|#O2CAPPLIST4|To check if O2C Approval List API is not working successfully for {0} if invalid geographical domain is passed
O2CAPPLIST5:PRETUPS-10008|#O2CAPPLIST5|To check if O2C Approval List API is not working successfully for {0} if invalid msisdn is passed

#GEOMAINCATEGORYDETAILS
RESTGDDC1:PRETUPS-7971|#RESTGDDC1|To check if GeoDomainCategory api is working fine for {0}.
RESTGDDC2:PRETUPS-7971|#RESTGDDC2|To check if GeoDomainCategory api is not working fine for {0} if invalid token is passed .
RESTGDDC3:PRETUPS-7972|#RESTGDDC3|To check if GeoDomainCategory api is not working fine for {0} if blank token is passed.

#DVDBULK
DVDBULK1:PRETUPS-9808|#DVDBULK|To check if DVDBULK API is working successfully for {0}.
DVDBULK2:PRETUPS-9809|#DVDBULK|To check if DVDBULK API is partial successfull for {0} if few row contains's invalid data in file.
DVDBULK3:PRETUPS-9810|#DVDBULK|To check if DVDBULK API is not working for {0} if file format of file uploaded and fileAttachment provided does not match.
DVDBULK4:PRETUPS-9811|#DVDBULK|To check if DVDBULK API is not working for {0} if voucher is not assigned to the user.
DVDBULK5:PRETUPS-9812|#DVDBULK|To check if DVDBULK API is not working for {0} if network code is invalid.
DVDBULK6:PRETUPS-9813|#DVDBULK|To check if DVDBULK API is not working for {0} if pin is invalid.
DVDBULK7:PRETUPS-9814|#DVDBULK|To check if DVDBULK API is not working for {0} if file name is already persent in the system.

#C2C Upload File
C2CUF1:PRETUPS-6536|C2C Upload File|To check if Upload file API is working successfully for {0} to {1}.
C2CUF2:PRETUPS-6536|C2C Upload File|To check if Upload file API is not working successfully for {0} to {1} if category is invalid.


#Category List
CL1:PRETUPS-6536|Category List|To check if category list api is working successfully for {0}.
CL2:PRETUPS-6536|Category List|To check if category list api is not working successfully for {0} if transfertype is invalid.
CL3:PRETUPS-6536|Category List|To check if category list api is not working successfully for {0} if network code is invalid.

#O2C Withdrawal
O2CWITHD1:PRETUPS-9826|#O2CWITHD1|To verify that o2c Withdrawal API is working successfully for {0}.
O2CWITHD2:PRETUPS-9826|#O2CWITHD2|To verify that o2c Withdrawal API is not working successfully for {0} when product is empty.
O2CWITHD3:PRETUPS-9826|#O2CWITHD3|To verify that o2c Withdrawal API is not working successfully for {0} when remarks is empty.
O2CWITHD4:PRETUPS-9826|#O2CWITHD4|To verify that o2c Withdrawal API is not working successfully for {0} when walletType is empty.
O2CWITHD5:PRETUPS-9826|#O2CWITHD5|To verify that o2c Withdrawal API is not working successfully for {0} when pin is invalid.
O2CWITHD6:PRETUPS-9826|#O2CWITHD6|To verify that o2c Withdrawal API is not working successfully for {0} when quantity is invalid(nagative).

#O2CStockApproval
O2CSA1:PRETUPS-9964|#O2CSA1|To check if O2C Stock Approval API is working successfully for {0}.
O2CSA2:PRETUPS-9964|#O2CSA2|To check if O2C Stock Approval API is working successfully for {0} at level 2.
O2CSA3:PRETUPS-9964|#O2CSA3|To check if O2C Stock Approval API is working successfully for {0} for rejection status.
O2CSA4:PRETUPS-9964|#O2CSA4|To check if O2C Stock Approval API is not working successfully for {0} with invalid status.
O2CSA5:PRETUPS-9964|#O2CSA5|To check if O2C Stock Approval API is not working successfully for {0} with invalid txnId.
O2CSA6:PRETUPS-9964|#O2CSA6|To check if O2C Stock Approval API is not working successfully for {0} with invalid msisdn.
O2CSA7:PRETUPS-9964|#O2CSA7|To check if O2C Stock Approval API is not working successfully for {0} with invalid status.
O2CSA8:PRETUPS-9964|#O2CSA8|To check if O2C Stock Approval API is not working successfully for {0} with invalid Payment Details.
O2CSA9:PRETUPS-9964|#O2CSA9|To check if O2C Stock Approval API is not working successfully for {0} with blank status.
O2CSA10:PRETUPS-9964|#O2CSA10|To check if O2C Stock Approval API is not working successfully for {0} with blank txnId.
O2CSA11:PRETUPS-9964|#O2CSA11|To check if O2C Stock Approval API is not working successfully for {0} with blank msisdn.

#O2CVoucherApproval
O2CVA1:PRETUPS-9964|#O2CVA1|To check if O2C Stock Approval API is working successfully for {0}.
O2CVA2:PRETUPS-9964|#O2VVA2|To check if O2C Stock Approval API is working successfully for {0} at level 2.
O2CVA3:PRETUPS-9964|#O2CVA3|To check if O2C Stock Approval API is working successfully for {0} for rejection status.
O2CVA4:PRETUPS-9964|#O2CVA4|To check if O2C Stock Approval API is not working successfully for {0} with blank UserId.
O2CVA5:PRETUPS-9964|#O2CVA5|To check if O2C Stock Approval API is not working successfully for {0} with blank externalTxnNum.
O2CVA6:PRETUPS-9964|#O2CVA6|To check if O2C Stock Approval API is not working successfully for {0} with invalid external transaction date.
O2CVA7:PRETUPS-9964|#O2CVA7|To check if O2C Stock Approval API is not working successfully for {0} with blank external transaction date.
O2CVA8:PRETUPS-9964|#O2CVA8|To check if O2C Stock Approval API is not working successfully for {0} with blank  transferDate.
O2CVA9:PRETUPS-9964|#O2CVA9|To check if O2C Stock Approval API is not working successfully for {0} with blank  transactionId.
O2CVA10:PRETUPS-9964|#O2CVA10|To check if O2C Stock Approval API is not working successfully for {0} with BLANK  approvalLevel.
O2CVA11:PRETUPS-9964|#O2CVA11|To check if O2C Stock Approval API is not working successfully for {0} with invalid approval level.


#O2CvouchertrfByOpt
O2CVOUCHERTRF1:PRETUPS-0000|#O2CVOUCHERTRF1|To check if O2C Voucher Transfer API is working successfully for {0}.
O2CVOUCHERTRF2:PRETUPS-0000|#O2CVOUCHERTRF2|To check O2C Voucher Transfer Api is not successful for {0} if Remarks is blank.
O2CVOUCHERTRF3:PRETUPS-0000|#O2CVOUCHERTRF3|To check O2C Voucher Transfer Api is not successful for {0} if payment date is blank.
O2CVOUCHERTRF4:PRETUPS-0000|#O2CVOUCHERTRF4|To check O2C Voucher Initiate Api is not successful for {0} if  payment type is blank.
O2CVOUCHERTRF5:PRETUPS-0000|#O2CVOUCHERTRF5|To check O2C Voucher Initiate Api is not successful for {0} if  payment type is other than cash and payment insrument number is blank.
O2CVOUCHERTRF6:PRETUPS-0000|#O2CVOUCHERTRF6|To check multiple errors are  displayed in  list  if there are multiple errors in a voucher details row for {0}.
O2CVOUCHERTRF7:PRETUPS-0000|#O2CVOUCHERTRF7|To check multiple errors are  displayed  if there are multiple errors in a voucher details rows for {0}.


#Revamp C2S MVD RECHARGE
PREVAMPMVDRC1:PRETUPS-317|MVD RECHARGE|To verify {0} is able to perform MVD Recharge.
PREVAMPMVDRC2:PRETUPS-317|MVD Recharge|To verify that {0} is not able to perform MVD Recharge through WEB if subscriber Denomination is blank.
PREVAMPMVDRC3:PRETUPS-317|MVD Recharge|To verify that {0} is not able to perform MVD Recharge through WEB if blank no of vouchers.
PREVAMPMVDRC4:PRETUPS-317|MVD Recharge|To verify that {0} is not able to perform MVD Recharge through WEB if alphanumeric no of vouchers.
PREVAMPMVDRC5:PRETUPS-317|MVD Recharge|To verify that {0} is not able to perform MVD Recharge through WEB if negative no of vouchers.
PREVAMPMVDRC6:PRETUPS-317|MVD Recharge|To verify that {0} is not able to perform MVD Recharge through WEB if zero no of vouchers.
PREVAMPMVDRC7:PRETUPS-317|MVD Recharge|To verify that {0} is not able to perform MVD Recharge through WEB if blank PIN is given.
PREVAMPMVDRC8:PRETUPS-317|MVD Recharge|To verify that {0} is able to perform MVD Recharge through WEB if invalid PIN is given
PREVAMPMVDRC9:PRETUPS-317|MVD Recharge|To verify that {0} is not able to close pin popup.
PREVAMPMVDRC10:PRETUPS-317|MVD Recharge|To verify that {0} is not able to perform MVD Recharge through WEB if subscriber MSISDN is blank.
PREVAMPMVDRC11:PRETUPS-317|MVD Recharge|To verify that {0} is not able to perform MVD Recharge through WEB if subscriber MSISDN is invalid
PREVAMPMVDRC12:PRETUPS-317|MVD Recharge|To verify that {0} able to reset fields while performing MVD Recharge by .
PREVAMPMVDRC13:PRETUPS-317|MVD Recharge|To verify that {0} not able to MVD Recharge of voucher greater than MAX Limit.
PREVAMPMVDRC14:PRETUPS-317|MVD Recharge|To verify that {0} not able to MVD Recharge of voucher less than MIN Limit.
PREVAMPMVDRC15:PRETUPS-317|MVD Recharge|To verify that {0} able to download invoice of MVD Recharge.

#C2SREVERSE
RECREV1:PRETUPS-7971|#RECREV1|To check if C2S Reversal is working successfully for {0}.
RECREV2:PRETUPS-7971|#RECREV2|To check if C2S Reversal is not working successfully for {0} if token format is invalid .
RECREV3:PRETUPS-7971|#RECREV3|To check if C2S Reversal is not working successfully for {0} if txn id is blank .
RECREV4:PRETUPS-7972|#RECREV4|To check if C2S Reversal is not working successfully for {0} if pin is blank.
RECREV5:PRETUPS-7972|#RECREV5|To check if C2S Reversal is not working successfully for {0} if pin is incorrect.

#C2C STOCK WITHDRAW
RESTC2CSW1:PRETUPS-0000|#C2C_STOCK_WITHDRAW|To check if C2C_STOCK_Withdraw - API  is working successfully from {0} to {1}.
RESTC2CSW2:PRETUPS-0000|#C2C_STOCK_WITHDRAW|To check if C2C_STOCK_Withdraw - API is not working successfully from {0} to {1} with invalid pin.
RESTC2CSW3:PRETUPS-0000|#C2C_STOCK_WITHDRAW|To check if C2C_STOCK_Withdraw - API is not working successfully from {0} to {1} with blank pin.
RESTC2CSW4:PRETUPS-0000|#C2C_STOCK_WITHDRAW|To check if C2C_STOCK_Withdraw - API is not working successfully from {0} to {1} with blank product Code.
RESTC2CSW5:PRETUPS-0000|#C2C_STOCK_WITHDRAW|To check if C2C_STOCK_Withdraw - API is not working successfully from {0} to {1} with blank External Network Code.
RESTC2CSW6:PRETUPS-0000|#C2C_STOCK_WITHDRAW|To check if C2C_STOCK_Withdraw - API is not working successfully from {0} to {1} with invalid product Code.
RESTC2CSW7:PRETUPS-0000|#C2C_STOCK_WITHDRAW|To check if C2C_STOCK_Withdraw - API is not working successfully from {0} to {1} with invalid External Network Code.

#C2C STOCK RETURN
RESTC2CSR1:PRETUPS-0000|#C2C_STOCK_RETURN|To check if C2C_STOCK_Return - API  is working successfully from {0} to {1}.
RESTC2CSR2:PRETUPS-0000|#C2C_STOCK_RETURN|To check if C2C_STOCK_Return - API is not working successfully from {0} to {1} with invalid pin.
RESTC2CSR3:PRETUPS-0000|#C2C_STOCK_RETURN|To check if C2C_STOCK_Return - API is not working successfully from {0} to {1} with blank pin.
RESTC2CSR4:PRETUPS-0000|#C2C_STOCK_RETURN|To check if C2C_STOCK_Return - API is not working successfully from {0} to {1} with blank product Code.
RESTC2CSR5:PRETUPS-0000|#C2C_STOCK_RETURN|To check if C2C_STOCK_Return - API is not working successfully from {0} to {1} with blank External Network Code.
RESTC2CSR6:PRETUPS-0000|#C2C_STOCK_RETURN|To check if C2C_STOCK_Return - API is not working successfully from {0} to {1} with invalid product Code.
RESTC2CSR7:PRETUPS-0000|#C2C_STOCK_RETURN|To check if C2C_STOCK_Return - API is not working successfully from {0} to {1} with invalid External Network Code.

#C2SLOADREVERSAL
LOADREV1:PRETUPS-6914|#LOADREV1|To check if C2S Load Reversal List API is working successfully for {0}.
LOADREV2:PRETUPS-6914|#LOADREV1|To check if C2S Load Reversal List API is not working successfully for {0} if txn id is invalid.
LOADREV3:PRETUPS-6914|#LOADREV1|To check if C2S Load Reversal List API is not working successfully for {0} if txn id is blank.
LOADREV4:PRETUPS-6914|#LOADREV1|To check if C2S Load Reversal List API is not working successfully for {0} if sender msisdn is blank.

#O2CPURORWITHTEMPLATE
O2CPURORWITHTEMPLATE1:PRETUPS-10149|#O2CPURORWITHTEMPLATE1|To check if O2C purchase or withddraw template api is working successfully for purchase for {0}.
O2CPURORWITHTEMPLATE2:PRETUPS-10150|#O2CPURORWITHTEMPLATE2|To check if O2C purchase or withddraw template api is working successfully for withdraw for {0}.
O2CPURORWITHTEMPLATE3:PRETUPS-10151|#O2CPURORWITHTEMPLATE3|To check if O2C purchase or withddraw template api is not working for param other than p/w for {0}.

#O2CPURORWITHUSERLIST
O2CPURORWITHUSERLIST1:PRETUPS-10152|#O2CPURORWITHUSERLIST1|To check if O2C purchase or withddraw user list api is working successfully for purchase for {0}.
O2CPURORWITHUSERLIST2:PRETUPS-10153|#O2CPURORWITHUSERLIST2|To check if O2C purchase or withddraw user list api is working successfully for withdraw for {0}.
O2CPURORWITHUSERLIST3:PRETUPS-10154|#O2CPURORWITHUSERLIST3|To check if O2C purchase or withddraw user list api is not working for param other than p/w for {0}.
O2CPURORWITHUSERLIST4:PRETUPS-10155|#O2CPURORWITHUSERLIST4|To check if O2C purchase or withddraw user list api is not working for{0} if geodomainCode is empty.
O2CPURORWITHUSERLIST5:PRETUPS-10156|#O2CPURORWITHUSERLIST5|To check if O2C purchase or withddraw user list api is not working for{0} if doaminCode is empty.
O2CPURORWITHUSERLIST6:PRETUPS-10157|#O2CPURORWITHUSERLIST6|To check if O2C purchase or withddraw user list api is not working for{0} if categoryCode is empty.
O2CPURORWITHUSERLIST7:PRETUPS-10158|#O2CPURORWITHUSERLIST7|To check if O2C purchase or withddraw user list api is not working for{0} if productCode is empty.

#REFRESHTOKENAPI

RT1:PRETUPS-0000|#RT1|To check if Refresh Token API is working successfully for {0}.

#GETO2CPRODUCTS
GETO2CPRO1:PRETUPS-10199|#GETO2CPRODUCTS|To verify that getO2CProductsApi is working successfully for {0}.
GETO2CPRO2:PRETUPS-10201|#GETO2CPRODUCTS|To verify that getO2CProductsApi is not working successfully for {0} when token is invalid.

#O2CBATCHTRANSFER
O2CBTRF1:PRETUPS-10326|O2C Batch Transfer|To check if Upload file API is working successfully for {0} to {1}.
O2CBTRF2:PRETUPS-10325|O2C Batch Transfer|To check if Upload file API is not working successfully for {0} to {1} if category is invalid.
O2CBTRF3:PRETUPS-10324|O2C Batch Transfer|To check if Upload file API is not working successfully for {0} to {1} if geography is invalid.
O2CBTRF4:PRETUPS-10323|O2C Batch Transfer|To check if Upload file API is not working successfully for {0} to {1} if domain is invalid.
O2CBTRF5:PRETUPS-10322|O2C Batch Transfer|To check if Upload file API is not working successfully for {0} to {1} if batchName is invalid.

#O2CBATCHWITHDRAW
O2CBWID1:PRETUPS-0000|O2C Batch Withdraw|To check if Upload file API is working successfully for {0} to {1}.
O2CBWID2:PRETUPS-0000|O2C Batch Withdraw|To check if Upload file API is not working successfully for {0} to {1} if category is invalid.
O2CBWID3:PRETUPS-0000|O2C Batch Withdraw|To check if Upload file API is not working successfully for {0} to {1} if geography is invalid.
O2CBWID4:PRETUPS-0000|O2C Batch Withdraw|To check if Upload file API is not working successfully for {0} to {1} if product is invalid.
O2CBWID5:PRETUPS-0000|O2C Batch Withdraw|To check if Upload file API is not working successfully for {0} to {1} if domain is invalid.

#FocINITIATe
FOCINI1:PRETUPS-0000|FOC Initiate|To Check if foc request is working successfully for valid data or not.
FOCINI2:PRETUPS-0000|FOC Initiate |To check validation message for Invalid PIN.
FOCINI3:PRETUPS-0000|FOC Initiate|To check if empty product validation is present or not .
FOCINI4:PRETUPS-0000|FOC Initiate|To check if language1 message length should not exceed 30 characters.
FOCINI5:PRETUPS-0000|FOC Initiate|To check if language2 message length should not exceed 30 characters.
#C2cO2cvcrtrfcalapi
VTXNCALVIEW1:PRETUPS-0000|C2C O2C VOUCHER TRF VIEW API|To Check request is working successfully for valid data for buy voucher .
VTXNCALVIEW2:PRETUPS-0000|C2C O2C VOUCHER TRF VIEW API|To Check validation message when network code is not given.
VTXNCALVIEW3:PRETUPS-0000|C2C O2C VOUCHER TRF VIEW API|To Check validation message when voucher type  is not given in any slab.

#Channel To Channel Transfer
PREVAMPC2CT1:PRETUPS-317|C2C Transfer|To verify Mobile Buyer Type C2C Transfer from {0} to {1} is successful.
PREVAMPC2CT2:PRETUPS-317|C2C Transfer|To verify LoginID Buyer Type C2C Transfer from {0} to {1} is successful.
PREVAMPC2CT3:PRETUPS-317|C2C Transfer|To verify Username Buyer Type C2C Transfer from {0} to {1} is successful.
PREVAMPC2CT4:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when blank BUYER TYPE is given.
PREVAMPC2CT5:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when MSISDN is given blank for MOBILE BUYER TYPE.
PREVAMPC2CT6:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when Blank Etopup and Ptopup is given blank for MOBILE BUYER TYPE.
PREVAMPC2CT7:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when Blank Category is given for USER NAME TYPE.
PREVAMPC2CT8:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when Blank Username is given for USER NAME TYPE.
PREVAMPC2CT9:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when Blank Category is given for LOGINID BUYER TYPE.
PREVAMPC2CT10:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when Blank Loginid is given for LOGINID BUYER TYPE.
PREVAMPC2CT11:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when negative amount is given for MOBILE BUYER TYPE.
PREVAMPC2CT12:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when Blank Remarks is given for MOBILE BUYER TYPE.
PREVAMPC2CT13:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when Blank PaymentMode is given for MOBILE BUYER TYPE.
PREVAMPC2CT14:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when Invalid Pin is given for MOBILE BUYER TYPE.
PREVAMPC2CT15:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when blank amount is given for MOBILE BUYER TYPE.
PREVAMPC2CT16:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when invalid RefNo is given for MOBILE BUYER TYPE.
PREVAMPC2CT17:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when special characters are given in qty for MOBILE BUYER TYPE.
PREVAMPC2CT18:PRETUPS-317|C2C Transfer|To verify error is displayed from {0} to {1}  when special characters are given in reference number for MOBILE BUYER TYPE.


#Channel To Channel Buy
PREVAMPC2CI1:PRETUPS-317|C2C Initiate|To verify Mobile Buyer Type C2C Initiate from {0} to {1} is successful.
PREVAMPC2CI2:PRETUPS-317|C2C Initiate|To verify LoginID Buyer Type C2C Initiate from {0} to {1} is successful.
PREVAMPC2CI3:PRETUPS-317|C2C Initiate|To verify Username Buyer Type C2C Initiate from {0} to {1} is successful.
PREVAMPC2CI4:PRETUPS-317|C2C Initiate|To verify error is displayed when blank BUYER TYPE is given.
PREVAMPC2CI5:PRETUPS-317|C2C Initiate|To verify error is displayed when MSISDN is given blank for MOBILE BUYER TYPE.
PREVAMPC2CI6:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Etopup and Ptopup is given blank for MOBILE BUYER TYPE.
PREVAMPC2CI7:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Category is given for USER NAME TYPE.
PREVAMPC2CI8:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Username is given for USER NAME TYPE.
PREVAMPC2CI9:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Category is given for LOGINID BUYER TYPE.
PREVAMPC2CI10:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Loginid is given for LOGINID BUYER TYPE.
PREVAMPC2CI11:PRETUPS-317|C2C Initiate|To verify error is displayed when negative amount is given for MOBILE BUYER TYPE.
PREVAMPC2CI12:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Remarks is given for MOBILE BUYER TYPE.
PREVAMPC2CI13:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank PaymentMode is given for MOBILE BUYER TYPE.
PREVAMPC2CI14:PRETUPS-317|C2C Initiate|To verify error is displayed when Invalid Pin is given for MOBILE BUYER TYPE.
PREVAMPC2CI15:PRETUPS-317|C2C Initiate|To verify error is displayed from {0} to {1}  when blank amount is given for MOBILE BUYER TYPE.
PREVAMPC2CI16:PRETUPS-317|C2C Initiate|To verify error is displayed from {0} to {1}  when invalid RefNo is given for MOBILE BUYER TYPE.


#Channel to Channel Approval
PREVAMPC2CAPPRVL1:PRETUPS-317|C2C Approval|To verify error is displayed when invalid RefNo is given in C2C Approval Scrren.
PREVAMPC2CAPPRVL2:PRETUPS-317|C2C Approval|To verify that Rejection is successfully performed in C2C Approval Api.

#Channel To Channel Withdrawl
PREVAMPC2CW1:PRETUPS-317|C2C Initiate|To verify Mobile Buyer Type C2C Withdrawl from {0} to {1} is successful.
PREVAMPC2CW2:PRETUPS-317|C2C Initiate|To verify LoginID Buyer Type C2C Withdrawl from {0} to {1} is successful.
PREVAMPC2CW3:PRETUPS-317|C2C Initiate|To verify Username Buyer Type C2C Withdrawl from {0} to {1} is successful.
PREVAMPC2CW4:PRETUPS-317|C2C Initiate|To verify error is displayed when Invalid Amount is given.
PREVAMPC2CW5:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Msisdn given for MOBILE BUYER TYPE.
PREVAMPC2CW6:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Remarks is given blank for MOBILE BUYER TYPE.
PREVAMPC2CW7:PRETUPS-317|C2C Initiate|To verify error is displayed when Invalid Pin is given for MOBILE BUYER TYPE.

#Channel To Channel Return
PREVAMPC2CR1:PRETUPS-317|C2C Initiate|To verify Mobile Buyer Type C2C Return from {0} to {1} is successful.
PREVAMPC2CR2:PRETUPS-317|C2C Initiate|To verify LoginID Buyer Type C2C Return from {0} to {1} is successful.
PREVAMPC2CR3:PRETUPS-317|C2C Initiate|To verify Username Buyer Type C2C Return from {0} to {1} is successful.
PREVAMPC2CR4:PRETUPS-317|C2C Initiate|To verify error is displayed when Invalid Amount is given.
PREVAMPC2CR5:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Msisdn given for MOBILE BUYER TYPE.
PREVAMPC2CR6:PRETUPS-317|C2C Initiate|To verify error is displayed when Blank Remarks is given blank for MOBILE BUYER TYPE.
PREVAMPC2CR7:PRETUPS-317|C2C Initiate|To verify error is displayed when Invalid Pin is given for MOBILE BUYER TYPE.

#Voucher Validate
VOVA1:PRETUPS-6657|#VOUCHERVALIDATE|To check if Voucher Validate API is working successfully for {0}.
VOVA2:PRETUPS-6658|#VOUCHERVALIDATE|To check if Voucher Validate API is not working successfully for {0} if from Serial Number is blank.
VOVA3:PRETUPS-6659|#VOUCHERVALIDATE|To check if Voucher Validate API is not working successfully for {0} if to Serial Number is blank.
VOVA4:PRETUPS-6659|#VOUCHERVALIDATE|To check if Voucher Validate API is not working successfully for {0} if count value is less than number of vouchers present.



#Multi Currency
PMULTICURR1:PRETUPS-000|Multi Currency|To verify that Network Admin is able to Add Currency  successfully.
PMULTICURR2:PRETUPS-000|Multi Currency|To verify that Network Admin is able to Approve Currency at Level 1 Approval.
PMULTICURR3:PRETUPS-000|Multi Currency|To verify that Network Admin is able to Approve  Currency at Level 2 Approval.
PMULTICURR4:PRETUPS-000|Multi Currency|To verify that currency addition fails for invalid Conversion Rate
PMULTICURR5:PRETUPS-000|Multi Currency|To verify that currency addition fails if Currency Code is blank
PMULTICURR6:PRETUPS-000|Multi Currency|To verify that currency addition fails if Currency Name is blank
PMULTICURR7:PRETUPS-000|Multi Currency|To verify that Network Admin is able to Reject Currency at Level 1 Approval.
PMULTICURR8:PRETUPS-000|Multi Currency|To verify that Network Admin is able to Reject Currency at Level 2 Approval.
PMULTICURR9:PRETUPS-000|Multi Currency|To verify that approval fails at level 1 for invalid Conversion Rate
PMULTICURR10:PRETUPS-000|Multi Currency|To verify that approval fails at level 2 for invalid Conversion Rate

#C2C Stock Txn Detail
C2CSTXN1:PRETUPS-000|C2C Stock Txn Detail|To check if C2C Stock Txn API is working successfully for {0}
C2CSTXN2:PRETUPS-000|C2C Stock Txn Detail|To check if C2C Stock Txn API is not working successfully for {0} if from date is blank.
C2CSTXN3:PRETUPS-000|C2C Stock Txn Detail|To check if C2C Stock Txn API is not working successfully for {0} if to date is blank.
C2CSTXN4:PRETUPS-000|C2C Stock Txn Detail|To check if C2C Stock Txn API is not working successfully for {0} if from date is greater than to date.
C2CSTXN5:PRETUPS-000|C2C Stock Txn Detail|To check if C2C Stock Txn API is not working successfully for {0} if from date is invalid.
C2CSTXN6:PRETUPS-000|C2C Stock Txn Detail|To check if C2C Stock Txn API is not working successfully for {0} if to date is invalid.

#C2C Voucher Txn Detail
C2CVTXN1:PRETUPS-000|C2C Voucher Txn Detail|To check if C2C Voucher Txn API is working successfully for {0}
C2CVTXN2:PRETUPS-000|C2C Voucher Txn Detail|To check if C2C Voucher Txn API is not working successfully for {0} if from date is blank.
C2CVTXN3:PRETUPS-000|C2C Voucher Txn Detail|To check if C2C Voucher Txn API is not working successfully for {0} if to date is blank.
C2CVTXN4:PRETUPS-000|C2C Voucher Txn Detail|To check if C2C Voucher Txn API is not working successfully for {0} if from date is greater than to date.
C2CVTXN5:PRETUPS-000|C2C Voucher Txn Detail|To check if C2C Stock Txn API is not working successfully for {0} if from date is invalid.
C2CVTXN6:PRETUPS-000|C2C Voucher Txn Detail|To check if C2C Voucher Txn API is not working successfully for {0} if to date is invalid.

#O2C Stock Txn Detail
O2CSTXN1:PRETUPS-13008|O2C Stock Txn Detail|To check if O2C Stock Txn API is working successfully for {0}
O2CSTXN2:PRETUPS-13009|O2C Stock Txn Detail|To check if O2C Stock Txn API is not working successfully for {0} if from date is blank.
O2CSTXN3:PRETUPS-13010|O2C Stock Txn Detail|To check if O2C Stock Txn API is not working successfully for {0} if to date is blank.
O2CSTXN4:PRETUPS-13011|O2C Stock Txn Detail|To check if O2C Stock Txn API is not working successfully for {0} if from date is greater than to date.
O2CSTXN5:PRETUPS-13012|O2C Stock Txn Detail|To check if O2C Stock Txn API is not working successfully for {0} if from date is invalid.
O2CSTXN6:PRETUPS-13013|O2C Stock Txn Detail|To check if O2C Stock Txn API is not working successfully for {0} if to date is invalid.

#O2C Voucher Txn Detail
O2CVTXN1:PRETUPS-000|O2C Voucher Txn Detail|To check if O2C Voucher Txn API is working successfully for {0}
O2CVTXN2:PRETUPS-000|O2C Voucher Txn Detail|To check if O2C Voucher Txn API is not working successfully for {0} if from date is blank.
O2CVTXN3:PRETUPS-000|O2C Voucher Txn Detail|To check if O2C Voucher Txn API is not working successfully for {0} if to date is blank.
O2CVTXN4:PRETUPS-000|O2C Voucher Txn Detail|To check if O2C Voucher Txn API is not working successfully for {0} if from date is greater than to date.
O2CVTXN5:PRETUPS-000|O2C Voucher Txn Detail|To check if O2C Voucher Txn API is not working successfully for {0} if from date is invalid.
O2CVTXN6:PRETUPS-000|O2C Voucher Txn Detail|To check if O2C Voucher Txn API is not working successfully for {0} if to date is invalid.

#C2CVOUCHERTRANSFER
PREVAMPC2CVT1:PRETUPS-0000|#PREVAMPC2CVT1|To check if C2C Transfer Voucher is working successfully for {0} to {1} and Approval.
PREVAMPC2CVT2:PRETUPS-0000|#PREVAMPC2CVT2|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if Search By is Blank.
PREVAMPC2CVT3:PRETUPS-0000|#PREVAMPC2CVT3|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if MSISDN is Blank.
PREVAMPC2CVT4:PRETUPS-0000|#PREVAMPC2CVT4|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if User Category is Blank with UserName.
PREVAMPC2CVT5:PRETUPS-0000|#PREVAMPC2CVT5|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if User Name is Blank.
PREVAMPC2CVT6:PRETUPS-0000|#PREVAMPC2CVT6|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if User Category is Blank with LoginId.
PREVAMPC2CVT7:PRETUPS-0000|#PREVAMPC2CVT7|To check if C2C Transfer Voucher is working successfully for {0} to {1} if Fields are Reset.
PREVAMPC2CVT8:PRETUPS-0000|#PREVAMPC2CVT8|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if MSISDN length is Invalid.
PREVAMPC2CVT9:PRETUPS-0000|#PREVAMPC2CVT9|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if MSISDN  is Invalid.
PREVAMPC2CVT10:PRETUPS-0000|#PREVAMPC2CVT10|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if Payment Date is Blank.
PREVAMPC2CVT11:PRETUPS-0000|#PREVAMPC2CVT10|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if Payment Type is Blank.
PREVAMPC2CVT12:PRETUPS-0000|#PREVAMPC2CVT12|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if Remarks are Blank.
PREVAMPC2CVT13:PRETUPS-0000|#PREVAMPC2CVT13|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if To Serial No. is Blank.
PREVAMPC2CVT14:PRETUPS-0000|#PREVAMPC2CVT14|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if To Serial No. is Invalid.
PREVAMPC2CVT15:PRETUPS-0000|#PREVAMPC2CVT15|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if From Serial No. is Invalid.
PREVAMPC2CVT16:PRETUPS-0000|#PREVAMPC2CVT16|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if From Serial No. is Blank.
PREVAMPC2CVT17:PRETUPS-0000|#PREVAMPC2CVT17|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if Denomination is Blank.
PREVAMPC2CVT18:PRETUPS-0000|#PREVAMPC2CVT18|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if Segment is Blank.
PREVAMPC2CVT19:PRETUPS-0000|#PREVAMPC2CVT19|To check if C2C Transfer Voucher is not working successfully for {0} to {1} if Type is Blank.
PREVAMPC2CVT20:PRETUPS-0000|#PREVAMPC2CVT20|To check if C2C Transfer Voucher is working successfully for {0} to {1} and Reject.

#O2CVOUCHERTRANSFER
PREVAMPO2CVT1:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is working successfully for {0} to {1} and Approval.
PREVAMPO2CVT2:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Search By is Blank.
PREVAMPO2CVT3:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if MSISDN is Blank.
PREVAMPO2CVT4:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Geography is Blank with UserName.
PREVAMPO2CVT5:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Domain is Blank with UserName.
PREVAMPO2CVT6:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Owner Category is Blank with UserName.
PREVAMPO2CVT7:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Category is Blank with UserName.
PREVAMPO2CVT8:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Channel Owner Name is Blank with UserName.
PREVAMPO2CVT9:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if User Name is Blank with UserName Selected.
PREVAMPO2CVT10:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Domain is Blank with LoginId.
PREVAMPO2CVT11:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if User Category is Blank with LoginId.
PREVAMPO2CVT12:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is working successfully for {0} to {1} if Fields are Reset.
PREVAMPO2CVT13:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if MSISDN length is Invalid.
PREVAMPO2CVT14:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Payment Date is Blank.
PREVAMPO2CVT15:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Payment Type is Blank.
PREVAMPO2CVT16:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Payment Instrument Number is Blank.
PREVAMPO2CVT17:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Remarks are Blank.
PREVAMPO2CVT18:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if To Serial No. is Blank.
PREVAMPO2CVT19:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if To Serial No. is Invalid.
PREVAMPO2CVT20:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if From Serial No. is Blank.
PREVAMPO2CVT21:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if From Serial No. is Invalid.
PREVAMPO2CVT22:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Denomination is Blank.
PREVAMPO2CVT23:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Segment is Blank.
PREVAMPO2CVT24:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is not working successfully for {0} to {1} if Type is Blank.
PREVAMPO2CVT25:PRETUPS-0000|#PREVAMPO2CVT1|To check if O2C Transfer Voucher is working successfully for {0} to {1} and Reject.

#O2CVOUCHERINITIATE
PREVAMPO2CVI1:PRETUPS-0000|#PREVAMPO2CVI1|To check if O2C Initiate Voucher is working successfully for {0} to {1} and Approval.
PREVAMPO2CVI2:PRETUPS-0000|#PREVAMPO2CVI2|To check if O2C Initiate Voucher is not working successfully for {0} to {1} if Payment Date is Blank.
PREVAMPO2CVI3:PRETUPS-0000|#PREVAMPO2CVI3|To check if O2C Initiate Voucher is not working successfully for {0} to {1} if Payment Type is Blank.
PREVAMPO2CVI4:PRETUPS-0000|#PREVAMPO2CVI4|To check if O2C Initiate Voucher is not working successfully for {0} to {1} if Payment Instrumnet Number is Blank.
PREVAMPO2CVI5:PRETUPS-0000|#PREVAMPO2CVI5|To check if O2C Initiate Voucher is not working successfully for {0} to {1} if Remarks are Blank.
PREVAMPO2CVI6:PRETUPS-0000|#PREVAMPO2CVI6|To check if O2C Initiate Voucher is not working successfully for {0} to {1} if Quantity is Blank.
PREVAMPO2CVI7:PRETUPS-0000|#PREVAMPO2CVI7|To check if O2C Initiate Voucher is not working successfully for {0} to {1} if Denomination is Blank.
PREVAMPO2CVI8:PRETUPS-0000|#PREVAMPO2CVI8|To check if O2C Initiate Voucher is not working successfully for {0} to {1} if Segment is Blank.
PREVAMPO2CVI9:PRETUPS-0000|#PREVAMPO2CVI9|To check if O2C Initiate Voucher is working successfully for {0} to {1} if Fields are Reset.
PREVAMPO2CVI10:PRETUPS-0000|#PREVAMPO2CVI10|To check if O2C Initiate Voucher is working successfully for {0} to {1} and Reject.

#C2C Pending Transaction Count
PENDINGTXNCOUNT1:PRETUPS-000|Pending Transaction Count|To check if Pending Transaction Count API is working successfully for {0}
PENDINGTXNCOUNT2:PRETUPS-000|Pending Transaction Count|To check if Pending Transaction Count API is not working successfully for {0}  if token is invalid.
PENDINGTXNCOUNT3:PRETUPS-000|Pending Transaction Count|To check if Pending Transaction Count API is not working successfully for {0} if channel user want to fetch o2c transaction ount.

#SET User Widget 
SETUSERWIDGETAPI::PRETUPS-000|Update Or Add User Widget|To check if Api is working successfully or not.

#GET USER WIDGET
GETUSERWIDGETAPI1:PRETUPS-0000|Get User Widget|To check if Get User Widget Api is working successfully for {0} or not.
GETUSERWIDGETAPI2:PRETUPS-0000|Get User Widget|To check if Get User Widget API is not working successfully for {0} if token is invalid.

#C2S USER BALANCE
C2SUSERBALANCE1:PRETUPS-0000|#C2SUSERBALANCE1|To check if C2S User Balance API is working successfully for {0}.
C2SUSERBALANCE2:PRETUPS-0000|#C2SUSERBALANCE2|To check if C2S User Balance API is not working successfully for {0} if token is invalid.
C2SUSERBALANCE3:PRETUPS-0000|#C2SUSERBALANCE3|To check if C2S User Balance API is not working successfully for {0} if Date is invalid.

#Error File
RESTEF1:PRETUPS-0000|Error File|To check if Error File Api is working successfully for {0}.
RESTEF2:PRETUPS-0000|Error File|To check if Error File Api is not working successfully for {0} when invalid fileType is given.
RESTEF3:PRETUPS-0000|Error File|To check if Error File Api is not working successfully for {0} when blank fileType is given.
RESTEF4:PRETUPS-0000|Error File|To check if Error File Api is not working successfully for {0} when blank rowErrorList is given.

#O2C Stock Return Revamp
PREVAMPO2CSR1: PRETUPS-000|#PREVAMPO2CSR1|To check if O2C Stock Return of {2} is working successfully from {1} to {0} 
PREVAMPO2CSR2: PRETUPS-000|#PREVAMPO2CSR2|To check if O2C Stock Return of {2} is not working successfully from {1} to {0} if order amount is blank
PREVAMPO2CSR3: PRETUPS-000|#PREVAMPO2CSR3|To check if O2C Stock Return of {2} is not working successfully from {1} to {0} if remark is not entered
PREVAMPO2CSR4: PRETUPS-000|#PREVAMPO2CSR4|To check if O2C Stock Return of {2} is not working successfully from {1} to {0} if pin entered is incorrect
PREVAMPO2CSR5: PRETUPS-000|#PREVAMPO2CSR5|To check if O2C Stock Return of {2} is not working successfully from {1} to {0} if entered amount is more then balance for {2} product
PREVAMPO2CSR6: PRETUPS-000|#PREVAMPO2CSR6|To check if O2C Stock Return of {2} is not working successfully from {1} to {0} if entered amount is alphanumeric
PREVAMPO2CSR7: PRETUPS-000|#PREVAMPO2CSR7|To check if O2C Stock Return of {2} is not working successfully from {1} to {0} if entered amount is zero
PREVAMPO2CSR8: PRETUPS-000|#PREVAMPO2CSR8|To check in O2C Stock Return of {2} reset button is working successfully
PREVAMPO2CSR9: PRETUPS-000|#PREVAMPO2CSR9|To check in O2C Stock Return of {2} pin is being successfully reset on closing popup

#O2CWITHDRAWAL
PREVAMPO2CSW1:PRETUPS-0000|#PREVAMPO2CSW1|To check if {0} is able to perform O2C withdrawal from {1} successfully , product name {2} , search by {3}.
PREVAMPO2CSW2:PRETUPS-0000|#PREVAMPO2CSW2|To check if {0} is not able to perform O2C withdrawal from {1} successfully with wrong pin, product name {2} , search by {3}.
PREVAMPO2CSW3:PRETUPS-0000|#PREVAMPO2CSW3|To check if pin is being reset on closing popup in O2C withdrawal, product name {2} , search by {3}.
PREVAMPO2CSW4:PRETUPS-0000|#PREVAMPO2CSW4|To check if {0} is not able to perform O2C withdrawal from {1} successfully with blank remarks, product name {2} , search by {3}.
PREVAMPO2CSW5:PRETUPS-0000|#PREVAMPO2CSW5|To check if {0} is not able to perform O2C withdrawal from {1} successfully with blank amount, product name {2} , search by {3}.
PREVAMPO2CSW6:PRETUPS-0000|#PREVAMPO2CSW6|To check if {0} is not able to perform O2C withdrawal from {1} successfully with zero amount, product name {2} , search by {3}.
PREVAMPO2CSW7:PRETUPS-0000|#PREVAMPO2CSW7|To check if {0} is not able to perform O2C withdrawal from {1} successfully with alphanumeric amount, product name {2} , search by {3}.
PREVAMPO2CSW8:PRETUPS-0000|#PREVAMPO2CSW8|To check if {0} is not able to perform O2C withdrawal from {1} successfully with more than available balance amount, product name {2} , search by {3}.
PREVAMPO2CSW9:PRETUPS-0000|#PREVAMPO2CSW9|To check if withdrawal details reset button is working successfully, product name {2} , search by {3}.
PREVAMPO2CSW10:PRETUPS-0000|#PREVAMPO2CSW10|To check if {0} is not able to perform O2C withdrawal from {1} successfully without selecting operator wallet, product name {2} , search by {3}.
PREVAMPO2CSW11:PRETUPS-0000|#PREVAMPO2CSW11|To check if {0} is not able to perform O2C withdrawal from {1} successfully without selecting search by option, product name {2} , search by {3}.
PREVAMPO2CSW12:PRETUPS-0000|#PREVAMPO2CSW12|To check if {0} is not able to perform O2C withdrawal from {1} successfully with blank login id details, product name {2} , search by {3}.
PREVAMPO2CSW13:PRETUPS-0000|#PREVAMPO2CSW13|To check if {0} is not able to perform O2C withdrawal from {1} successfully with invalid login id, product name {2} , search by {3}.
PREVAMPO2CSW14:PRETUPS-0000|#PREVAMPO2CSW14|To check if {0} is not able to perform O2C withdrawal from {1} successfully with blank user name details, product name {2} , search by {3}.
PREVAMPO2CSW15:PRETUPS-0000|#PREVAMPO2CSW15|To check if user details reset button is working successfully, product name {2} , search by {3}.
PREVAMPO2CSW16:PRETUPS-0000|#PREVAMPO2CSW16|To check if {0} is not able to perform O2C withdrawal from {1} successfully with blank mobile number, product name {2} , search by {3}.
PREVAMPO2CSW17:PRETUPS-0000|#PREVAMPO2CSW17|To check if {0} is not able to perform O2C withdrawal from {1} successfully with invalid mobile number, product name {2} , search by {3}.
PREVAMPO2CSW18:PRETUPS-0000|#PREVAMPO2CSW16|To check if {0} is not able to perform O2C withdrawal from {1} successfully with alphanumeric mobile number, product name {2} , search by {3}.
PREVAMPO2CSW19:PRETUPS-0000|#PREVAMPO2CSW19|To check if {0} is not able to perform O2C withdrawal from {1} successfully with invalid user name, product name {2} , search by {3}.

#Channel User Home
PREVAMPCUHOME1:PRETUPS-317|CU HOME|To verify {0} is able to add widgets on the home screen.
PREVAMPCUHOME2:PRETUPS-317|CU HOME|To verify {0} is able to remove added widgets on the home screen.
PREVAMPCUHOME3:PRETUPS-317|CU HOME|To verify {0} is able to cancel added widgets on the home screen.
PREVAMPCUHOME4:PRETUPS-317|CU HOME|To verify {0} is able to edit added widgets on the home screen.
PREVAMPCUHOME5:PRETUPS-317|CU HOME|To verify {0} is able to add multiple widgets on the home screen.
PREVAMPCUHOME6:PRETUPS-317|CU HOME|To verify {0} is able to move added widgets on the home screen.
PREVAMPCUHOME7:PRETUPS-317|CU HOME|To verify for {0} selected widget on home screen is persistent after logout.
PREVAMPCUHOME8:PRETUPS-317|CU HOME|To verify that value graph date and selected date in datepicker is same at home screen for {0}.
PREVAMPCUHOME9:PRETUPS-317|CU HOME|To verify that count graph date and selected date in datepicker is same at home screen for {0}.


#FOCAPPROVAL
FOCAPPRV1:PRETUPS-13090|#FOCAPPRV1|To check if {0} can transfer FOC of amount to channel user {1} successfully.
FOCAPPRV2:PRETUPS-13091|#FOCAPPRV2|To check if foc approval is not working successfully if txn id is not valid for {0}.
FOCAPPRV3:PRETUPS-13092|#FOCAPPRV3|To check if foc approval is not working successfully if approval level is not valid for {0}.
FOCAPPRV4:PRETUPS-13093|#FOCAPPRV4|To check if foc approval is not working successfully if toMsisdn is not valid for {0}.

#Bulk O2C Approval List
BULKO2CAPRVLIST1:PRETUPS-0000|#BulkO2CApprovalList|To check if bulk o2c approval list api is working successfully for {0}.
BULKO2CAPRVLIST2:PRETUPS-0000|#BulkO2CApprovalList|To check if bulk o2c approval list api is not working successfully for {0} if blank approval level is given.
BULKO2CAPRVLIST3:PRETUPS-0000|#BulkO2CApprovalList|To check if bulk o2c approval list api is not working successfully for {0} if blank approval type is given.
BULKO2CAPRVLIST4:PRETUPS-0000|#BulkO2CApprovalList|To check if bulk o2c approval list api is not working successfully for {0} if blank category is given.
BULKO2CAPRVLIST5:PRETUPS-0000|#BulkO2CApprovalList|To check if bulk o2c approval list api is not working successfully for {0} if blank domain is given.
BULKO2CAPRVLIST6:PRETUPS-0000|#BulkO2CApprovalList|To check if bulk o2c approval list api is not working successfully for {0} if blank geo domain is given.
BULKO2CAPRVLIST7:PRETUPS-0000|#BulkO2CApprovalList|To check if bulk o2c approval list api is not working successfully for {0} if invalid approval level is given.
BULKO2CAPRVLIST8:PRETUPS-0000|#BulkO2CApprovalList|To check if bulk o2c approval list api is not working successfully for {0} if invalid approval type is given.

#C2S REVERSAL REVAMP
PREVAMPC2SREV1:PRETUPS-317|#C2S Recharge|To verify that {0} category user is able to perform C2S Recharge Reversal by msisdn.
PREVAMPC2SREV2:PRETUPS-317|#C2S Recharge|To verify that {0} category user is able to perform C2S Recharge Reversal by transaction id.
PREVAMPC2SREV3:PRETUPS-317|#C2S Recharge|To verify that {0} category user is not able to perform C2S Recharge Reversal by entering invalid msisdn.
PREVAMPC2SREV4:PRETUPS-317|#C2S Recharge|To verify that {0} category user is not able to perform C2S Recharge Reversal without selecting search by dropdown.
PREVAMPC2SREV5:PRETUPS-317|#C2S Recharge|To verify that {0} category user is not able to perform C2S Recharge Reversal by entering blank msisdn.
PREVAMPC2SREV6:PRETUPS-317|#C2S Recharge|To verify that {0} category user is not able to perform C2S Recharge Reversal by entering invalid pin.
PREVAMPC2SREV7:PRETUPS-317|#C2S Recharge|To verify that {0} category user is not able to perform C2S Recharge Reversal by entering blank pin.
PREVAMPC2SREV8:PRETUPS-317|#C2S Recharge|To verify that {0} category user is able to successfully reset C2S Recharge Reversal page.
PREVAMPC2SREV9:PRETUPS-317|#C2S Recharge|To verify that {0} category user is not able to perform C2S Recharge Reversal by entering blank transaction id.|

#BATCH O2C APPROVAL DETAILS
BATCHO2CAPRVLIST1:PRETUPS-0000|#BATCHO2CAPRVLIST1|To check if bulk o2c approval list api is working successfully for {0}.
BATCHO2CAPRVLIST2:PRETUPS-0000|#BATCHO2CAPRVLIST2|To check if bulk o2c approval list api is not working successfully for {0} if blank approval level is given.
BATCHO2CAPRVLIST3:PRETUPS-0000|#BATCHO2CAPRVLIST3|To check if bulk o2c approval list api is not working successfully for {0} if blank approval type is given.
BATCHO2CAPRVLIST4:PRETUPS-0000|#BATCHO2CAPRVLIST4|To check if bulk o2c approval list api is not working successfully for {0} if invalid approval level is given.
BATCHO2CAPRVLIST5:PRETUPS-0000|#BATCHO2CAPRVLIST5|To check if bulk o2c approval list api is not working successfully for {0} if invalid approval type is given.
BATCHO2CAPRVLIST6:PRETUPS-0000|#BATCHO2CAPRVLIST6|To check if bulk o2c approval list api is not working successfully for {0} if Blank approval Sub Type is given.
BATCHO2CAPRVLIST7:PRETUPS-0000|#BATCHO2CAPRVLIST7|To check if bulk o2c approval list api is not working successfully for {0} if Blank batch Id is given.
#O2C Batch Trf,widraw and approval and reject
O2CBTRFAPPREJ1:PRETUPS-0000|#O2CBTRFAPPREJ1|To check if bulk o2c approval api is working successfully for {0} at approval level 1.
O2CBTRFAPPREJ2:PRETUPS-0000|#O2CBTRFAPPREJ2|To check if bulk o2c approval api is working successfully for {0} at approval level 2.
O2CBTRFAPPREJ3:PRETUPS-0000|#O2CBTRFAPPREJ3|To check if bulk o2c approval api is working successfully for {0} for reject.

#FOC REVAMP
PREVAMPFOCTRF1:PRETUPS-317|FOC Transfer|To verify that Operator user is able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with MSISDN.
PREVAMPFOCTRF2:PRETUPS-317|FOC Transfer|To verify that Operator user is able to perform FOCT Approval 1 for category {0} with parent category {1}, product type {2}.
PREVAMPFOCTRF3:PRETUPS-317|FOC Transfer|To verify that Operator user is able to perform FOCT Approval 2 for category {0} with parent category {1}, product type {2}.
PREVAMPFOCTRF4:PRETUPS-317|FOC Transfer|To verify that Operator user is able to perform FOCT Approval 3 for category {0} with parent category {1}, product type {2}.
PREVAMPFOCTRF5:PRETUPS-317|FOC Transfer|To verify that Operator user is able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Login ID.
PREVAMPFOCTRF6:PRETUPS-317|FOC Transfer|To verify that Operator user is able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with UserName.
PREVAMPFOCTRF7:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Alphanumeric MSISDN.
PREVAMPFOCTRF8:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Blank MSISDN.
PREVAMPFOCTRF9:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Invalid MSISDN.
PREVAMPFOCTRF10:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Blank Login ID details.
PREVAMPFOCTRF11:PRETUPS-317|FOC Transfer|To verify that Reset Button is working while performing FOCT initiation for category {0} with parent category {1}, product type {2}.
PREVAMPFOCTRF12:PRETUPS-317|FOC Transfer|To verify that Search By Reset Button is working while performing FOCT initiation for category {0} with parent category {1}, product type {2}.
PREVAMPFOCTRF13:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Alphabetic Reference Number.
PREVAMPFOCTRF14:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Blank User Name details.
PREVAMPFOCTRF15:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Blank Amount.
PREVAMPFOCTRF16:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Blank Remarks.
PREVAMPFOCTRF17:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Negative Amount.
PREVAMPFOCTRF18:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Blank Pin.
PREVAMPFOCTRF19:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Invalid Pin.
PREVAMPFOCTRF20:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Invalid Login ID.
PREVAMPFOCTRF21:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT initiation for category {0} with parent category {1}, product type {2} with Invalid User Name.
PREVAMPFOCTRF22:PRETUPS-317|FOC Transfer|To verify that Operator user is able to perform FOCT Reject 1 for category {0} with parent category {1}, product type {2}.
PREVAMPFOCTRF23:PRETUPS-317|FOC Transfer|To verify that Operator user is able to perform FOCT Reject 2 for category {0} with parent category {1}, product type {2}.
PREVAMPFOCTRF24:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT Approval 1 for category {0} with parent category {1}, product type {2} with Alphanumeric Reference Number.
PREVAMPFOCTRF25:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT Approval 1 for category {0} with parent category {1}, product type {2} with Alphanumeric External TXN Number.
PREVAMPFOCTRF26:PRETUPS-317|FOC Transfer|To verify that Operator user is not able to perform FOCT Approval 1 for category {0} with parent category {1}, product type {2} without External TXN Number.
PREVAMPFOCTRF27:PRETUPS-317|FOC Transfer|To verify that Appropriate msg is shown for invalid transfer id at approval level serach by , product type {2}.
#O2C Batch Trf,widraw and approval and reject
FOCBTRFAPPREJ1:PRETUPS-0000|#FOCBTRFAPPREJ1|To check if bulk o2c approval api is working successfully for {0} at approval level 1.
FOCBTRFAPPREJ2:PRETUPS-0000|#FOCBTRFAPPREJ2|To check if bulk o2c approval api is working successfully for {0} at approval level 2.
FOCBTRFAPPREJ3:PRETUPS-0000|#FOCBTRFAPPREJ3|To check if bulk o2c approval api is working successfully for {0} at approval level 3.
FOCBTRFAPPREJ4:PRETUPS-0000|#FOCBTRFAPPREJ4|To check if bulk o2c approval api is working successfully for {0} at approval1 with reject.

#O2C Process Batch Trf,widraw and approval and reject 
O2CBTRFAPPREJ1:PRETUPS-0000|#O2CBTRFAPPREJ1|To check if bulk o2c approval api is working successfully for {0} at approval level 1 with Process approval Y(Approve=Y, Reject=N or Discard=D or blank).
O2CBTRFAPPREJ2:PRETUPS-0000|#O2CBTRFAPPREJ2|To check if bulk o2c approval api is working successfully for {0} at approval level 1 with Process Reject N(Approve=Y, Reject=N or Discard=D or blank).
O2CBTRFAPPREJ3:PRETUPS-0000|#O2CBTRFAPPREJ2|To check if bulk o2c approval api is working successfully for {0} at approval level 1 with Process Discard D(Approve=Y, Reject=N or Discard=D or blank).
O2CBTRFAPPREJ4:PRETUPS-0000|#O2CBTRFAPPREJ4|To check if bulk o2c approval api is working successfully for {0} at approval level 2 with Process approval Y(Approve=Y, Reject=N or Discard=D or blank).

#CU CHANNELUSER LIST
CUCUL1:PRETUPS-13376|#CHANNELUSER_LIST|To check if ChannelUser List API is working successfully for {0}.
CUCUL2:PRETUPS-13377|#CHANNELUSER_LIST|To check if ChannelUser List API is not working successfully for {0} if category is invalid.
CUCUL3:PRETUPS-13378|#CHANNELUSER_LIST|To check if ChannelUser List api is not working successfully for {0} if domain is invalid.
CUCUL4:PRETUPS-13379|#CHANNELUSER_LIST|To check if ChannelUser List api is not working successfully for {0} if externalNG is invalid.
CUCUL5:PRETUPS-13380|#CHANNELUSER_LIST|To check if ChannelUser List api is not working successfully for {0} if geography is invalid.
CUCUL6:PRETUPS-13381|#CHANNELUSER_LIST|To check if ChannelUser List api is not working successfully for {0} if status is invalid.
CUCUL7:PRETUPS-13382|#CHANNELUSER_LIST|To check if ChannelUser List api is not working successfully for {0} if externalNG is blank.

#DOWNLOAD USER REPORT
DUR1:PRETUPS-00000|#DWNLD_USER_REPORT|To check if Download User Report API is working successfully for {0}.
DUR2:PRETUPS-00000|#DWNLD_USER_REPORT|To check if Download User Report API is not working successfully for {0} if category is invalid.
DUR3:PRETUPS-00000|#DWNLD_USER_REPORT|To check if Download User Report api is not working successfully for {0} if domain is invalid.
DUR5:PRETUPS-00000|#DWNLD_USER_REPORT|To check if Download User Report api is not working successfully for {0} if geography is invalid.
DUR6:PRETUPS-00000|#DWNLD_USER_REPORT|To check if Download User Report api is not working successfully for {0} if status is invalid.
DUR7:PRETUPS-00000|#DWNLD_USER_REPORT|To check if Download User Report api is not working successfully for {0} if externalNG is blank.

#Staff USER SERVICE
SUS1:PRETUPS-13424|#STAFF USER SERVICE|To check if staff user service is working successfully for {0}.
SUS2:PRETUPS-13426|#STAFF USER SERVICE|To check if staff user service is working successfully for {0} when token is invalid.

#Staff User Roles
SUF1:PRETUPS-0000|#STAFF USER ROLES|To check if staff user roles is working successfully for {0}.
SUF2:PRETUPS-0000|#STAFF USER ROLES|To check if staff user roles is working successfully for {0} when token is invalid.


#Get Staff Users
GETSTAFFUSERS1:PRETUPS-6914|#GETSTAFFUSERS|To check if GET STAFF USERS API is working successfully for {0}.
GETSTAFFUSERS2:PRETUPS-6915|#GETSTAFFUSERS|To check if GET STAFF USERS API  is not working successfully for {0} if token is invalid.

#O2c Batch Commission User List Download
BATCHO2CCOMSNUSRLSTDWNLDT1:PRETUPS-6914|#BATCHO2CCOMSNUSRLSTDWNLDT|To check if O2c Batch Commission User List Download API is working successfully for {0} for product {1}.
BATCHO2CCOMSNUSRLSTDWNLDT2:PRETUPS-6914|#BATCHO2CCOMSNUSRLSTDWNLDT|To check if O2c Batch Commission User List Download API is not working successfully for {0} for product {1} if file type is not defined.
BATCHO2CCOMSNUSRLSTDWNLDT3:PRETUPS-6914|#BATCHO2CCOMSNUSRLSTDWNLDT|To check if O2c Batch Commission User List Download API is not working successfully for {0} for product {1} if category name is not defined.
BATCHO2CCOMSNUSRLSTDWNLDT4:PRETUPS-6914|#BATCHO2CCOMSNUSRLSTDWNLDT|To check if O2c Batch Commission User List Download API is not working successfully for {0} for product {1} if token generated is invalid.
BATCHO2CCOMSNUSRLSTDWNLDT5:PRETUPS-6914|#BATCHO2CCOMSNUSRLSTDWNLDT|To check if O2c Batch Commission User List Download API is not working successfully for {0} for product {1} if domain type is not defined.

#View Channel User
PREVAMPVCU1:PRETUPS-317|View Channel User|To verify that Channel User is able to View Channel User for {1} with MSISDN successfully by {0}.
PREVAMPVCU2:PRETUPS-317|View Channel User|To verify that Channel User is able to View Channel User for {1} with LoginID successfully by {0}.
PREVAMPVCU3:PRETUPS-317|View Channel User|To verify that Channel User is able to View Channel User for {1} with User Name successfully by {0}.
PREVAMPVCU4:PRETUPS-317|View Channel User|To verify that Channel User is able to reset the fields in View Channel User.
PREVAMPVCU5:PRETUPS-317|View Channel User|To verify that Channel User is able to not able to View Channel User with Invalid Search Field.
PREVAMPVCU6:PRETUPS-317|View Channel User|To verify that Channel User is able to View Channel User for Active Users successfully by {0}.
PREVAMPVCU7:PRETUPS-317|View Channel User|To verify that Channel User is able to Hide Filters in View Channel Users successfully by {0}.


#Access Management Channel User
PREVAMPVCAM1:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to Send Password Child Channel User for {1} by {0}.
PREVAMPVCAM2:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to Unblock Password Child Channel User for {1} by {0}.
PREVAMPVCAM3:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to Unblock & Send Password Child Channel User for {1} by {0}.
PREVAMPVCAM4:PRETUPS-317|Access Management Channel User|To verify that Channel User is not able to Send Password Child Channel User for {1} by {0} with Blank Remarks.
PREVAMPVCAM5:PRETUPS-317|Access Management Channel User|To verify that Channel User is not able to Unblock Password Child Channel User for {1} by {0} with Blank Remarks.
PREVAMPVCAM6:PRETUPS-317|Access Management Channel User|To verify that Channel User is not able to Unblock & Send Password Child Channel User for {1} by {0} with Blank Remarks.
PREVAMPVCAM7:PRETUPS-317|Access Management Channel User|To verify that Channel User is not able to Unblock & Send Password Child Channel User for {1} by {0} with Blank Remarks.
PREVAMPVCAM8:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to click on View More on Access Management Page.
PREVAMPVCAM9:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to Reset Password Child Channel User for {1} by {0}.

#User Verification
UVF1:PRETUPS-0000|#USER VERIFICATION|To check if user verification is working successfully for {0} when loginId exists.
UVF2:PRETUPS-0000|#USER VERIFICATION|To check if user verification is working successfully for {0} when loginId does not exists.
UVF3:PRETUPS-0000|#USER VERIFICATION|To check if user verification is working successfully for {0} when token is invalid.

#BAR UNBAR CHANNEL USER
BARUNBAR1:PRETUPS-13429|#BARUNBAR|To check if bar user api is  working successfully for {0}  if channel user is able to Bar  another channel user in its hierarchy
BARUNBAR2:PRETUPS-13430|#BARUNBAR|To check if bar user api is  not working successfully for {0}  if channel user is not able to Bar  another channel user not in its hierarchy
BARUNBAR3:PRETUPS-13431|#BARUNBAR|To check if bar user api is  not working successfully for {0}  if Msisdn is missing in the request
BARUNBAR4:PRETUPS-13432|#BARUNBAR|To check if bar user api is  not working successfully for {0}  if Barring type is missing in the request
BARUNBAR5:PRETUPS-13433|#BARUNBAR|To check if bar user api is  not working successfully for {0}  if Barred user type is missing in the request
BARUNBAR6:PRETUPS-00000|#BARUNBAR|To check if un-bar user api is  working successfully for {0}  if channel user is able to un-Bar  another channel user in its hierarchy

#FETCH BARRED CHANNEL USER LIST
FETCHBARREDUSER1:PRETUPS-13429|#FETCH BARRED CHANNEL USER LIST|To check if bar user api is  working successfully for {0}  if channel user is able to view barred user list using msisdn.
FETCHBARREDUSER2:PRETUPS-13430|#FETCH BARRED CHANNEL USER LIST|To check if bar user api is  working successfully for {0}  if channel user is able to view barred user list using username
FETCHBARREDUSER3:PRETUPS-13431|#FETCH BARRED CHANNEL USER LIST|To check if bar user api is  working successfully for {0}  if channel user is able to view barred user list using filter
FETCHBARREDUSER4:PRETUPS-13432|#FETCH BARRED CHANNEL USER LIST|To check if bar user api is not  working successfully for {0}  if channel user is trying view barred user list using msisdn which is not in its hierarchy list.


#GET ROLES LIST
GETROLES1:PRETUPS-00000|#FETCH BARRED CHANNEL USER LIST|To check if roles/services api if working for {0} .
GETROLES2:PRETUPS-00000|#FETCH BARRED CHANNEL USER LIST|To check if roles/services api is not working for {0}  if category is not input.
GETROLES3:PRETUPS-00000|#FETCH BARRED CHANNEL USER LIST|To check if roles/services api is not working for {0}  if network code is not input.

#GET C2C BULK APP LIST
GETC2CBULKAPPLIST1:PRETUPS-14848|#GET C2C BULK APP LIST|To check if C2C bulk app list api is working for {0} .
GETC2CBULKAPPLIST2:PRETUPS-14849|#GET C2C BULK APP LIST|To check if C2C bulk app list api is not working for {0}  if token  is empty.
GETC2CBULKAPPLIST3:PRETUPS-14850|#GET C2C BULK APP LIST|To check if C2C bulk app list api is not working for {0}  if category code is null.

PREVAMPVCAM1:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to View Channel User for {1} with MSISDN successfully by {0}.

#Passbook Search API
PBSEARCH1:PRETUPS-001|Passbook Search api|To Verify the Positive scenario {0}
PBSEARCH2:PRETUPS-002|Passbook Search api|To Verify the Response with invalid or empty Network Code {0}
PBSEARCH3:PRETUPS-003|Passbook Search api|To Verify the Response with invalid or blank fromDate {0}
PBSEARCH4:PRETUPS-004|Passbook Search api|To Verify the Response with invalid or blank todate {0}

#Passbook Download API
PBDOWNLOAD1:PRETUPS-001|Passbook Download api|To Verify the Positive scenario {0}
PBDOWNLOAD2:PRETUPS-002|Passbook Download api|To Verify the Response with invalid or empty Network Code {0}
PBDOWNLOAD3:PRETUPS-003|Passbook Download api|To Verify the Response with invalid or blank fromDate {0}
PBDOWNLOAD4:PRETUPS-004|Passbook Download api|To Verify the Response with invalid or blank todate {0}

#Low Threshold Report API
LTREPORT1:PRETUPS-001|Low Threshold Report api|To Verify the Positive scenario {0}
LTREPORT2:PRETUPS-002|Low Threshold Report api|To Verify the Response with empty invalid or Network Code {0}
LTREPORT3:PRETUPS-003|Low Threshold Report api|To Verify the Response with blank invalid or fromDate {0}
LTREPORT4:PRETUPS-004|Low Threshold Report api|To Verify the Response with blank invalid or todate {0}
LTREPORT5:PRETUPS-005|Low Threshold Report api|To Verify the Response with blank invalid or category field {0}
LTREPORT6:PRETUPS-006|Low Threshold Report api|To Verify the Response with blank invalid or domain field {0}
LTREPORT7:PRETUPS-007|Low Threshold Report api|To Verify the Response with blank invalid or geography field {0}
LTREPORT8:PRETUPS-008|Low Threshold Report api|To Verify the Response with blank invalid or threshold field {0}

#Low Threshold Download API
LTDOWNLOAD1:PRETUPS-001|Low Threshold Download api|To Verify the Positive scenario {0}
LTDOWNLOAD2:PRETUPS-002|Low Threshold Download api|To Verify the Response with invalid or empty Network Code {0}
LTDOWNLOAD3:PRETUPS-003|Low Threshold Download api|To Verify the Response with invalid or blank fromDate {0}
LTDOWNLOAD4:PRETUPS-004|Low Threshold Download api|To Verify the Response with invalid or blank todate {0}
LTDOWNLOAD5:PRETUPS-005|Low Threshold Download api|To Verify the Response with invalid or blank category field {0}
LTDOWNLOAD6:PRETUPS-006|Low Threshold Download api|To Verify the Response with invalid or blank domain field {0}
LTDOWNLOAD7:PRETUPS-007|Low Threshold Download api|To Verify the Response with invalid or blank geography field {0}
LTDOWNLOAD8:PRETUPS-008|Low Threshold Download api|To Verify the Response with invalid or blank threshold field {0}

#Pin Password History Search API
PPHSEARCH1:PRETUPS-001|Pin Password History Search api|To Verify the Positive scenario for PIN {0}
PPHSEARCH2:PRETUPS-002|Pin Password History Search api|To Verify the Response with invalid or empty Network Code {0}
PPHSEARCH3:PRETUPS-003|Pin Password History Search api|To Verify the Response with invalid or blank fromDate {0}
PPHSEARCH4:PRETUPS-004|Pin Password History Search api|To Verify the Response with invalid or blank todate {0}
PPHSEARCH5:PRETUPS-005|Pin Password History Search api|To Verify the Response with invalid or blank category field {0}
PPHSEARCH6:PRETUPS-006|Pin Password History Search api|To Verify the Response with invalid or blank domain field {0}
PPHSEARCH7:PRETUPS-007|Pin Password History Search api|To Verify the Response with invalid or blank reqType field {0}
PPHSEARCH8:PRETUPS-008|Pin Password History Search api|To Verify the Response with invalid or blank userType field {0}
PPHSEARCH9:PRETUPS-009|Pin Password History Search api|To Verify the Positive scenario for PWD {0}

#Pin Password History Download API
PPHDOWNLOAD1:PRETUPS-001|Pin Password History Download api|To Verify the Positive scenario for PIN {0}
PPHDOWNLOAD2:PRETUPS-002|Pin Password History Download api|To Verify the Response with invalid or empty Network Code {0}
PPHDOWNLOAD3:PRETUPS-003|Pin Password History Download api|To Verify the Response with invalid or blank fromDate {0}
PPHDOWNLOAD4:PRETUPS-004|Pin Password History Download api|To Verify the Response with invalid or blank todate {0}
PPHDOWNLOAD5:PRETUPS-005|Pin Password History Download api|To Verify the Response with invalid or blank categorycode field {0}
PPHDOWNLOAD6:PRETUPS-006|Pin Password History Download api|To Verify the Response with invalid or blank domain field {0}
PPHDOWNLOAD7:PRETUPS-007|Pin Password History Download api|To Verify the Response with invalid or blank reqType field {0}
PPHDOWNLOAD8:PRETUPS-008|Pin Password History Download api|To Verify the Response with invalid or blank userType field {0}
PPHDOWNLOAD9:PRETUPS-009|Pin Password History Download api|To Verify the Positive scenario for PWD {0}

#C2S Transfer Commission Report API
C2STCREPORT1:PRETUPS-001|C2S Transfer Commission Report api|To Verify the Positive scenario {0}
C2STCREPORT2:PRETUPS-002|C2S Transfer Commission Report api|To Verify the Response with invalid or empty Network Code {0}
C2STCREPORT3:PRETUPS-003|C2S Transfer Commission Report api|To Verify the Response with invalid or blank fromDate {0}
C2STCREPORT4:PRETUPS-004|C2S Transfer Commission Report api|To Verify the Response with invalid or blank todate {0}
C2STCREPORT5:PRETUPS-005|C2S Transfer Commission Report api|To Verify the Response with invalid or blank categorycode field {0}
C2STCREPORT6:PRETUPS-006|C2S Transfer Commission Report api|To Verify the Response with invalid or blank domain field {0}
C2STCREPORT7:PRETUPS-007|C2S Transfer Commission Report api|To Verify the Response with invalid or blank geography field {0}
C2STCREPORT8:PRETUPS-008|C2S Transfer Commission Report api|To Verify the Response with invalid or blank service field {0}
C2STCREPORT9:PRETUPS-009|C2S Transfer Commission Report api|To Verify the Response with invalid or blank transStatus field {0}

#C2S Transfer Commission Report Download API
C2STCRDOWNLOAD1:PRETUPS-001|C2S Transfer Commission Report Download api|To Verify the Positive scenario {0}
C2STCRDOWNLOAD2:PRETUPS-002|C2S Transfer Commission Report Download api|To Verify the Response with invalid or empty Network Code {0}
C2STCRDOWNLOAD3:PRETUPS-003|C2S Transfer Commission Report Download api|To Verify the Response with invalid or blank fromDate {0}
C2STCRDOWNLOAD4:PRETUPS-004|C2S Transfer Commission Report Download api|To Verify the Response with invalid or blank todate {0}
C2STCRDOWNLOAD5:PRETUPS-005|C2S Transfer Commission Report Download api|To Verify the Response with invalid or blank categorycode field {0}
C2STCRDOWNLOAD6:PRETUPS-006|C2S Transfer Commission Report Download api|To Verify the Response with invalid or blank domain field {0}
C2STCRDOWNLOAD7:PRETUPS-007|C2S Transfer Commission Report Download api|To Verify the Response with invalid or blank geography field {0}
C2STCRDOWNLOAD8:PRETUPS-008|C2S Transfer Commission Report Download api|To Verify the Response with invalid or blank service field {0}
C2STCRDOWNLOAD9:PRETUPS-009|C2S Transfer Commission Report Download api|To Verify the Response with invalid or blank transStatus field {0}

#C2C Transfer Commission Report API
C2CTCREPORT1:PRETUPS-001|C2C Transfer Commission Report api|Verify that API for {0} is working with all valid inputs.
C2CTCREPORT2:PRETUPS-002|C2C Transfer Commission Report api|Verify that API for {0} is working when distribution type is selected as Stock.
C2CTCREPORT3:PRETUPS-003|C2C Transfer Commission Report api|Verify that API for {0} is working when distribution type is selected as Voucher.
C2CTCREPORT4:PRETUPS-004|C2C Transfer Commission Report api|Verify that API for {0} is working when transfer sub type is selected as Transfer.
C2CTCREPORT5:PRETUPS-005|C2C Transfer Commission Report api|Verify that API for {0} is working when transfer sub type is selected as Return.
C2CTCREPORT6:PRETUPS-006|C2C Transfer Commission Report api|Verify that API for {0} is working when transfer sub type is selected as Withdraw.
C2CTCREPORT7:PRETUPS-007|C2C Transfer Commission Report api|Verify that API for {0} is working when transfer sub type is selected as Reverse.
C2CTCREPORT8:PRETUPS-008|C2C Transfer Commission Report api|Verify that API for {0} is not working when fromDate entered is greater that toDate.
C2CTCREPORT9:PRETUPS-009|C2C Transfer Commission Report api|Verify that API for {0} is not working when sender msisdn entered is invalid.
C2CTCREPORT10:PRETUPS-010|C2C Transfer Commission Report api|Verify that API for {0} is not working when sender msisdn entered is blank.
C2CTCREPORT11:PRETUPS-011|C2C Transfer Commission Report api|Verify that API for {0} is not working when receiver msisdn entered is invalid.
C2CTCREPORT12:PRETUPS-013|C2C Transfer Commission Report api|Verify that API is working when included staff details.
C2CTCREPORT13:PRETUPS-014|C2C Transfer Commission Report api|Verify that API for {0} is working when entered sender and receiver msisdn.

#C2C Transfer Commission Report Download API
C2CTCRDOWNLOAD1:PRETUPS-001|C2C Transfer Commission Report Download api|Verify that API for {0} is working with all valid inputs.
C2CTCRDOWNLOAD2:PRETUPS-002|C2C Transfer Commission Report Download api|Verify that API for {0} is working when distribution type is selected as Stock.
C2CTCRDOWNLOAD3:PRETUPS-003|C2C Transfer Commission Report Download api|Verify that API for {0} is working when distribution type is selected as Voucher.
C2CTCRDOWNLOAD4:PRETUPS-004|C2C Transfer Commission Report Download api|Verify that API for {0} is working when transfer sub type is selected as Transfer.
C2CTCRDOWNLOAD5:PRETUPS-005|C2C Transfer Commission Report Download api|Verify that API for {0} is working when transfer sub type is selected as Return.
C2CTCRDOWNLOAD6:PRETUPS-006|C2C Transfer Commission Report Download api|Verify that API for {0} is working when transfer sub type is selected as Withdraw.
C2CTCRDOWNLOAD7:PRETUPS-007|C2C Transfer Commission Report Download api| Verify that API for {0} is working when transfer sub type is selected as Reverse.
C2CTCRDOWNLOAD8:PRETUPS-008|C2C Transfer Commission Report Download api|Verify API for {0} is not working when fromDate entered is greater that toDate.
C2CTCRDOWNLOAD9:PRETUPS-009|C2C Transfer Commission Report Download api| Verify that API for {0} is working when included staff details.
C2CTCRDOWNLOAD10:PRETUPS-010|C2C Transfer Commission Report Download api|Verify that API for {0} is not working when username entered in user is same as in transfer user.


#Fetch Username Autosearch API
FUAUTOSEARCH1:PRETUPS-001|Fetch Username Autosearch api|To Verify the Positive scenario {0}
FUAUTOSEARCH2:PRETUPS-002|Fetch Username Autosearch api|To Verify the Response with invalid or empty categoryCode {0}
FUAUTOSEARCH3:PRETUPS-003|Fetch Username Autosearch api|To Verify the Response with invalid or blank domainCode {0}
FUAUTOSEARCH4:PRETUPS-004|Fetch Username Autosearch api|To Verify the Response with invalid or blank geography {0}
FUAUTOSEARCH5:PRETUPS-005|Fetch Username Autosearch api|To Verify the Response with invalid or blank userName {0}

#O2C Transfer Acknowledgement Details API
O2CTADETAILS1:PRETUPS-001|O2C Transfer Acknowledgement Details api|To Verify the Positive scenario {0}
O2CTADETAILS2:PRETUPS-002|O2C Transfer Acknowledgement Details api|To Verify the Response with invalid or empty distributionType {0}
O2CTADETAILS3:PRETUPS-003|O2C Transfer Acknowledgement Details api|To Verify the Response with invalid or blank transactionID {0}

#Commission Slab Details API
CSDETAILS1:PRETUPS-001|Commission Slab Details api|To Verify the Positive scenario {0}
CSDETAILS2:PRETUPS-002|Commission Slab Details api|To Verify the Response with invalid or empty categoryCode {0}
CSDETAILS3:PRETUPS-003|Commission Slab Details api|To Verify the Response with invalid or blank domainCode {0}
CSDETAILS4:PRETUPS-004|Commission Slab Details api|To Verify the Response with invalid or blank geography {0}
CSDETAILS5:PRETUPS-005|Commission Slab Details api|To Verify the Response with invalid or blank userId {0}

#Parent and Owner Profile Info API
POPINFO1:PRETUPS-001|Parent and Owner Profile Info api|To Verify the Positive scenario {0}
POPINFO2:PRETUPS-002|Parent and Owner Profile Info api|To Verify the Response with invalid or empty categoryCode {0}
POPINFO3:PRETUPS-003|Parent and Owner Profile Info api|To Verify the Response with invalid or blank domainCode {0}
POPINFO4:PRETUPS-004|Parent and Owner Profile Info api|To Verify the Response with invalid or blank geography {0}
POPINFO5:PRETUPS-005|Parent and Owner Profile Info api|To Verify the Response with invalid or blank userId {0}

#O2C Transfer Details Seacrh Report API
O2CTDSREPORT1:PRETUPS-001|O2C Transfer Details Seacrh Report api|To Verify the Positive scenario {0}
O2CTDSREPORT2:PRETUPS-002|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or empty Network Code {0}
O2CTDSREPORT3:PRETUPS-003|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or blank fromDate {0}
O2CTDSREPORT4:PRETUPS-004|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or blank todate {0}
O2CTDSREPORT5:PRETUPS-005|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or blank categorycode field {0}
O2CTDSREPORT6:PRETUPS-006|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or blank domain field {0}
O2CTDSREPORT7:PRETUPS-007|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or blank geography field {0}
O2CTDSREPORT8:PRETUPS-008|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or blank transferSubType field {0}
O2CTDSREPORT9:PRETUPS-009|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or blank transferUserCategory field {0}
O2CTDSREPORT10:PRETUPS-010|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or blank user field {0}
O2CTDSREPORT11:PRETUPS-011|O2C Transfer Details Seacrh Report api|To Verify the Response with invalid or blank distributionType field {0}
O2CTDSREPORT12:PRETUPS-012|O2C Transfer Details Seacrh Report api|Verify that API is working when the value in distribution type is passed as STOCK, transfer sub type as ALL and transfer category as ALL for {0}.
O2CTDSREPORT13:PRETUPS-012|O2C Transfer Details Seacrh Report api|Verify that API is not working when the user id entered doesn't belongs to the category code for {0}.

#O2C Transfer Details Report Download API
O2CTDRDOWNLOAD1:PRETUPS-001|O2C Transfer Details Report Download api|To Verify the Positive scenario {0}
O2CTDRDOWNLOAD2:PRETUPS-002|O2C Transfer Details Report Download api|To Verify the Response with invalid or empty Network Code {0}
O2CTDRDOWNLOAD3:PRETUPS-003|O2C Transfer Details Report Download api|To Verify the Response with invalid or blank fromDate {0}
O2CTDRDOWNLOAD4:PRETUPS-004|O2C Transfer Details Report Download api|To Verify the Response with invalid or blank todate {0}
O2CTDRDOWNLOAD5:PRETUPS-005|O2C Transfer Details Report Download api|To Verify the Response with invalid or blank categorycode field {0}
O2CTDRDOWNLOAD6:PRETUPS-006|O2C Transfer Details Report Download api|To Verify the Response with invalid or blank domain field {0}
O2CTDRDOWNLOAD7:PRETUPS-007|O2C Transfer Details Report Download api|To Verify the Response with invalid or blank geography field {0}
O2CTDRDOWNLOAD8:PRETUPS-008|O2C Transfer Details Report Download api|To Verify the Response with invalid or blank transferSubType field {0}
O2CTDRDOWNLOAD9:PRETUPS-009|O2C Transfer Details Report Download api|To Verify the Response with invalid or blank transferUserCategory field {0}
O2CTDRDOWNLOAD10:PRETUPS-010|O2C Transfer Details Report Download api|To Verify the Response with invalid or blank user field {0}
O2CTDRDOWNLOAD11:PRETUPS-011|O2C Transfer Details Report Download api|To Verify the Response with invalid or blank distributionType field {0}
O2CTDRDOWNLOAD12:PRETUPS-011|O2C Transfer Details Report Download api|Verify that the O2C transfer report is getting downloaded based on the file format selected for {0}.

#O2C TRANSFER ACKNOWLEDGEMENT DETAILS DOWNLOAD API
O2CTADDOWNLOAD1:PRETUPS-001|O2C Transfer Acknowledgement Details Download api|To Verify the Positive scenario {0}
O2CTADDOWNLOAD2:PRETUPS-002|O2C Transfer Acknowledgement Details Download api|To Verify the Response with invalid or empty Network Code {0}
O2CTADDOWNLOAD3:PRETUPS-003|O2C Transfer Acknowledgement Details Download api|To Verify the Response with invalid or blank fromDate {0}
O2CTADDOWNLOAD4:PRETUPS-004|O2C Transfer Acknowledgement Details Download api|To Verify the Response with invalid or blank todate {0}
O2CTADDOWNLOAD5:PRETUPS-005|O2C Transfer Acknowledgement Details Download api|To Verify the Response with invalid or blank categorycode field {0}
O2CTADDOWNLOAD6:PRETUPS-006|O2C Transfer Acknowledgement Details Download api|To Verify the Response with invalid or blank domain field {0}
O2CTADDOWNLOAD7:PRETUPS-007|O2C Transfer Acknowledgement Details Download api|To Verify the Response with invalid or blank geography field {0}
O2CTADDOWNLOAD8:PRETUPS-008|O2C Transfer Acknowledgement Details Download api|To Verify the Response with invalid or blank transferSubType field {0}
O2CTADDOWNLOAD9:PRETUPS-009|O2C Transfer Acknowledgement Details Download api|To Verify the Response with invalid or blank transferUserCategory field {0}
O2CTADDOWNLOAD10:PRETUPS-010|O2C Transfer Acknowledgement Details Download api|To Verify the Response with invalid or blank user field {0}

#C2S Additional Commission Summary Search API
C2SACSSEARCH1:PRETUPS-001|C2S Additional Commission Summary Search api|To Verify the Positive scenario {0}
C2SACSSEARCH2:PRETUPS-002|C2S Additional Commission Summary Search api|To Verify the Response with invalid or empty category Code {0}
C2SACSSEARCH3:PRETUPS-003|C2S Additional Commission Summary Search api|To Verify the Response with invalid or blank dailyOrmonthlyOption field {0}
C2SACSSEARCH4:PRETUPS-004|C2S Additional Commission Summary Search api|To Verify the Response with invalid or blank domain field {0}
C2SACSSEARCH5:PRETUPS-005|C2S Additional Commission Summary Search api|To Verify the Response with invalid or blank fromDate {0}
C2SACSSEARCH6:PRETUPS-006|C2S Additional Commission Summary Search api|To Verify the Response with invalid or blank fromMonthYear field {0}
C2SACSSEARCH7:PRETUPS-007|C2S Additional Commission Summary Search api|To Verify the Response with invalid or blank geography field {0}
C2SACSSEARCH8:PRETUPS-008|C2S Additional Commission Summary Search api|To Verify the Response with invalid or blank service field {0}
C2SACSSEARCH9:PRETUPS-009|C2S Additional Commission Summary Search api|To Verify the Response with invalid or blank todate {0}
C2SACSSEARCH10:PRETUPS-010|C2S Additional Commission Summary Search api|To Verify the Response with invalid or blank toMonthYear field {0}
C2SACSSEARCH11:PRETUPS-011|C2S Additional Commission Summary Search api|To Verify the Response with dailyOrmonthlyOption field {0}

#C2S Additional Commission Summary Report Download API
C2SACSRDOWNLOAD1:PRETUPS-001|C2S Additional Commission Summary Report Download api|To Verify the Positive scenario {0}
C2SACSRDOWNLOAD2:PRETUPS-002|C2S Additional Commission Summary Report Download api|To Verify the Response with invalid or empty category Code {0}
C2SACSRDOWNLOAD3:PRETUPS-003|C2S Additional Commission Summary Report Download api|To Verify the Response with invalid or blank dailyOrmonthlyOption field {0}
C2SACSRDOWNLOAD4:PRETUPS-004|C2S Additional Commission Summary Report Download api|To Verify the Response with invalid or blank domain field {0}
C2SACSRDOWNLOAD5:PRETUPS-005|C2S Additional Commission Summary Report Download api|To Verify the Response with invalid or blank fromDate {0}
C2SACSRDOWNLOAD6:PRETUPS-006|C2S Additional Commission Summary Report Download api|To Verify the Response with invalid or blank fromMonthYear field {0}
C2SACSRDOWNLOAD7:PRETUPS-007|C2S Additional Commission Summary Report Download api|To Verify the Response with invalid or blank geography field {0}
C2SACSRDOWNLOAD8:PRETUPS-008|C2S Additional Commission Summary Report Download api|To Verify the Response with invalid or blank service field {0}
C2SACSRDOWNLOAD9:PRETUPS-009|C2S Additional Commission Summary Report Download api|To Verify the Response with invalid or blank todate {0}
C2SACSRDOWNLOAD10:PRETUPS-010|C2S Additional Commission Summary Report Download api|To Verify the Response with invalid or blank toMonthYear field {0}
C2SACSRDOWNLOAD11:PRETUPS-011|C2S Additional Commission Summary Report Download api|To Verify the Response with dailyOrmonthlyOption field {0}

#Passbook Page Revamp
PREVAMPPASSBOOK1:PRETUPS-001|Passbook page|To verify the login and logout for {0} category user is able to perform Passbook page proceed button
PREVAMPPASSBOOK2:PRETUPS-002|Passbook page|To verify the hide link for {0}
PREVAMPPASSBOOK3:PRETUPS-003|Passbook page|To verify the download link for {0}
PREVAMPPASSBOOK4:PRETUPS-004|Passbook page|To verify date range field for {0}
PREVAMPPASSBOOK5:PRETUPS-005|Passbook page|To verify the product code dropdown for {0}

#Low Threshold Transaction Report Page Revamp
PREVAMPLOWTTREPORT1:PRETUPS-001|Low Threshold Transaction Report Page|To verify the login and logout for {0} category user is able to perform Passbook page proceed button
PREVAMPLOWTTREPORT2:PRETUPS-002|Low Threshold Transaction Report Page|To verify the hide link for {0}
PREVAMPLOWTTREPORT3:PRETUPS-003|Low Threshold Transaction Report Page|To verify the download link for {0}
PREVAMPLOWTTREPORT4:PRETUPS-004|Low Threshold Transaction Report Page|To verify date range field for {0}
PREVAMPLOWTTREPORT5:PRETUPS-005|Low Threshold Transaction Report Page|To verify the product code dropdown for {0}







PREVAMPVCAM1:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to View Channel User for {1} with MSISDN successfully by {0}.

PREVAMPVCAM1:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to Send Password Child Channel User for {1} by {0}.
PREVAMPVCAM2:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to Unblock Password Child Channel User for {1} by {0}.
PREVAMPVCAM3:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to Unblock & Send Password Child Channel User for {1} by {0}.
PREVAMPVCAM4:PRETUPS-317|Access Management Channel User|To verify that Channel User is not able to Send Password Child Channel User for {1} by {0} with Blank Remarks.
PREVAMPVCAM5:PRETUPS-317|Access Management Channel User|To verify that Channel User is not able to Unblock Password Child Channel User for {1} by {0} with Blank Remarks.
PREVAMPVCAM6:PRETUPS-317|Access Management Channel User|To verify that Channel User is not able to Unblock & Send Password Child Channel User for {1} by {0} with Blank Remarks.
PREVAMPVCAM7:PRETUPS-317|Access Management Channel User|To verify that Channel User is not able to Unblock & Send Password Child Channel User for {1} by {0} with Blank Remarks.
PREVAMPVCAM8:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to click on View More on Access Management Page.
PREVAMPVCAM9:PRETUPS-317|Access Management Channel User|To verify that Channel User is able to Reset Password Child Channel User for {1} by {0}.

#User Verification
UVF1:PRETUPS-0000|#USER VERIFICATION|To check if user verification is working successfully for {0} when loginId exists.
UVF2:PRETUPS-0000|#USER VERIFICATION|To check if user verification is working successfully for {0} when loginId does not exists.
UVF3:PRETUPS-0000|#USER VERIFICATION|To check if user verification is working successfully for {0} when token is invalid.

#BAR UNBAR CHANNEL USER
BARUNBAR1:PRETUPS-13429|#BARUNBAR|To check if bar user api is  working successfully for {0}  if channel user is able to Bar  another channel user in its hierarchy
BARUNBAR2:PRETUPS-13430|#BARUNBAR|To check if bar user api is  not working successfully for {0}  if channel user is not able to Bar  another channel user not in its hierarchy
BARUNBAR3:PRETUPS-13431|#BARUNBAR|To check if bar user api is  not working successfully for {0}  if Msisdn is missing in the request
BARUNBAR4:PRETUPS-13432|#BARUNBAR|To check if bar user api is  not working successfully for {0}  if Barring type is missing in the request
BARUNBAR5:PRETUPS-13433|#BARUNBAR|To check if bar user api is  not working successfully for {0}  if Barred user type is missing in the request
BARUNBAR6:PRETUPS-00000|#BARUNBAR|To check if un-bar user api is  working successfully for {0}  if channel user is able to un-Bar  another channel user in its hierarchy

#FETCH BARRED CHANNEL USER LIST
FETCHBARREDUSER1:PRETUPS-13429|#FETCH BARRED CHANNEL USER LIST|To check if bar user api is  working successfully for {0}  if channel user is able to view barred user list using msisdn.
FETCHBARREDUSER2:PRETUPS-13430|#FETCH BARRED CHANNEL USER LIST|To check if bar user api is  working successfully for {0}  if channel user is able to view barred user list using username
FETCHBARREDUSER3:PRETUPS-13431|#FETCH BARRED CHANNEL USER LIST|To check if bar user api is  working successfully for {0}  if channel user is able to view barred user list using filter
FETCHBARREDUSER4:PRETUPS-13432|#FETCH BARRED CHANNEL USER LIST|To check if bar user api is not  working successfully for {0}  if channel user is trying view barred user list using msisdn which is not in its hierarchy list.


#GET ROLES LIST
GETROLES1:PRETUPS-00000|#FETCH BARRED CHANNEL USER LIST|To check if roles/services api if working for {0} .
GETROLES2:PRETUPS-00000|#FETCH BARRED CHANNEL USER LIST|To check if roles/services api is not working for {0}  if category is not input.
GETROLES3:PRETUPS-00000|#FETCH BARRED CHANNEL USER LIST|To check if roles/services api is not working for {0}  if network code is not input.

#GET C2C BULK APP LIST
GETC2CBULKAPPLIST1:PRETUPS-14848|#GET C2C BULK APP LIST|To check if C2C bulk app list api is working for {0} .
GETC2CBULKAPPLIST2:PRETUPS-14849|#GET C2C BULK APP LIST|To check if C2C bulk app list api is not working for {0}  if token  is empty.
GETC2CBULKAPPLIST3:PRETUPS-14850|#GET C2C BULK APP LIST|To check if C2C bulk app list api is not working for {0}  if category code is null.

#SUSPEND RESUME API
SR1:PRETUPS-0000|#SUSPEND RESUME|To see if  channel user is able to suspend another channel user in its hierarchy successfully{0}
SR2:PRETUPS-0000|#SUSPEND RESUME|To see Validation for manadatory field remarks{0}
SR3:PRETUPS-0000|#SUSPEND RESUME|To see Validation for manadatory field reqType{0}
SR4:PRETUPS-0000|#SUSPEND RESUME|To see Validation for manadatory field usertype {0}
SR5:PRETUPS-0000|#SUSPEND RESUME|To see Validation for manadatory fields loginid{0} and msisdn{1}
SR6:PRETUPS-0000|#SUSPEND RESUME|To check validation if user can not suspend himself{0}

#GET SERVICES LIST API
SL1:PRETUPS-0000|#SERVICES LIST|To check if services list exists for given loginId or not.
SL2:PRETUPS-0000|#SERVICES LIST|To check if user verification is working successfully for when token is invalid.

#GET CATEGORY LIST API
CL1:PRETUPS-0000|#CATEGORY LIST|To check if category list exists for given domain code.
CL2:PRETUPS-0000|#CATEGORY LIST|To check if user verification is working successfully for when token is invalid.

CL3:PRETUPS-0000|#CATEGORY LIST|To check if category list does not exists for given domain code.




CL3:PRETUPS-0000|#CATEGORY LIST|To check if category list does not exists for given domain code.
CL3:PRETUPS-0000|#CATEGORY LIST|To check if category list does not exists for given domain code.

#Batch O2C Transfer
SITBO2CTRF1:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is able to perform Operator to channel Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Mobile Number.
SITBO2CTRF2:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is able to perform Operator to channel Batch Approval 1 for category {0} with parent category {1}, product type {2}.
SITBO2CTRF3:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is able to perform Operator to channel Batch Approval 2 for category {0} with parent category {1}, product type {2}.
SITBO2CTRF4:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank file.
SITBO2CTRF5:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank MSISDN.
SITBO2CTRF6:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank Payment Type.
SITBO2CTRF7:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is able to perform Operator to channel Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Approve.
SITBO2CTRF8:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is able to perform Operator to channel Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Reject.
SITBO2CTRF9:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is able to Reject Operator to channel Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBO2CTRF10:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is able to Discard Operator to channel Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBO2CTRF11:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid File Format.
SITBO2CTRF12:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Batch Name.
SITBO2CTRF13:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid External Transaction Date.
SITBO2CTRF14:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is able to perform Operator to channel Batch Transfer initiation for category {0} with parent category {1}, product type {2} with External Code.
SITBO2CTRF15:PRETUPS-417,PRETUPS-311|O2C Transfer|To validate Network Stocks on successful Operator to Channel Batch Transfer.
SITBO2CTRF16:PRETUPS-417,PRETUPS-311|O2C Transfer|To validate Receiver User Balance on successful Operator to Channel Batch Transfer.
SITBO2CTRF17:PRETUPS-1144|Batch O2C Transfer|To verify that {0} is not able to perform Batch O2C Transfer for {1} if Channel User is IN Suspended.
SITBO2CTRF18:PRETUPS-1146|Batch O2C Transfer|To verify that {0} is not able to perform Batch O2C Transfer for {1} product if Channel User's TCP is suspended.
SITBO2CTRF19:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Negative Amount.
SITBO2CTRF20:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric External Transaction Number.
SITBO2CTRF21:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric Amount.
SITBO2CTRF22:PRETUPS-317|Batch O2C Transfer|To verify that Operator user is not able to perform O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Payment Type.
SITBO2CTRF23:PRETUPS-0001|Batch O2C Transfer|To verify that success message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Mobile Number.
SITBO2CTRF24:PRETUPS-0001|Batch O2C Transfer|To verify that success message is received after performing O2C Batch Approval 1 for category {0} with parent category {1}, product type {2}.
SITBO2CTRF25:PRETUPS-0001|Batch O2C Transfer|To verify that success message is received after performing O2C Batch Approval 2 for category {0} with parent category {1}, product type {2}.
SITBO2CTRF26:PRETUPS-317|Batch O2C Transfer|To verify that proper error message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank file.
SITBO2CTRF27:PRETUPS-317|Batch O2C Transfer|To verify that proper error message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank MSISDN.
SITBO2CTRF28:PRETUPS-317|Batch O2C Transfer|To verify that proper error message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank Payment Type.
SITBO2CTRF29:PRETUPS-317|Batch O2C Transfer|To verify that success message is received after performing Operator to channel Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Approve.
SITBO2CTRF30:PRETUPS-317|Batch O2C Transfer|To verify that success message is received after performing Operator user is able to perform Operator to channel Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Reject.
SITBO2CTRF31:PRETUPS-317|Batch O2C Transfer|To verify that success message is received after performing Reject Operator to channel Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBO2CTRF32:PRETUPS-317|Batch O2C Transfer|To verify that success message is received after performing Discard Operator to channel Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBO2CTRF33:PRETUPS-317|Batch O2C Transfer|To verify that proper error message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid File Format.
SITBO2CTRF34:PRETUPS-317|Batch O2C Transfer|To verify that proper error message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Batch Name.
SITBO2CTRF35:PRETUPS-1144|Batch O2C Transfer|To verify that {0} is getting proper error message is received after performing Batch O2C Transfer for {1} if Channel User is IN Suspended.
SITBO2CTRF36:PRETUPS-317|Batch O2C Transfer|To verify that proper error message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Negative Amount.
SITBO2CTRF37:PRETUPS-317|Batch O2C Transfer|To verify that proper error message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric External Transaction Number.
SITBO2CTRF38:PRETUPS-317|Batch O2C Transfer|To verify that proper error message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric Amount.
SITBO2CTRF39:PRETUPS-317|Batch O2C Transfer|To verify that proper error message is received after performing O2C Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Payment Type.


#C2C Enquiry
C2CE01:PRETUPS-14960|C2C ENQUIRY|Channel users will be able to load all c2c details of their hierarchy by "Transaction ID". filter.
C2CE02:PRETUPS-14961|C2C ENQUIRY|Channel users will be able to load all c2c details of their hierarchy by "Mobille number" filter.
C2CE03:PRETUPS-14962|C2C ENQUIRY|Channel users will be able to load all c2c details of their hierarchy by "Advance" filter.
C2CE04:PRETUPS-14963|C2C ENQUIRY|Channel users will not able to enquire c2c details of users not in their hierarchy by anyone filter: "Transaction ID" or "Mobille number" or "Advance". A valid message should be displayed.

#C2C Batch Initiate
SC2CBATCHTRF1:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is successful.
SC2CBATCHTRF2:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is not successful when Category is Blank.
SC2CBATCHTRF3:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is not successful when Batch Name is Blank.
SC2CBATCHTRF4:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is not successful when File is not uploaded.
SC2CBATCHTRF5:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is not successful when Alphanumeric PIN is entered.
SC2CBATCHTRF6:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is not successful when ZERO PIN is entered.
SC2CBATCHTRF7:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is not successful when Empty File is uploaded.
SC2CBATCHTRF8:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is Rejected successfully.
SC2CBATCHTRF9:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is able to download user list.
SC2CBATCHTRF10:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is not able to download userlist without category.
SC2CBATCHTRF11:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is able to download user template without category.
SC2CBATCHTRF12:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is not successful when Blank PIN is entered.
SC2CBATCHTRF13:PRETUPS-313,PRETUPS-443,PRETUPS-399|C2C Transfer|To verify C2C Batch Transfer from {0} to {1} is not successful when invalid header file is uploaded.



#PIN and PWD History Page Revamp
PREVAMPPINPWDHISTORY1:PRETUPS-001|PIN and PWD History Page|Verify if {0} user will be able to login with a valid Login ID and valid PIN
PREVAMPPINPWDHISTORY2:PRETUPS-002|PIN and PWD History Page|Verify whether the PIN & PASSWORD History link for {0} user is displaying or not under Reports and Enquiries
PREVAMPPINPWDHISTORY3:PRETUPS-003|PIN and PWD History Page|Verify for user {0} whether its navigating to PIN & PASSWORD History page or not after clicking on PIN & PASSWORD History link or arrow button
PREVAMPPINPWDHISTORY4:PRETUPS-004|PIN and PWD History Page|Verify the PIN menu is selected by default for {0}
PREVAMPPINPWDHISTORY5:PRETUPS-005|PIN and PWD History Page|Verify for {0} all fields (Domain, Date range), dropdowns (User type, Category) and buttons (RESET, PROCEED) are displaying or not in Filters section under PIN menu
PREVAMPPINPWDHISTORY6:PRETUPS-005|PIN and PWD History Page|Verify for {0} by default its selected Distributor or not in Domain field under PIN menu
PREVAMPPINPWDHISTORY7:PRETUPS-005|PIN and PWD History Page|Verify "Hide" link under PIN menu for {0}
PREVAMPPINPWDHISTORY8:PRETUPS-005|PIN and PWD History Page|Verify "RESET" button after entering/selecting the all field values under PIN menu for {0}
PREVAMPPINPWDHISTORY9:PRETUPS-005|PIN and PWD History Page|Verify "RESET" button without selecting any values in all the fields under PIN menu for {0}
PREVAMPPINPWDHISTORY10:PRETUPS-005|PIN and PWD History Page|Verify to select the Date range field (From date and To date) as per system preference under PIN menu for {0}
PREVAMPPINPWDHISTORY11:PRETUPS-005|PIN and PWD History Page|Verify to select the Date range field (From date and To date) not as per system preference under PIN menu for {0}
PREVAMPPINPWDHISTORY12:PRETUPS-005|PIN and PWD History Page|Verify to select the Date range field either from date or to date only under PIN menu {0}
PREVAMPPINPWDHISTORY13:PRETUPS-005|PIN and PWD History Page|Verify "DOWNLOAD" button is displaying or not once we click on the Proceed button under PIN menu for {0}
PREVAMPPINPWDHISTORY14:PRETUPS-005|PIN and PWD History Page|Verify whether its downloading a file or not  after clicking on Download button under PIN menu for {0}
PREVAMPPINPWDHISTORY15:PRETUPS-005|PIN and PWD History Page|Verify whether its populating exact data or not after entering any column value like ("User name" or "Mobile number" or any other column value) in search text field under PIN menu for {0}
PREVAMPPINPWDHISTORY16:PRETUPS-005|PIN and PWD History Page|Verify if we enter any other column value other than the displayed column value in search text field under PIN menu for {0}
PREVAMPPINPWDHISTORY17:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not for specific page once we click on the page number under PIN menu for {0}
PREVAMPPINPWDHISTORY18:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not once we click on the previous button under PIN menu for {0}
PREVAMPPINPWDHISTORY19:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not once we click on the next button under PIN menu for {0}
PREVAMPPINPWDHISTORY20:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not once we enter particular page number then click on "Go" button under "Go to page" under PIN menu for {0}
PREVAMPPINPWDHISTORY21:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not with variant page number values (like Negative number or zero or empty or more than the maximum page number value) then click on "Go" button under "Go to page" under PIN menu for {0}
PREVAMPPINPWDHISTORY22:PRETUPS-005|PIN and PWD History Page|Verify "PROCEED" button after entering/selecting the all field values under PIN menu for {0}
PREVAMPPINPWDHISTORY23:PRETUPS-005|PIN and PWD History Page|Verify for {0} all fields (Domain, Date range), dropdowns (User type, Category) and buttons (RESET, PROCEED) are displaying or not in Filters section under Password menu
PREVAMPPINPWDHISTORY24:PRETUPS-005|PIN and PWD History Page|Verify for {0} by default its selected Distributor or not in Domain field under Password menu for {0}
PREVAMPPINPWDHISTORY25:PRETUPS-005|PIN and PWD History Page|Verify to select the Date range field (From date and To date) as per system preference under Password menu for {0}
PREVAMPPINPWDHISTORY26:PRETUPS-005|PIN and PWD History Page|Verify to select the Date range not as per the system preference under Password menu for {0}
PREVAMPPINPWDHISTORY27:PRETUPS-005|PIN and PWD History Page|Verify to select the Date range field either from date or to date only under Password menu for {0}
PREVAMPPINPWDHISTORY28:PRETUPS-005|PIN and PWD History Page|Verify "Hide" link under Password menu for {0}
PREVAMPPINPWDHISTORY29:PRETUPS-005|PIN and PWD History Page|Verify "RESET" button after entering/selecting the all field values under Password menu for {0}
PREVAMPPINPWDHISTORY30:PRETUPS-005|PIN and PWD History Page|Verify "RESET" button without selecting any values in all the fields under Password menu for {0}
PREVAMPPINPWDHISTORY31:PRETUPS-005|PIN and PWD History Page|Verify "DOWNLOAD" button is displaying or not once we click on the Proceed button under Password menu for {0}
PREVAMPPINPWDHISTORY32:PRETUPS-005|PIN and PWD History Page|Verify whether its downloading a file or not  after clicking on Download button under Password menu for {0}
PREVAMPPINPWDHISTORY33:PRETUPS-005|PIN and PWD History Page|Verify whether its populating exact data or not after entering any column value like ("User name" or "Mobile number" or any other column value) in search text field under Password menu for {0}
PREVAMPPINPWDHISTORY34:PRETUPS-005|PIN and PWD History Page|Verify if we enter any other column value other than the displayed column value in search text field under Password menu for {0}
PREVAMPPINPWDHISTORY35:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not for specific page once we click on the page number under Password menu for {0}
PREVAMPPINPWDHISTORY36:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not once we click on the previous button under Password menu for {0}
PREVAMPPINPWDHISTORY37:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not once we click on the next button under Password menu for {0}
PREVAMPPINPWDHISTORY38:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not once we enter particular page number then click on "Go" button under "Go to page" under Password menu for {0}
PREVAMPPINPWDHISTORY39:PRETUPS-005|PIN and PWD History Page|Verify "Pagination" is working or not with variant page number values (like Negative number or zero or empty or more than the maximum page number value) then click on "Go" button under "Go to page" under Password menu for {0}
PREVAMPPINPWDHISTORY40:PRETUPS-005|PIN and PWD History Page|Verify "PROCEED" button after entering/selecting the all field values under Password menu for {0}
PREVAMPPINPWDHISTORY41:PRETUPS-005|PIN and PWD History Page|Verify "Show entries dropdown field" is working or not under Password menu for {0}
PREVAMPPINPWDHISTORY42:PRETUPS-005|PIN and PWD History Page|Verify "Show entries dropdown field" is working or not under PIN menu for {0}

#Security Settings Page Revamp
PREVAMPSECSTTNGS1:PRETUPS-001|Security Settings Page|Verify if a user will be able to login with a valid Login ID and valid PIN for {0}
PREVAMPSECSTTNGS2:PRETUPS-002|Security Settings Page|Verify whether the Security Settings section is displaying or not  under loggedin icon in Home page screen for {0}
PREVAMPSECSTTNGS3:PRETUPS-002|Security Settings Page|Verify after clicking on the Security Settings link whether its navigating to Security Settings page or not for {0}
PREVAMPSECSTTNGS4:PRETUPS-002|Security Settings Page|Verify all fields Mobile number, Old PIN, New PIN, Confirm PIN, Remarks (text field) and CHANGE PIN (button) are displaying or not under PIN menu for {0}
PREVAMPSECSTTNGS5:PRETUPS-002|Security Settings Page|Verify all fields Mobile number, Old PIN, New PIN, Confirm PIN, Remarks (text field) and CHANGE PIN (button) are displaying or not under Password menu for {0}
PREVAMPSECSTTNGS6:PRETUPS-002|Security Settings Page|Verify to change or set new PIN for {0}
PREVAMPSECSTTNGS7:PRETUPS-002|Security Settings Page|Verify to change or set new PIN with wrong Old PIN for {0}
PREVAMPSECSTTNGS8:PRETUPS-002|Security Settings Page|Verify to change or set new PIN with mismatching New PIN & Confirm PIN for {0}
PREVAMPSECSTTNGS9:PRETUPS-002|Security Settings Page|Verify to change or set new PIN without entering any value in Remarks field for {0}
PREVAMPSECSTTNGS10:PRETUPS-002|Security Settings Page|Verify to change or set new Password for {0}
PREVAMPSECSTTNGS11:PRETUPS-002|Security Settings Page|Verify to change or set new Password with wrong Old Password for {0}
PREVAMPSECSTTNGS12:PRETUPS-002|Security Settings Page|Verify to change or set new Password with mismatching New Password & Confirm Password for {0}
PREVAMPSECSTTNGS13:PRETUPS-002|Security Settings Page|Verify eye icon for {0}


#Fetch Staff User Details API
FSTFUSRDTLS01:PRETUPS-001|Fetch Staff User Details API|Verify that Fetch Staff users details API is working successfully with all valid inputs for {0}
FSTFUSRDTLS02:PRETUPS-002|Fetch Staff User Details API|Verify that Fetch Staff users details API is not working when category code entered is invalid for {0}
FSTFUSRDTLS03:PRETUPS-003|Fetch Staff User Details API|Verify that Fetch Staff users details API is not working when channel user id entered is invalid for {0}
FSTFUSRDTLS04:PRETUPS-004|Fetch Staff User Details API|Verify that Fetch Staff users details API is not working when msisdn entered is invalid for {0}
FSTFUSRDTLS05:PRETUPS-004|Fetch Staff User Details API|Verify that Fetch Staff users details API is not working when domain code entered is invalid for {0}.
FSTFUSRDTLS06:PRETUPS-004|Fetch Staff User Details API|Verify that Fetch Staff users details API is not working when geography entered is invalid for {0}.
FSTFUSRDTLS07:PRETUPS-004|Fetch Staff User Details API|Verify that Fetch Staff users details API is not working when reqTab entered is invalid for {0}.
FSTFUSRDTLS08:PRETUPS-004|Fetch Staff User Details API|Verify that Fetch Staff users details API is not working if the paramaters entered in request tab and channlUserIDOrMSISDN is vice versa for {0}.



#Download Offline Report API
DLOFLRPT01:PRETUPS-001|Download Offline Report API|Verify that Offline Download Report API is working successfully with valid Report task ID for {0}.
DLOFLRPT02:PRETUPS-002|Download Offline Report API|Verify that Offline Download Report API is not working Report task ID entered is invalid for {0}.

#Download Offline Report API
CHANGENOTIFICATIONLANG01:PRETUPS-15191|Download Offline Report API|Verify that Load User Details API is working successfully with valid category {0}.
CHANGENOTIFICATIONLANG02:PRETUPS-15191|Download Offline Report API|Verify that User Phone Details API is working successfully with valid details and for {0}.
CHANGENOTIFICATIONLANG03:PRETUPS-15191|Download Offline Report API|Verify that Change Notification Language API is working successfully with valid details and for {0}.


#Loan Profile
UAPLOANPROFILE1:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is able to create Loan Profile for {0} domain and {1} category with Daily.
UAPLOANPROFILE2:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that the proper Message is displayed on successful Loan Profile Creation.
UAPLOANPROFILE3:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is able to create Loan Profile for {0} domain and {1} category with Hourly.
UAPLOANPROFILE4:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is able to create Loan Profile for {0} domain and {1} category with Percentage Premium.
UAPLOANPROFILE5:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is able to create Loan Profile for {0} domain and {1} category with Amount Premium.
UAPLOANPROFILE6:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is able to modify Loan Profile for {0} domain and {1} category.
UAPLOANPROFILE7:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is able to delete Loan Profile for {0} domain and {1} category.
UAPLOANPROFILE8:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is not able to create Loan Profile for {0} domain and {1} category without selecting Domain.
UAPLOANPROFILE9:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that elements are disabled in creating Loan Profile for {0} domain and {1} category without clicking on Product.
UAPLOANPROFILE10:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that back button is working in Loan Profile creation for  {0} domain and {1} category.
UAPLOANPROFILE11:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is not able to create Loan Profile for {0} domain and {1} category with from range more than to range.
UAPLOANPROFILE12:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is not able to create Loan Profile for {0} domain and {1} category with Slab 1 more than Slab 2.
UAPLOANPROFILE13:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is not able to create Loan Profile for {0} domain and {1} category with AlphaNumeric From Range Amount.
UAPLOANPROFILE14:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is not able to create Loan Profile for {0} domain and {1} category with AlphaNumeric To Range Amount.
UAPLOANPROFILE15:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is not able to create Loan Profile for {0} domain and {1} category with Decimal From Range.
UAPLOANPROFILE16:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is not able to create Loan Profile for {0} domain and {1} category with Decimal To Range.
UAPLOANPROFILE17:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is able to create Loan Profile for {0} domain and {1} category with Decimal Percentage Premium Rate.
UAPLOANPROFILE18:PRETUPS-334,PRETUPS-345|Loan Profile|To verify that Operator User is able to create Loan Profile for {0} domain and {1} category with Decimal Amount Premium Rate.

PIN_MANAGEMENT01:PRETUPS-15274|PIN MANAGEMENT|To check pin change required on Transaction  when user is not new user loggedin say pinchnagerequired =false and status =200.
PIN_MANAGEMENT02:PRETUPS-15275|PIN MANAGEMENT|To check pin change required on Transaction  when user pin reset is ="N" or pin reset required not required
PIN_MANAGEMENT03:PRETUPS-15276|PIN MANAGEMENT|To check pin change required on Transaction  when pin is not expired  


#Credit Loan Amount
UAPCRDTLNAMT1:PRETUPS-334,PRETUPS-345|Credit Loan Amount|To verify that MSISDN, threshold and loan amount is added in the CSV file for user of {0} domain and {1} category.
UAPCRDTLNAMT2:PRETUPS-334,PRETUPS-345|Credit Loan Amount|To verify SOS File can be moved from the local directory to the server directory defined in Constant props file.
UAPCRDTLNAMT3:PRETUPS-334,PRETUPS-345|Credit Loan Amount|To verify loan amount and threshold amount can be assigned by executing shell script for user of {0} domain and {1} category.
UAPCRDTLNAMT4:PRETUPS-334,PRETUPS-345|Credit Loan Amount|To verify that loan amount is credited when user balance goes below threshold amount to the user of {0} domain and {1} category with C2C Transfer.
UAPCRDTLNAMT5:PRETUPS-334,PRETUPS-345|Loan Amount Settlement|To verify that loan amount is settled when user balance goes above loan amount with the premium calculation to the user of {0} domain and {1} category with O2C Transfer.
UAPCRDTLNAMT6:PRETUPS-334,PRETUPS-345|Credit Loan Amount|To verify that loan amount is not credited when script is not executed in user of {0} domain and {1} category with C2C Transfer.
UAPCRDTLNAMT7:PRETUPS-334,PRETUPS-345|Credit Loan Amount|To verify that loan amount is not credited when user balance goes above threshold amount to the user of {0} domain and {1} category with C2C Transfer.


#C2C Enquiry 
C2CE01:PRETUPS-14960|C2C ENQUIRY|Channel users will be able to load all c2c details of their hierarchy by "Transaction ID". filter.
C2CE02:PRETUPS-14961|C2C ENQUIRY|Channel users will be able to load all c2c details of their hierarchy by "Mobille number" filter.
C2CE03:PRETUPS-14962|C2C ENQUIRY|Channel users will be able to load all c2c details of their hierarchy by "Advance" filter.
C2CE04:PRETUPS-14963|C2C ENQUIRY|Channel users will not able to enquire c2c details of users not in their hierarchy by anyone filter: "Transaction ID" or "Mobille number" or "Advance". A valid message should be displayed.

#Batch O2C Transfer
SITBFOCTRF1:PRETUPS-0001|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Mobile Number.
SITBFOCTRF2:PRETUPS-0001|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2}.
SITBFOCTRF3:PRETUPS-0001|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Approval 2 for category {0} with parent category {1}, product type {2}.
SITBFOCTRF4:PRETUPS-417,PRETUPS-311|Batch FOC Transfer|To validate Network Stocks on successful Operator to Channel Batch Transfer.
SITBFOCTRF5:PRETUPS-417,PRETUPS-311|Batch FOC Transfer|To validate Receiver User Balance on successful Operator to Channel Batch Transfer.
SITBFOCTRF6:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank file.
SITBFOCTRF7:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank MSISDN.
SITBFOCTRF8:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank Payment Type.
SITBFOCTRF9:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Approve.
SITBFOCTRF10:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Reject.
SITBFOCTRF11:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is able to Reject Free of Cost Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBFOCTRF12:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is able to Discard Free of Cost Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBFOCTRF13:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid File Format.
SITBFOCTRF14:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Batch Name.
SITBFOCTRF15:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid External Transaction Date.
SITBFOCTRF16:PRETUPS-1144|Batch FOC Transfer|To verify that {0} is not able to perform Batch FOC Transfer for {1} if Channel User is IN Suspended.
SITBFOCTRF17:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Negative Amount.
SITBFOCTRF18:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric External Transaction Number.
SITBFOCTRF19:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric Amount.
SITBFOCTRF20:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Payment Type.
SITBFOCTRF21:PRETUPS-0001|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Mobile Number.
SITBFOCTRF22:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2}.
SITBFOCTRF23:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Approval 2 for category {0} with parent category {1}, product type {2}.
SITBFOCTRF24:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank file.
SITBFOCTRF25:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank MSISDN.
SITBFOCTRF26:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Approve.
SITBFOCTRF27:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Reject.
SITBFOCTRF28:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Reject Free of Cost Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBFOCTRF29:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Discard Free of Cost Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBFOCTRF30:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid File Format.
SITBFOCTRF31:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Batch Name.
SITBFOCTRF32:PRETUPS-317|Batch FOC Transfer|To verify that {0} is getting proper error message after performing FOC Batch FOC Transfer for {1} if Channel User is IN Suspended.
SITBFOCTRF33:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Negative Amount.
SITBFOCTRF34:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric External Transaction Number.
SITBFOCTRF35:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric Amount.


#Batch O2C Transfer
SITBFOCTRF1:PRETUPS-0001|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Mobile Number.
SITBFOCTRF2:PRETUPS-0001|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2}.
SITBFOCTRF3:PRETUPS-0001|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Approval 2 for category {0} with parent category {1}, product type {2}.
SITBFOCTRF4:PRETUPS-417,PRETUPS-311|Batch FOC Transfer|To validate Network Stocks on successful Operator to Channel Batch Transfer.
SITBFOCTRF5:PRETUPS-417,PRETUPS-311|Batch FOC Transfer|To validate Receiver User Balance on successful Operator to Channel Batch Transfer.
SITBFOCTRF6:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank file.
SITBFOCTRF7:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank MSISDN.
SITBFOCTRF8:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank Payment Type.
SITBFOCTRF9:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Approve.
SITBFOCTRF10:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is able to perform Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Reject.
SITBFOCTRF11:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is able to Reject Free of Cost Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBFOCTRF12:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is able to Discard Free of Cost Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBFOCTRF13:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid File Format.
SITBFOCTRF14:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Batch Name.
SITBFOCTRF15:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid External Transaction Date.
SITBFOCTRF16:PRETUPS-1144|Batch FOC Transfer|To verify that {0} is not able to perform Batch FOC Transfer for {1} if Channel User is IN Suspended.
SITBFOCTRF17:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Negative Amount.
SITBFOCTRF18:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric External Transaction Number.
SITBFOCTRF19:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric Amount.
SITBFOCTRF20:PRETUPS-317|Batch FOC Transfer|To verify that Operator user is not able to perform FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Payment Type.
SITBFOCTRF21:PRETUPS-0001|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Mobile Number.
SITBFOCTRF22:PRETUPS-0001|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2}.
SITBFOCTRF23:PRETUPS-0001|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Approval 2 for category {0} with parent category {1}, product type {2}.
SITBFOCTRF24:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank file.
SITBFOCTRF25:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with blank MSISDN.
SITBFOCTRF26:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Approve.
SITBFOCTRF27:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Free of Cost Batch Approval 1 for category {0} with parent category {1}, product type {2} with Batch Reject.
SITBFOCTRF28:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Reject Free of Cost Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBFOCTRF29:PRETUPS-317|Batch FOC Transfer|To verify that success message is received after performing Discard Free of Cost Batch for category {0} with parent category {1}, product type {2} by Process File.
SITBFOCTRF30:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid File Format.
SITBFOCTRF31:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Invalid Batch Name.
SITBFOCTRF32:PRETUPS-1144|Batch FOC Transfer|To verify that {0} is getting proper error message after performing FOC Batch FOC Transfer for {1} if Channel User is IN Suspended.
SITBFOCTRF33:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Negative Amount.
SITBFOCTRF34:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric External Transaction Number.
SITBFOCTRF35:PRETUPS-317|Batch FOC Transfer|To verify that proper error message is received after performing FOC Batch Transfer initiation for category {0} with parent category {1}, product type {2} with Alphanumeric Amount.


#c2c tnx details view for channel admin
C2CTNXDETAILSVIEW01:PRETUPS-15682|C2C TNX DETAILS VIEW FOR CHANNEL ADMIN|Trasaction view details successful for channel admin login
C2CTNXDETAILSVIEW02:PRETUPS-15683|C2C TNX DETAILS VIEW FOR CHANNEL ADMIN|Trasaction view details fail for channel admin login invalid transferId
C2CTNXDETAILSVIEW03:PRETUPS-15684|C2C TNX DETAILS VIEW FOR CHANNEL ADMIN|Trasaction view details  fail for channel admin login and invalid networkCode


#Batch Grade Management
SITBTCHGRDMGMT1:PRETUPS-000|Batch Grade Management|To verify that Channel Admin is able to perform Batch Grade Management for the category {0}.
SITBTCHGRDMGMT2:PRETUPS-000|Batch Grade Management|To verify that success message is received while associating grade in batch for the category {0}.
SITBTCHGRDMGMT3:PRETUPS-000|Batch Grade Management|To verify that Channel Admin is not able to perform Batch Grade Management for the category {0} with invalid grade code.
SITBTCHGRDMGMT4:PRETUPS-000|Batch Grade Management|To verify that proper error message is received while associating grade in batch for the category {0} with invalid grade code.
SITBTCHGRDMGMT5:PRETUPS-000|Batch Grade Management|To verify that Channel Admin is not able to perform Batch Grade Management for the category {0} with blank Domain.
SITBTCHGRDMGMT6:PRETUPS-000|Batch Grade Management|To verify that proper error message is received while associating grade in batch for the category {0} with blank Domain.
SITBTCHGRDMGMT7:PRETUPS-000|Batch Grade Management|To verify that Channel Admin is not able to perform Batch Grade Management for the category {0} with blank Category.
SITBTCHGRDMGMT8:PRETUPS-000|Batch Grade Management|To verify that proper error message is received while associating grade in batch for the category {0} with blank Category.
SITBTCHGRDMGMT9:PRETUPS-000|Batch Grade Management|To verify that Channel Admin is not able to perform Batch Grade Management for the category {0} with blank file.
SITBTCHGRDMGMT10:PRETUPS-000|Batch Grade Management|To verify that proper error message is received while associating grade in batch for the category {0} with blank file.
SITBTCHGRDMGMT11:PRETUPS-000|Batch Grade Management|To verify that Channel Admin is not able to perform Batch Grade Management for the category {0} with invalid file.
SITBTCHGRDMGMT12:PRETUPS-000|Batch Grade Management|To verify that proper error message is received while associating grade in batch for the category {0} with invalid file.

#Batch O2C Withdraw
SITO2CWITHDRAW1:PRETUPS-317|Batch O2C Withdraw|To verify that Operator user is able to perform Operator to channel Batch Withdraw initiation for category {0} with parent category {1}, product type {2} with Mobile Number.
SITO2CWITHDRAW2:PRETUPS-317|Batch O2C Withdraw|To verify that Operator user is able to perform Operator to channel Batch Approval 1 for category {0} with parent category {1}, product type {2}.
SITO2CWITHDRAW3:PRETUPS-317|Batch O2C Withdraw|To verify that Operator user is able to perform Operator to channel Batch Approval 2 for category {0} with parent category {1}, product type {2}.
SITO2CWITHDRAW4:PRETUPS-0001|Batch O2C Withdraw|To verify that success message is received after performing O2C Batch Withdraw initiation for category {0} with parent category {1}, product type {2} with Mobile Number.
SITO2CWITHDRAW5:PRETUPS-0001|Batch O2C Withdraw|To verify that success message is received after performing O2C Batch Approval 1 for category {0} with parent category {1}, product type {2}.
SITO2CWITHDRAW6:PRETUPS-0001|Batch O2C Withdraw|To verify that success message is received after performing O2C Batch Approval 2 for category {0} with parent category {1}, product type {2}.||||||| .r23914



#o2c tnx rev list for channel admin
O2CTNXREVLIST01:PRETUPS-15598|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is working successfully for txn id filter.
O2CTNXREVLIST02:PRETUPS-15599|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is working successfully for msisdn filter.
O2CTNXREVLIST03:PRETUPS-15600|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is working successfully for advance filter.
O2CTNXREVLIST04:PRETUPS-15601|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is not working successfully for advance filter if category is blank.
O2CTNXREVLIST05:PRETUPS-15602|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is not working successfully for advance filter if domain is blank.
O2CTNXREVLIST06:PRETUPS-15603|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is not working successfully for advance filter if transfer category is blank.

#reprint voucher 
REPRINTVOUCHER1:PRETUPS-15667|REPRINT VOUCHER API|User is trying to fetch voucher details with invalid pin and valid transaction id
REPRINTVOUCHER2:PRETUPS-15666|REPRINT VOUCHER API|User is trying to fetch voucher details with valid pin and invalid transaction id
REPRINTVOUCHER3:PRETUPS-15665|REPRINT VOUCHER API|User is trying to fetch voucher details with valid pin and valid transaction id

#Redis down API
REA1:PRETUPS-15677|REDIS LOOKUPCACHE DETAILS|Lookup cache details successful return
REA2:PRETUPS-15678|REDIS PREFERENCECACHE DETAILS|Preference cache details successful return
REA3:PRETUPS-15678|REDIS SUBLOOKUPCACHE DETAILS|Sublookup cache details successful return

#o2c tnx rev list for channel admin
O2CTNXREVLIST01:PRETUPS-15598|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is working successfully for txn id filter.
O2CTNXREVLIST02:PRETUPS-15599|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is working successfully for msisdn filter.
O2CTNXREVLIST03:PRETUPS-15600|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is working successfully for advance filter.
O2CTNXREVLIST04:PRETUPS-15601|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is not working successfully for advance filter if category is blank.
O2CTNXREVLIST05:PRETUPS-15602|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is not working successfully for advance filter if domain is blank.
O2CTNXREVLIST06:PRETUPS-15603|O2C TNX REV LIST FOR CHANNEL ADMIN|To check if O2C TXN Reversal API is not working successfully for advance filter if transfer category is blank.

#Parent category List for channel admin
PARENTCATLIST01:PRETUPS-15702|PARENT CAT LIST FOR CHANNEL ADMIN|To check if PARENT CAR LIST API is working successfully.
PARENTCATLIST02:PRETUPS-15703|PARENT CAT LIST FOR CHANNEL ADMIN|To check if PARENT CAR LIST API is working not successfully if categorycode is blank.
PARENTCATLIST03:PRETUPS-15704|PARENT CAT LIST FOR CHANNEL ADMIN|To check if PARENT CAR LIST API is working not successfully if categorycode is invalid.>>>>>>> .theirs

#C2C Transction Reversal List
RESTC2CTRTC1:PRETUPS-15631|[REST] C2C TRANSACTION LIST FOR REVERSAL API|To check if C2C TRANSACTION LIST FOR REVERSAL API is working successfully with valid channel user login id.{0}
RESTC2CTRTC2:PRETUPS-15632|[REST] C2C TRANSACTION LIST FOR REVERSAL API|To check if C2C TRANSACTION LIST FOR REVERSAL API is working successfully with valid channel user's name.{0}
RESTC2CTRTC3:PRETUPS-15633|[REST] C2C TRANSACTION LIST FOR REVERSAL API|To check if C2C TRANSACTION LIST FOR REVERSAL API is working successfully with valid transaction id.{0}
RESTC2CTRTC4:PRETUPS-15634|[REST] C2C TRANSACTION LIST FOR REVERSAL API|To check if C2C TRANSACTION LIST FOR REVERSAL API is working successfully with valid receiver msisdn for particular transaction.{0}
RESTC2CTRTC5:PRETUPS-15635|[REST] C2C TRANSACTION LIST FOR REVERSAL API|To check if C2C TRANSACTION LIST FOR REVERSAL API is not working successfully with invalid channel user login id.{0}
RESTC2CTRTC6:PRETUPS-15636|[REST] C2C TRANSACTION LIST FOR REVERSAL API|To check if C2C TRANSACTION LIST FOR REVERSAL API is not working successfully with invalid channel user's name.{0}
RESTC2CTRTC7:PRETUPS-15637|[REST] C2C TRANSACTION LIST FOR REVERSAL API|To check if C2C TRANSACTION LIST FOR REVERSAL API is not working successfully with invalid transaction id.{0}
RESTC2CTRTC8:PRETUPS-15638|[REST] C2C TRANSACTION LIST FOR REVERSAL API|To check if C2C TRANSACTION LIST FOR REVERSAL API is not working successfully with invalid receiver msisdn for particular transaction.{0}
RESTC2CTRTC9:PRETUPS-15639|[REST] C2C TRANSACTION LIST FOR REVERSAL API|To check if C2C TRANSACTION LIST FOR REVERSAL API is not working successfully with invalid auth token.{0}

#c2c transaction reversal api
C2C_TNX_REVERSAL01:PRETUPS-15642|C2C TRANSACTION REVERSAL API|Channel admin will be able to reverse C2C transactions.
C2C_TNX_REVERSAL02:PRETUPS-15643|C2C TRANSACTION REVERSAL API|Channel admin won't be able to reverse c2c transaction with a invalid transaction id.
C2C_TNX_REVERSAL03:PRETUPS-15644|C2C TRANSACTION REVERSAL API|Channel admin won't be able to reverse c2c transaction with a invalid network code.
C2C_TNX_REVERSAL04:PRETUPS-15645|C2C TRANSACTION REVERSAL API|Channel admin won't be able to reverse c2c transaction with a invalid receiver network code.
C2C_TNX_REVERSAL05:PRETUPS-15646|C2C TRANSACTION REVERSAL API|Channel admin won't be able to reverse c2c transaction with a remark of unusual length.

#o2c tnx rev list for channel admin
O2CTXNREVERSAL01:PRETUPS-00000|O2C TNX REVERSAL CHANNEL ADMIN|To check if O2C Transaction Reversal API is working successfully.
O2CTXNREVERSAL02:PRETUPS-00000|O2C TNX REVERSAL CHANNEL ADMIN|To check if Transaction that already reversed is failing.
O2CTXNREVERSAL03:PRETUPS-00000|O2C TNX REVERSAL CHANNEL ADMIN|To check if O2C transaction reversal API for empty transaction ID.
O2CTXNREVERSAL04:PRETUPS-00000|O2C TNX REVERSAL CHANNEL ADMIN|To check if O2C transaction reversal API for empty remarks.

#Channel Admin - Add Channel User API
CADMADDCHNLUSER01:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add a channel user.
CADMADDCHNLUSER02:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is unable to add a channel user with the existing login id.
CADMADDCHNLUSER03:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add a channel user with the blank login id for web login.
CADMADDCHNLUSER04:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is unable to add a channel user with the existing msisdn.
CADMADDCHNLUSER05:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is unable to add a channel user with the blank msisdn.
CADMADDCHNLUSER06:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is unable to add a channel user with the alphanumerical msisdn .
CADMADDCHNLUSER07:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is unable to add a channel user with the existing external code.
CADMADDCHNLUSER08:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is unable to add a channel user with the blank external code.
CADMADDCHNLUSER09:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is unable to add a channel user with the adding external code in special characters.
CADMADDCHNLUSER10:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is unable to add a channel user with the blank email id.
CADMADDCHNLUSER11:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is unable to add a channel user with the email id in invalid format.
CADMADDCHNLUSER12:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that the channel user added in the system is based on the roles , services and payment mode assgined at the time of creation.
CADMADDCHNLUSER13:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that when parent category is dealer while creating an agent, the owner user and parent user info is mandatory. 
CADMADDCHNLUSER14:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that when parent category is dealer, parent user should be under the hierarchy of owner user.
CADMADDCHNLUSER15:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add a dealer.
CADMADDCHNLUSER16:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add an agent when parent is dealer.
CADMADDCHNLUSER17:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add an agent when parent is distributor.
CADMADDCHNLUSER18:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add an retailer when parent is distributor.
CADMADDCHNLUSER19:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add an retailer when parent is dealer.
CADMADDCHNLUSER20:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add an retailer when parent is agent.
CADMADDCHNLUSER21:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add a dealer with multiple msisdn.
CADMADDCHNLUSER22:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add a agent with multiple msisdn.
CADMADDCHNLUSER23:PRETUPS-00000|CHANNEL ADMIN ADD CHANNEL USER API|Verify that {0} is able to add a retailer with multiple msisdn.

#Channel User Payment Method And Range API
CHUSERPYMTANDRNG01:PRETUPS-15538|Channel User Payment Method And Range API|Verify that Channel User Payment Method And Range API is working successfully with all valid inputs
CHUSERPYMTANDRNG02:PRETUPS-15539|Channel User Payment Method And Range API|Verify that Channel User Payment Method And Range API is not working when CnanneluserId entered is invalid
CHUSERPYMTANDRNG03:PRETUPS-15540|Channel User Payment Method And Range API|Verify that Channel User Payment Method And Range API is not working when TransferType entered is invalid


#Channel Admin - Modify Channel User API
CADMMODCHNLUSER01:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is able to modify a channel user.
CADMMODCHNLUSER02:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is able to modify channel user with the blank login id for web login.
CADMMODCHNLUSER03:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is unable to modify channel user with the blank msisdn.
CADMMODCHNLUSER04:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is unable to modify channel user with the alphanumerical msisdn .
CADMMODCHNLUSER05:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is unable to modify channel user with the blank external code.
CADMMODCHNLUSER06:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is unable to modify channel user with the adding external code in special characters.
CADMMODCHNLUSER07:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is unable to modify channel user with the blank email id.
CADMMODCHNLUSER08:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is unable to modify channel user with the email id in invalid format.
CADMMODCHNLUSER09:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is unable to modify channel user with the blank first name.
CADMMODCHNLUSER10:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is unable to modify channel user with the blank short name.
CADMMODCHNLUSER11:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is able to modify a channel user who is a dealer.
CADMMODCHNLUSER12:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is able to modify a channel user who is a agent.
CADMMODCHNLUSER13:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is able to modify a channel user who is a retailer.
CADMMODCHNLUSER14:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is able to update channel user account with multiple msisdn.
CADMMODCHNLUSER15:PRETUPS-00000|CHANNEL ADMIN MODIFY CHANNEL USER API|Verify that {0} is able to update roles.


#Channel Admin - Approve Channel User API
CADMAPPRCHNLUSER01:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is able to approve a channel user via login id.
CADMAPPRCHNLUSER02:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is unable to approve channel user without user grade , commission profile , transfer profile and transfer rule type information.
CADMAPPRCHNLUSER03:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is able to approve a channel user via msisdn.
CADMAPPRCHNLUSER04:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is unable to approve an already approved channel user.
CADMAPPRCHNLUSER05:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is unable to approve a channel user at approval level 2 if approval level  1 is not completed.
CADMAPPRCHNLUSER06:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is unable to approve a channel user with invalid login id.
CADMAPPRCHNLUSER07:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is unable to approve a channel user with invalid msisdn.
CADMAPPRCHNLUSER08:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is able to approve a channel user who is a dealer.
CADMAPPRCHNLUSER09:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is able to approve a channel user who is a agent.
CADMAPPRCHNLUSER10:PRETUPS-00000|CHANNEL ADMIN APPROVE CHANNEL USER API|Verify that {0} is able to approve a channel user who is a retailer.


#channeluserListbystatus
CHANNELUSERLISTBYSTATUSAPI01:PRETUPS-16202|CHANNEL USER LISTBYSTATUSAPI|Api works for valid channel admin ,valid advanced type and valid values	
CHANNELUSERLISTBYSTATUSAPI02:PRETUPS-16203|CHANNEL USER LISTBYSTATUSAPI|Api works for valid channel admin ,valid advanced type and  empty category 	
CHANNELUSERLISTBYSTATUSAPI03:PRETUPS-16204|CHANNEL USER LISTBYSTATUSAPI|Api works for valid channel admin ,valid advanced type and invalid user status other then Y,SR,DR,D,A
CHANNELUSERLISTBYSTATUSAPI04:PRETUPS-16205|CHANNEL USER LISTBYSTATUSAPI|Api works for valid channel admin searchType  invalid 
CHANNELUSERLISTBYSTATUSAPI05:PRETUPS-16206|CHANNEL USER LISTBYSTATUSAPI|Api works for valid channel admin ,valid search type='LOGINID' and valid loginid
CHANNELUSERLISTBYSTATUSAPI06:PRETUPS-16207|CHANNEL USER LISTBYSTATUSAPI|Api works for valid channel admin,search type msisdn and valid msisdn
# suspend channelUser in Suspend Request by channel admin
CHANNELUSER_SR_SUSPEND_API01:PRETUPS-16209|SUSPEND CHANNEL USER IN SUSPEND REQUEST|Api works for valid channel admin login ,valid login id of user in suspend approval 
CHANNELUSER_SR_SUSPEND_API02:PRETUPS-16210|SUSPEND CHANNEL USER IN SUSPEND REQUEST|Api works for valid channel admin login ,invalid channel user login id
CHANNELUSER_SR_SUSPEND_API03:PRETUPS-16211|SUSPEND CHANNEL USER IN SUSPEND REQUEST|Api works for valid channel admin login ,empty login id
CHANNELUSER_SR_SUSPEND_API04:PRETUPS-16212|SUSPEND CHANNEL USER IN SUSPEND REQUEST|Api works for valid channel admin login ,empty remarks
CHANNELUSER_SR_SUSPEND_API05:PRETUPS-16213|SUSPEND CHANNEL USER IN SUSPEND REQUEST|Api works for valid channel admin login ,invalid requestType
CHANNELUSER_SR_SUSPEND_API06:PRETUPS-16214|SUSPEND CHANNEL USER IN SUSPEND REQUEST|Api works for valid channel admin login ,invalid action other then A/R


# delete channelUser in Delete Request by channel admin
CHANNELUSER_DR_DELETE_API01:PRETUPS-16287|DELETE/SUSPEND APPROVAL API|Api works for valid channel admin login ,valid login id of user in delete approval
CHANNELUSER_DR_DELETE_API02:PRETUPS-16286|DELETE/SUSPEND APPROVAL API|Api works for valid channel admin login ,invalid action other then A/R

#RES SUS BULK CU API
RES_SUS_BULK_CU_API01:PRETUPS-16285|RES SUS BULK CU API|To check if sus res bulk channel user API is working successfully for msisdn.
RES_SUS_BULK_CU_API02:PRETUPS-16283|RES SUS BULK CU API|To check if sus res bulk channel user API is working successfully for login Id.
RES_SUS_BULK_CU_API03:PRETUPS-16284|RES SUS BULK CU API|To check if sus res bulk channel user API is not working successfully when mix of msisdn and login id are given


#Channel Admin - Delete Channel User API
CADMDELCHNLUSER01:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is able to delete a channel user using loginID.
CADMDELCHNLUSER02:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is able to delete a channel user using msisdn
CADMDELCHNLUSER03:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel user using invalid msisdn.
CADMDELCHNLUSER04:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel user using invalid loginID.
CADMDELCHNLUSER05:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel user having pending transaction to complete.
CADMDELCHNLUSER06:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel user having any active child user.
CADMDELCHNLUSER07:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel user having any associated MSISDN restricted list.
CADMDELCHNLUSER08:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel user is there is any FOC transfer pending for approval.
CADMDELCHNLUSER09:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel user having any batch recharge scheduled.
CADMDELCHNLUSER10:PRETUPS-00000|CHANNEL ADMIN DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel user having any batch FOC transfer pending for approval.



#Download template change user Status
CHANGE_USER_STATUS_TEMPLATE_DOWNLOAD_API01:PRETUPS-16361|Change User Status Template Download api |To check downloading template api working successfully for valid channel admin user.


#Channel Admin - Bulk Delete Channel Users API
CADMBULKDELCHNLUSER01:PRETUPS-00000|CHANNEL ADMIN BULK DELETE CHANNEL USER API|Verify that {0} is able to delete a channel users in bulk using msisdn.
CADMBULKDELCHNLUSER02:PRETUPS-00000|CHANNEL ADMIN BULK DELETE CHANNEL USER API|Verify that {0} is able to delete a channel users in bulk using loginId.
CADMBULKDELCHNLUSER03:PRETUPS-00000|CHANNEL ADMIN BULK DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel users in bulk if any one user is inactive.
CADMBULKDELCHNLUSER04:PRETUPS-00000|CHANNEL ADMIN BULK DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel users if bulk if their child users are active.
CADMBULKDELCHNLUSER05:PRETUPS-00000|CHANNEL ADMIN BULK DELETE CHANNEL USER API|Verify that {0} is unable to delete channel users having pending transaction to complete.
CADMBULKDELCHNLUSER06:PRETUPS-00000|CHANNEL ADMIN BULK DELETE CHANNEL USER API|Verify that {0} is unable to delete channel users having any associated MSISDN restricted list.
CADMBULKDELCHNLUSER07:PRETUPS-00000|CHANNEL ADMIN BULK DELETE CHANNEL USER API|Verify that {0} is unable to delete channel users having any FOC transfer pending for approval.
CADMBULKDELCHNLUSER08:PRETUPS-00000|CHANNEL ADMIN BULK DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel users having any batch recharge scheduled.
CADMBULKDELCHNLUSER09:PRETUPS-00000|CHANNEL ADMIN BULK DELETE CHANNEL USER API|Verify that {0} is unable to delete a channel users having any batch FOC transfer pending for approval.


#Channel Admin - Add Staff User API
CADMADDSTAFFUSER01:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is able to add a staff user.
CADMADDSTAFFUSER02:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user with the existing login id.
CADMADDSTAFFUSER03:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user with the blank login id for web login.
CADMADDSTAFFUSER04:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user with the existing msisdn.
CADMADDSTAFFUSER05:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user with the blank email id.
CADMADDSTAFFUSER06:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user with the email id in invalid format.
CADMADDSTAFFUSER07:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that the staff user added in the system is based on the roles and services assgined at the time of creation.
CADMADDSTAFFUSER08:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that when creating a distributor, passing channel user info is mandatory. 
CADMADDSTAFFUSER09:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that when parent category is distributor while creating an dealer, the owner user and channel user info is mandatory. 
CADMADDSTAFFUSER10:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that when parent category is dealer while creating an agent, the owner user, parent user and channel user info is mandatory. 
CADMADDSTAFFUSER11:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that when parent category is agent while creating retailer, the owner user, parent user and channel user info is mandatory. 
CADMADDSTAFFUSER12:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that when parent category is dealer, pass parent user info who isn't under the hierarchy of owner user.
CADMADDSTAFFUSER13:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is able to add a staff user as a dealer.
CADMADDSTAFFUSER14:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is able to add a staff user as an agent.
CADMADDSTAFFUSER15:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is able to add a staff user as a retailer
CADMADDSTAFFUSER16:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user by passing login id of distributor as parent user when parent category is passed as dealer.
CADMADDSTAFFUSER17:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user by passing login id of an agent as parent user when parent category is passed as dealer.
CADMADDSTAFFUSER18:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user by passing login id of an retailer as parent user when parent category is passed as dealer.
CADMADDSTAFFUSER19:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user by passing login id of distributor as channel user when category code is passed as dealer.
CADMADDSTAFFUSER20:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user by passing login id of distributor as channel user when category code is passed as agent.
CADMADDSTAFFUSER21:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user by passing login id of distributor as channel user when category code is passed as retailer.
CADMADDSTAFFUSER22:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user with PIN mismatch.
CADMADDSTAFFUSER23:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user with the alphanumerical msisdn .
CADMADDSTAFFUSER24:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that {0} is unable to add a staff user with invalid ip address.
CADMADDSTAFFUSER25:PRETUPS-00000|CHANNEL ADMIN ADD STAFF USER API|Verify that when parent category value is passed while adding staff user, passing parent user info is madatory.

#Channel Admin - Edit Staff User API
CADMEDITSTAFFUSER01:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is able to modify a staff user who is a distributor.
CADMEDITSTAFFUSER02:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is able to modify a staff user who is a dealer
CADMEDITSTAFFUSER03:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is able to modify a staff user who is an agent.
CADMEDITSTAFFUSER04:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is able to modify a staff user who is a retailer.
CADMEDITSTAFFUSER05:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is unable to modify staff user with the blank login id.
CADMEDITSTAFFUSER06:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is unable to modify staff user with the alphanumerical msisdn .
CADMEDITSTAFFUSER07:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is unable to modify staff user with the blank email id.
CADMEDITSTAFFUSER08:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is unable to modify staff user with the email id in invalid format.
CADMEDITSTAFFUSER09:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is unable to modify staff user with the blank username.
CADMEDITSTAFFUSER10:PRETUPS-00000|CHANNEL ADMIN EDIT STAFF USER API|Verify that {0} is able to modify a staff user with invalid IP address.


#Super Admin - Add Operator User API
SADMADDOPTUSER01:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is able to add sub super admin.
SADMADDOPTUSER02:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is able to add network admin.
SADMADDOPTUSER03:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is able to add super network admin.
SADMADDOPTUSER04:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is able to add super customer care.
SADMADDOPTUSER05:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is able to add super channel admin.
SADMADDOPTUSER06:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user without first name.
SADMADDOPTUSER07:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user if contact number entered is invalid.
SADMADDOPTUSER08:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user with old appointment date.
SADMADDOPTUSER09:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user with existing mobile number of another operator user.
SADMADDOPTUSER10:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user with existing external code of another operator user.
SADMADDOPTUSER11:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user with invalid email id.
SADMADDOPTUSER12:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user with existing web login id of another operator user.
SADMADDOPTUSER13:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user if toTime entered is lesser that fromTime.
SADMADDOPTUSER14:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user if IP address entered is invalid.
SADMADDOPTUSER15:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user without subscriber code.
SADMADDOPTUSER16:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user without mobile number.
SADMADDOPTUSER17:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user without division.
SADMADDOPTUSER18:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user without department.
SADMADDOPTUSER19:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user without assigning geographies.
SADMADDOPTUSER20:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user without assigning services.
SADMADDOPTUSER21:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user without assigning products.
SADMADDOPTUSER22:PRETUPS-00000|SUPER ADMIN ADD OPERATOR USER API|Verify that {0} is unable to add operator user without assigning domains.


#Channel Admin - C2S Batch Recharge Reversal
CHNLADMBTCHRECHRGEREV01:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is able to perform C2S Bulk reversal with all valid transactions.
CHNLADMBTCHRECHRGEREV02:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is able to perform C2S Bulk reversal of internet recharge with all valid transactions.
CHNLADMBTCHRECHRGEREV03:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is able to perform C2S Bulk reversal of fix line recharge with all valid transactions.
CHNLADMBTCHRECHRGEREV04:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is able to perform C2S Bulk reversal with some valid and invalid transactions.
CHNLADMBTCHRECHRGEREV05:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is unable to perform C2S Bulk reversal if batch name is blank.
CHNLADMBTCHRECHRGEREV06:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is unable to perform C2S Bulk reversal if batch name is invalid.
CHNLADMBTCHRECHRGEREV07:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is unable to perform C2S Bulk reversal with no attachment.
CHNLADMBTCHRECHRGEREV08:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is unable to perform C2S Bulk reversal on transactions that are already reversed.
CHNLADMBTCHRECHRGEREV09:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is unable to perform C2S Bulk reversal with invalid transactions.
CHNLADMBTCHRECHRGEREV10:PRETUPS-00000|CHANNEL ADMIN C2S BATCH RECHARGE REVERSAL API|Verify that Channel admin is able to perform C2S Bulk reversal with mix of different C2S service transactions in one template.


#Channel User - Batch EVD Recharge
BULKEVDRECHARGE01:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to perform bulk EVD recharge.
BULKEVDRECHARGE02:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to schedule daily recharge.
BULKEVDRECHARGE03:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to schedule weekly recharge.
BULKEVDRECHARGE04:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to schedule monthly recharge.
BULKEVDRECHARGE05:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is unable to perform bulk EVD recharge if number of days entered is invalid.
BULKEVDRECHARGE06:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is unable to perform bulk EVD recharge if number if PIN no is invalid.
BULKEVDRECHARGE07:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is unable to perform bulk EVD recharge entering future date, with instant recharge.
BULKEVDRECHARGE08:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is unable to perform bulk EVD recharge with no occurence.
BULKEVDRECHARGE09:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is unable to perform bulk EVD recharge with invalid mobile numbers .
BULKEVDRECHARGE10:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is unable to perform bulk EVD recharge if EVD denomination amount is not available or enabled.
BULKEVDRECHARGE11:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to perform bulk EVD recharge on restricted msisdn's.
BULKEVDRECHARGE12:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to schedule daily recharge on restricted msisdn's.
BULKEVDRECHARGE13:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to schedule weekly recharge on restricted msisdn's.
BULKEVDRECHARGE14:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to schedule monthly recharge on restricted msisdn's.
BULKEVDRECHARGE15:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to perform bulk EVD recharge with insufficient balance.
BULKEVDRECHARGE16:PRETUPS-00000|BULK EVD RECHARGE API|Verify that {0} is able to perform bulk EVD recharge if transfer out is suspended.


ADDAGENT01:PRETUPS-00000|ADD AGENT API|Verify that {0} is able to add an agent.
ADDAGENT02:PRETUPS-00001|ADD AGENT API|Category code already exists.
ADDAGENT03:PRETUPS-00001|ADD AGENT API|Category name already exists.
ADDAGENT04:PRETUPS-00001|ADD AGENT API|Geographical Domain Type is invalid.
ADDAGENT05:PRETUPS-00001|ADD AGENT API|UserID prefix {0} already exists



ADDTRANSFCTRLPROFIE01:PRETUPS-00000|ADD TRANSFER CONTROL PROFILE API|Verify that {0} is able to add Transfer control profile.
ADDTRANSFCTRLPROFIE02:PRETUPS-00001|ADD TRANSFER CONTROL PROFILE API|Verify that profile short name is a single word without spaces.
ADDTRANSFCTRLPROFIE03:PRETUPS-00002|ADD TRANSFER CONTROL PROFILE API|Verify that product min balance should not be greater that Max Balance.
ADDTRANSFCTRLPROFIE04=PRETUPS-00003|ADD TRANSFER CONTROL PROFILE API|Verify that C2S minimum transaction amount cannot be greater than maximum transaction amount for product
ADDTRANSFCTRLPROFIE04=PRETUPS-00004|ADD TRANSFER CONTROL PROFILE API|Verify that C2S minimum transaction amount cannot be greater than maximum transaction amount for product
ADDTRANSFCTRLPROFIE05=PRETUPS-00005|ADD TRANSFER CONTROL PROFILE API|Verify that Alert balance is less than min balance
ADDTRANSFCTRLPROFIE06=PRETUPS-00006|ADD TRANSFER CONTROL PROFILE API|Verify that Allowed maximum percentage should be in between 1 to 100
ADDTRANSFCTRLPROFIE07=PRETUPS-00007|ADD TRANSFER CONTROL PROFILE API|Verify that Daily in count cannot be greater than weekly in count
ADDTRANSFCTRLPROFIE08=PRETUPS-00007|ADD TRANSFER CONTROL PROFILE API|Verify that Daily in count cannot be greater than monthly in count
ADDTRANSFCTRLPROFIE09=PRETUPS-00009|ADD TRANSFER CONTROL PROFILE API|Verify that Weekly in count cannot be greater than monthly in count

MODIFYTRANSFCTRLPROFIE01:PRETUPS-00000|MODIFY TRANSFER CONTROL PROFILE API|Verify that {0} is able to modify Transfer control profile.



ADDCATEGORY01:PRETUPS-00000|ADD CATEGORY API|Verify that {0} is able to add an category.
ADDCATEGORY02:PRETUPS-00000|ADD CATEGORY API|Verify that category code exist.
ADDCATEGORY03:PRETUPS-00000|ADD CATEGORY API|Verify that Geographical Domain Type is invalid
ADDCATEGORY04=PRETUPS-00000|ADD CATEGORY API|Verify that Domain code is mandatory
ADDCATEGORY05=PRETUPS-00000|ADD CATEGORY API|Verify that category name is mandatory



ADDPROMOTRFRULE01:PRETUPS-00001|ADD PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to add promotional transfer rule at USER LEVEL
ADDPROMOTRFRULE02:PRETUPS-00002|ADD PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to add promotional transfer rule at GRADE LEVEL
ADDPROMOTRFRULE03:PRETUPS-00003|ADD PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to add promotional transfer rule at GEOGRAPHY LEVEL
ADDPROMOTRFRULE04:PRETUPS-00004|ADD PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to add promotional transfer rule at CELL LEVEL
ADDPROMOTRFRULE05:PRETUPS-00005|ADD PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to add promotional transfer rule at CATEGORY LEVEL
ADDPROMOTRFRULE06:PRETUPS-00006|ADD PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to add duplicate rules.

MODPROMOTRFRULE01:PRETUPS-00001|MODIFY PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to modify promotional transfer rule at USER LEVEL
MODPROMOTRFRULE02:PRETUPS-00002|MODIFY PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to modify promotional transfer rule at GRADE LEVEL
MODPROMOTRFRULE03:PRETUPS-00003|MODIFY PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to modify promotional transfer rule at GEOGRAPHY LEVEL
MODPROMOTRFRULE04:PRETUPS-00004|MODIFY PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to modify promotional transfer rule at CELL LEVEL
MODPROMOTRFRULE05:PRETUPS-00005|MODIFY PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to modify promotional transfer rule at CATEGORY LEVEL

DELPROMOTRFRULE01:PRETUPS-00001|DELETE PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to delete promotional transfer rule at USER LEVEL
DELPROMOTRFRULE02:PRETUPS-00002|DELETE PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to delete promotional transfer rule at GRADE LEVEL
DELPROMOTRFRULE03:PRETUPS-00003|DELETE PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to delete promotional transfer rule at GEOGRAPHY LEVEL
DELPROMOTRFRULE04:PRETUPS-00004|DELETE PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to delete promotional transfer rule at CELL LEVEL
DELPROMOTRFRULE05:PRETUPS-00005|DELETE PROMOTIONAL TRANSFER RULE API|Verify that {0} is able to delete promotional transfer rule at CATEGORY LEVEL
