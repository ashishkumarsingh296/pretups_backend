
// ...................... Verify Names of link and sublink by Network Admin ...... 
//
//
//
//........................Roles And Responsibility Network Admin .............................. 

_includeOnce("../../../../utility/ImportPackage.sah");

var $g_linkNetworkAdmin = _readCSVFile("../../../GUI/testdata/Link_NetworkAdmin.csv"); // Read Links For SuperAdmin

var $g_subLinkNetworkAdmin = _readCSVFile("../../../GUI/testdata/SubLink_NetworkAdmin.csv"); //Read Sub Links For SuperAdmin

var $g_writeLinkNetworkAdmin =  _readCSVFile("../../../GUI/testdata/Write_Link_NetworkAdmin.csv");



//If Network Admin doesn't exist create it first then create network stock deduction

var $l_naCsv = _readCSVFile("../../../GUI/testdata/NA_Login.csv"); //Reads the network admin credentials 
var $g_row = 4;
var $g_col = 1;
var $g_networkAdmin1 = $l_naCsv[1][1];
if($g_networkAdmin1 == "null"){  
	createNA();  // UserManagement_Common.sah
	var $l_naCsv1 = _readCSVFile("../../../GUI/testdata/NA_Login.csv");
	$g_networkAdmin1 = $l_naCsv1[1][1];
	login($g_appURL, $g_LangEnglish, $g_networkAdmin1, $g_commonPassword, $g_assertWelcome);
}else	 
	login($g_appURL,  $g_LangEnglish, $g_networkAdmin1, $g_commonPassword, $g_assertWelcome);

 // ........................ Test script .......................... //


_assertExists(_div("/" + "Category : Network Admin" + ".*/"));

var $rw = 0;
var $cl = 1;

for(var $g_row = 1; $g_linkNetworkAdmin[$g_row] != null; $g_row++){
		
	var $g_col = 0;
	$rw = 0;
	
	
	_assertExists(_link($g_linkNetworkAdmin[$g_row][$g_col]));

	if(_exists(_link($g_linkNetworkAdmin[$g_row][$g_col]))){
	
		_click(_link($g_linkNetworkAdmin[$g_row][$g_col]))
		_log( $g_linkNetworkAdmin[$g_row][$g_col] + " : link is visible");
		
		$g_writeLinkNetworkAdmin[$rw++][$cl] = $g_linkNetworkAdmin[$g_row][$g_col] + " is available";
		_writeCSVFile($g_writeLinkNetworkAdmin, "../../../GUI/testdata/Write_Link_NetworkAdmin.csv", 1);
		
		
		
		for(var $g_innerLink = 0;   $g_subLinkNetworkAdmin[0][$g_innerLink] != null; $g_innerLink++){
			
			if( $g_linkNetworkAdmin[$g_row][$g_col] == $g_subLinkNetworkAdmin[0][$g_innerLink])
			{
				for(var $g_tempRow = 1; $g_subLinkNetworkAdmin[$g_tempRow] != null; $g_tempRow++ ){
					
					if($g_subLinkNetworkAdmin[$g_tempRow][$g_innerLink] == "")
							break;
					
					_assertExists(_link($g_subLinkNetworkAdmin[$g_tempRow][$g_innerLink]));
					
					if(_exists(_link($g_subLinkNetworkAdmin[$g_tempRow][$g_innerLink]))){
						_click(_link($g_subLinkNetworkAdmin[$g_tempRow][$g_innerLink]))
						_log( $g_subLinkNetworkAdmin[$g_tempRow][$g_innerLink] + " : Sub-link under link " + $g_linkNetworkAdmin[$g_row][$g_col] +" is visible " );
						
						$g_writeLinkNetworkAdmin[$rw++][$cl] = $g_subLinkNetworkAdmin[$g_tempRow][$g_innerLink] + " is available";
						_writeCSVFile($g_writeLinkNetworkAdmin, "../../../GUI/testdata/Write_Link_NetworkAdmin.csv", 1);
						
					}else{
						_log( $g_subLinkNetworkAdmin[$g_tempRow][$g_innerLink] + " : Sub-link under link " + $g_linkNetworkAdmin[$g_row][$g_col] +" is not visible " );
						
						$g_writeLinkNetworkAdmin[$rw++][$cl] = $g_subLinkNetworkAdmin[$g_tempRow][$g_innerLink] + " is not available";
						_writeCSVFile($g_writeLinkNetworkAdmin, "../../../GUI/testdata/Write_Link_NetworkAdmin.csv", 1);
						
					}
				}
					
					
				}
				
		}	
		}else{
			_log( $g_linkNetworkAdmin[$g_row][$g_col] + " : link is not visible");
			
			$g_writeLinkNetworkAdmin[$rw++][$cl] = $g_linkNetworkAdmin[$g_row][$g_col] + " is not available";
			_writeCSVFile($g_writeLinkNetworkAdmin, "../../../GUI/testdata/Write_Link_NetworkAdmin.csv", 1);
		}
	
	$cl++;
		
		
		
	}
	


	
	
	
	
	





