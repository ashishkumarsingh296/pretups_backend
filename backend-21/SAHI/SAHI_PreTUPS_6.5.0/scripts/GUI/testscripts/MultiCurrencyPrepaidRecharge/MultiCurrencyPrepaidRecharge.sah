/**
 * Script Name : Multi Currency Transfer
 * 
 * Author : Rahul Rana (rahu.rana@mahindracomviva.com)
 * Date   : 06/09/2016
 * 
 */

// PreRequisite
// $userDIST_A must have sufficient balance

/**
 * Include
 */
_includeOnce("../../../Asset/Framework.sah");

/**
 * Variables
 */

//Object Owner Type Distributer
var $typeDIST = new ChannelUserType($CONFIG.GEO_DOMAIN, $CONFIG.DOMAIN, $CATEGORY.DISTRIBUTER, null, null, null);

//Object Distributor User
var $userDIST_A   = new User("SAHUserDISTA", "Com@1357", "SAHFirstDISTA",
		"SAHDISTA", "sahuser@comviva.com", $CONFIG.OUTLET
		, $CONFIG.LANGUAGE, $typeDIST, $DIST_GRADE);

//Object Owner Type for Sub Distributor
var $typeSubDIST = new ChannelUserType($CONFIG.GEO_DOMAIN, $CONFIG.DOMAIN, $CATEGORY.SUB_DISTRIBUTER,
		$SUB_DIST_PARENT_CATEGORY.DISTRIBUTER, $userDIST_A, null);

//Object Distributor User
var $userSubDIST_A   = new User("SAHUserSubDISTA", "Com@1357", "SAHFirstSubDISTA",
		"SAHSubDISTA", "sahuser@comviva.com", $CONFIG.OUTLET,
		$CONFIG.LANGUAGE, $typeSubDIST, $SUB_DIST_GRADE);

/**
 * EXECUTION
 */
Setup();

TC_MULTI_CURRENCY_TX_01();
TC_MULTI_CURRENCY_TX_02();

/**
 * Setup required to run this test
 * Create user only if it's required
 */
function Setup(){
	var $t1 = _testcase("SETUP", "SETUP: Specific to run this Suite");
	$t1.start();
	// Create DIST User
	createChannelUser($userDIST_A);	

	// Create SDIST User
	createChannelUser($userSubDIST_A);
	
	$t1.end();
}

/**
 * To verify GUI of Multi-currency Service from web
 *
 * TC_MULTI_CURRENCY_TX_01
 */
function TC_MULTI_CURRENCY_TX_01(){
	var $t1 = _testcase("TC_MULTI_CURRENCY_TX_01", "To verify GUI of Multicurrency Service from web");
	$t1.start();
	try{
		//Get the source currencies
		var $arrSourceCurrency = getSourceCurrencyNames();
		
		/*
		 * Login as Channel User and Verify the UI
		 */
		login($userDIST_A);
		_click(_link("C2S transfer"));
		_click(_link("C2S recharge"));

		_assertVisible(_select("serviceType"));		
		
		// verify that option to select multiple Currency is available
		verifyDropdownOption(_select("serviceType"), ["Multi Currency Prepaid Recharge"]);
		_setSelected(_select("serviceType"), "Multi Currency Prepaid Recharge", "Select Option");	
		
		// Verify the Source currencies are populated now
		verifyDropdownOption(_select("currencyCode"), $arrSourceCurrency);
		
		// Verify Details
		_assertVisible(_textbox("subscriberMsisdn"));
		_assertVisible(_textbox("amount"));
		_assertVisible(_select("subServiceType"));
		_assertVisible(_select("languageCode"));
		_assertVisible(_select("currencyCode"));
		_assertVisible(_password("pin"));		
	}catch (e) {
		_logException(e);
		_log("TESTCASE FAILED -- TC_MULTI_CURRENCY_TX_01", "error");
	}
	$t1.end();
}

/**
 * To perform multi currency service from Web
 *
 * TC_MULTI_CURRENCY_TX_02
 */
function TC_MULTI_CURRENCY_TX_02(){
	var $t1 = _testcase("TC_MULTI_CURRENCY_TX_02", "To perform multi currency service from Web");
	$t1.start();
	try{
		login($userDIST_A);
		_click(_link("C2S transfer"));
		_click(_link("C2S recharge"));
		_assertVisible(_select("serviceType"));		
		_setSelected(_select("serviceType"), "Multi Currency Prepaid Recharge", "Select Option for multicurrenct transfer");
		_setValue(_textbox("subscriberMsisdn"), $userSubDIST_A.MSISDN);
		_setValue(_textbox("amount"), 100);
		_setSelected(_select("currencyCode"), "RUPEE");
		_setValue(_password("pin"), $userDIST_A.PIN);
		_click(_submit("btnSubmit"));	
		
		//TODO - Verification pending as Transaction is failing Due to IN
		_log("Verification pending as Transaction is failing Due to IN", "WARNING");

	}catch (e) {
		_logException(e);
		_log("TESTCASE FAILED -- TC_MULTI_CURRENCY_TX_02", "error");
	}
	$t1.end();
}

////////////////////////////////////////////////////////
// Help Functions
////////////////////////////////////////////////////////
/**
 * Fetch the Source Currency Names from Oracle DB
 * @returns {array[]} - source currency names
 */
function getSourceCurrencyNames(){
	var $sourceCurrency = [];
	var $result = executeQuery("Select u1.SOURCE_CURRENCY_NAME from CURRENCY_CONVERSION_MAPPING u1 , SYSTEM_PREFERENCES u2 where u2.PREFERENCE_CODE ='DEFAULT_CURRENCY' AND u1.TARGET_CURRENCY_CODE = u2.DEFAULT_VALUE");
	if($result){
		for(var $i=0; $i < $result.length; $i++){
			$sourceCurrency.push($result[$i]['SOURCE_CURRENCY_NAME']);
		}		
		_log("Source Currency - " + $sourceCurrency, "INFO");
		return $sourceCurrency;
	}else{
		_logException("Failed to fetch Default Currency - Validate DB:CURRENCY_CONVERSION_MAPPING & SYSTEM_PREFERENCES","ERROR");
	}
}
